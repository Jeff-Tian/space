{"version":3,"file":"component---src-templates-contact-js-ccb1386308c8dc2bdefc.js","mappings":"63DAYO,IAQcA,EAAAA,SAAAA,I,qRAAAA,CAAAA,EAAAA,GAAAA,I,MAAAA,EAAAA,EAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAqChB,O,EArCgBA,G,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACjB,WAAU,IAAD,OACL,OACI,gBAAC,KAAWC,KAAKC,MACf,gBAAC,IAAD,KAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,mCAAoC,SACtJ,uBAAKK,GAAG,UAAUC,UAAU,gBAC1B,wBAAMD,GAAG,OAAOC,UAAU,mBACxB,2BAASA,UAAU,uBACjB,0BAAQA,UAAU,eAChB,sBAAIA,UAAU,cAAc,IAAMP,KAAKC,MAAO,gCAAiC,QAEhF,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,uBAAKM,UAAU,kBACZC,EAAAA,EAAAA,IAAY,IAAMR,KAAKC,MAAO,mCAAoC,QAGrE,uBAAKM,UAAU,iBACZC,EAAAA,EAAAA,IAAY,IAAMR,KAAKC,MAAO,mBAAoB,OACnD,0BAAMQ,KAAM,IAAMT,KAAKC,MAAO,kCAAmC,MAAOK,GAAI,IAAMN,KAAKC,MAAO,kCAAmC,OAAY,IAAMD,KAAKC,MAAO,sCAAuC,MAAS,CAACS,OAAQ,IAAMV,KAAKC,MAAO,sCAAuC,OAAU,KAA3R,CAAiSU,OAAO,OAAO,eAAa,OAAO,wBAAsB,cACvV,uBAAKJ,UAAU,sBACb,qEAA4C,yBAAOE,KAAK,gBAE1D,yBAAOG,KAAK,SAASH,KAAK,YAAYI,MAAO,IAAMb,KAAKC,MAAO,kCAAmC,QACjG,IAAM,IAAMD,KAAKC,MAAO,sCAAuC,OAAO,SAACa,EAAOC,GAAR,OACrE,gBAAC,IAAD,GAAWC,IAAKD,GAAe,EAAKd,MAApC,CAA2Ca,MAAOA,QAEpD,uBAAKP,UAAU,eACb,0BAAQK,KAAK,SAASL,UAAU,UAAU,IAAMP,KAAKC,MAAO,uCAAwC,YAM9G,gBAAC,IAAD,KAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,mCAAoC,gB,8EAIjK,EArCgBF,CAAgBkB,EAAAA","sources":["webpack://@jeff-tian/space/./src/templates/contact.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport Header from '../components/Header';\nimport {htmlToReact} from '../utils';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Contact extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main inner\">\n                  <article className=\"post page post-full\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    </header>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                      <form name={_.get(this.props, 'pageContext.frontmatter.form_id', null)} id={_.get(this.props, 'pageContext.frontmatter.form_id', null)} {...(_.get(this.props, 'pageContext.frontmatter.form_action', null) ? ({action: _.get(this.props, 'pageContext.frontmatter.form_action', null)}) : null)}method=\"POST\" data-netlify=\"true\" data-netlify-honeypot=\"bot-field\">\n                        <div className=\"screen-reader-text\">\n                          <label>Don't fill this out if you're human: <input name=\"bot-field\" /></label>\n                        </div>\n                        <input type=\"hidden\" name=\"form-name\" value={_.get(this.props, 'pageContext.frontmatter.form_id', null)} />\n                        {_.map(_.get(this.props, 'pageContext.frontmatter.form_fields', null), (field, field_idx) => (\n                          <FormField key={field_idx} {...this.props} field={field} />\n                        ))}\n                        <div className=\"form-submit\">\n                          <button type=\"submit\" className=\"button\">{_.get(this.props, 'pageContext.frontmatter.submit_label', null)}</button>\n                        </div>\n                      </form>\n                    </div>\n                  </article>\n                </main>\n                <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              </div>\n            </Layout>\n        );\n    }\n}\n"],"names":["Contact","this","props","site","pageContext","page","image","id","className","htmlToReact","name","action","method","type","value","field","field_idx","key","React"],"sourceRoot":""}