{"version":3,"file":"component---src-templates-contact-js-22506be29ca2cbf3f47f.js","mappings":"krEAYO,IAQcA,EAAO,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,O,4FAAAK,CAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAqCvB,O,EArCuBP,G,EAAA,EAAAQ,IAAA,SAAAC,MACxB,WAAU,IAADC,EAAA,KACL,OACIC,EAAAA,cAACC,EAAAA,GAAWC,KAAKC,MACfH,EAAAA,cAACI,EAAAA,EAAMC,EAAA,GAAKH,KAAKC,MAAK,CAAEG,KAAMJ,KAAKC,MAAMI,YAAYD,KAAME,KAAMN,KAAKC,MAAMI,YAAaE,MAAOC,IAAMR,KAAKC,MAAO,mCAAoC,SACtJH,EAAAA,cAAA,OAAKW,GAAG,UAAUC,UAAU,gBAC1BZ,EAAAA,cAAA,QAAMW,GAAG,OAAOC,UAAU,mBACxBZ,EAAAA,cAAA,WAASY,UAAU,uBACjBZ,EAAAA,cAAA,UAAQY,UAAU,eAChBZ,EAAAA,cAAA,MAAIY,UAAU,cAAcF,IAAMR,KAAKC,MAAO,gCAAiC,QAEhFO,IAAMR,KAAKC,MAAO,mCAAoC,OACvDH,EAAAA,cAAA,OAAKY,UAAU,kBACZC,EAAAA,EAAAA,IAAYH,IAAMR,KAAKC,MAAO,mCAAoC,QAGrEH,EAAAA,cAAA,OAAKY,UAAU,iBACZC,EAAAA,EAAAA,IAAYH,IAAMR,KAAKC,MAAO,mBAAoB,OACnDH,EAAAA,cAAA,OAAAK,EAAA,CAAMS,KAAMJ,IAAMR,KAAKC,MAAO,kCAAmC,MAAOQ,GAAID,IAAMR,KAAKC,MAAO,kCAAmC,OAAYO,IAAMR,KAAKC,MAAO,sCAAuC,MAAS,CAACY,OAAQL,IAAMR,KAAKC,MAAO,sCAAuC,OAAU,KAAI,CAAEa,OAAO,OAAO,eAAa,OAAO,wBAAsB,cACvVhB,EAAAA,cAAA,OAAKY,UAAU,sBACbZ,EAAAA,cAAA,qDAA4CA,EAAAA,cAAA,SAAOc,KAAK,gBAE1Dd,EAAAA,cAAA,SAAOiB,KAAK,SAASH,KAAK,YAAYhB,MAAOY,IAAMR,KAAKC,MAAO,kCAAmC,QACjGe,IAAMR,IAAMR,KAAKC,MAAO,sCAAuC,OAAO,SAACgB,EAAOC,GAAS,OACtFpB,EAAAA,cAACqB,EAAAA,EAAShB,EAAA,CAACR,IAAKuB,GAAerB,EAAKI,MAAK,CAAEgB,MAAOA,IAAS,IAE7DnB,EAAAA,cAAA,OAAKY,UAAU,eACbZ,EAAAA,cAAA,UAAQiB,KAAK,SAASL,UAAU,UAAUF,IAAMR,KAAKC,MAAO,uCAAwC,YAM9GH,EAAAA,cAACsB,EAAAA,EAAMjB,EAAA,GAAKH,KAAKC,MAAK,CAAEG,KAAMJ,KAAKC,MAAMI,YAAYD,KAAME,KAAMN,KAAKC,MAAMI,YAAaE,MAAOC,IAAMR,KAAKC,MAAO,mCAAoC,UAIlK,M,8EAACd,CAAA,CArCuB,CAASW,EAAAA,U","sources":["webpack://@jeff-tian/space/./src/templates/contact.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport Header from '../components/Header';\nimport {htmlToReact} from '../utils';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Contact extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main inner\">\n                  <article className=\"post page post-full\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    </header>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                      <form name={_.get(this.props, 'pageContext.frontmatter.form_id', null)} id={_.get(this.props, 'pageContext.frontmatter.form_id', null)} {...(_.get(this.props, 'pageContext.frontmatter.form_action', null) ? ({action: _.get(this.props, 'pageContext.frontmatter.form_action', null)}) : null)}method=\"POST\" data-netlify=\"true\" data-netlify-honeypot=\"bot-field\">\n                        <div className=\"screen-reader-text\">\n                          <label>Don't fill this out if you're human: <input name=\"bot-field\" /></label>\n                        </div>\n                        <input type=\"hidden\" name=\"form-name\" value={_.get(this.props, 'pageContext.frontmatter.form_id', null)} />\n                        {_.map(_.get(this.props, 'pageContext.frontmatter.form_fields', null), (field, field_idx) => (\n                          <FormField key={field_idx} {...this.props} field={field} />\n                        ))}\n                        <div className=\"form-submit\">\n                          <button type=\"submit\" className=\"button\">{_.get(this.props, 'pageContext.frontmatter.submit_label', null)}</button>\n                        </div>\n                      </form>\n                    </div>\n                  </article>\n                </main>\n                <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              </div>\n            </Layout>\n        );\n    }\n}\n\nexport {Head} from \"../components/Layout\";"],"names":["Contact","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","_this","React","Layout","this","props","Header","_extends","site","pageContext","page","image","_get","id","className","htmlToReact","name","action","method","type","_map","field","field_idx","FormField","Footer"],"sourceRoot":""}