{"componentChunkName":"component---src-templates-post-js","path":"/posts/chvl1x","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/chvl1x","relativePath":"posts/chvl1x","frontmatter":{"title":"首次代理登录流程","stackbit_url_path":"posts/chvl1x","date":"2022-03-01T05:42:17","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=DIAde></a></p>\n<h1>First Broker Login Flow</h1>\n<p>这是在看 Keycloak 的文档时，学到了一个词，不知道怎么翻译，就先叫“首次代理登录流程”吧。</p>\n<p><a name=tz226></a></p>\n<h1>解决什么问题</h1>\n<p>在前面的视频里，我分享了一个关于手机短信验证码登录的安全问题，并以某跨国巨头的网站为例，使用自己的手机号，却登录了别人的账号。</p>\n<p><a href=\"https://player.bilibili.com/player.html?bvid=BV1Wu41197D3\">点击查看【bilibili】</a></p>\n<p>同时，也用实例展示了国内大厂的应对策略。总之，就是通过直观的感性的认知，带大家了解了为什么短信验证码直接登录不安全，以及正确的做法是怎样的。</p>\n<p>今天，参考 Keycloak 文档，从理性的逻辑的角度，来系统地分析和阐述解决方案。</p>\n<p><a name=uG3rp></a></p>\n<h1>首次登录流程</h1>\n<p>当一个用户通过身份代理人登录一个系统时，其部分用户信息被导入或者链接到了该系统的本地数据库。如果这个身份代理人是外部的，比如移动运营商，那么用户的手机号就被导入或者链接到了系统的本地数据库。</p>\n<p>这时会碰到两种情况：</p>\n<ul>\n<li>系统识别出已经有了一个被导入过和链接过的用户账号，其手机号和当前登录人的手机号一样。这时系统认为当前登录人就是系统中的用户，直接授权并进入系统。</li>\n<li>系统识别出当前登录的外部用户没有被导入或者链接过。这时一般你只需要注册并导入这个新账号到本地数据库即可，但是如果数据库中已经有了一个账号的手机号和当前登录人的手机号一样该怎么办？自动链接已有的本地账号到外部身份提供者会是一个潜在的安全漏洞，因为你不能总是相信你从外部身份提供者那里获取到的信息（这也是以上视频展示的情况）。</li>\n</ul>\n<p>以上第二种情况就是账号冲突现象，不同的组织在处理账号冲突时有不同的要求。因此在 Keycloak 的身份提供者配置中心，提供了一个叫做“首次登录流程”的选项，让你来选择一个当用户第一次从外部身份提供者登录时的工作流。它默认使用“首次代理人登录”工作流，但是你也可以配置使用自己不同的工作流。</p>\n<p>在 Keycloak 中，流程可以在管理员控制台中的“授权”标签页下配置。当你选择“首次代理人登录”，就会看到默认使用了什么授权器。</p>\n<p><a name=Omice></a></p>\n<h1>首次代理人登录流程</h1>\n<p>首次代理人登录流程的行为详情如下（虽然翻译自 Keycloak 官方文档，但是可以算是一个通用协议。不同的厂其实有对应的实现）：</p>\n<p><a name=lOcZV></a></p>\n<h2>审核、完善档案资料</h2>\n<p>授权器会展示档案资料页面，用户可以审核从身份提供者获取到的档案资料。授权器是可配置的，如果被配置成为“在第一次登录时更新资料”，用户就会在展示档案资料的页面被询问更多信息来关联身份。</p>\n<p>在某些厂，这可能是一个所谓的“完善个人资料”流程（页面）。</p>\n<p><a name=hZPEx></a></p>\n<h2>创建用户如果唯一</h2>\n<p>授权器应该去检查现有的账号，看是否存在已有账号的手机号、邮箱或者用户名与外部身份提供者提供的账号相同。如果没有，则直接创建本地账号，并且在整个流程结束后与外部身份提供者提供的账号信息链接。如果存在这样的本地账号，则进行“处理已有账号”的子流程。</p>\n<p><a name=q6TKc></a></p>\n<h2>处理已有账号（确认链接已存在的账号）</h2>\n<p>在这个阶段，用户可以选择创建一个全新的账号，或者通过回答问题证明已有账号是自己的，并且链接至已有账号。</p>\n<p>比如我尝试通过自己的新手机号，通过验证码登录百度，就会碰到这样的页面：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1646112572689-ca19e50e-3c53-4123-a713-a7ea074b641a.png#clientId=uccdb37dc-1b84-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=371&#x26;id=VvDbL&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=742&#x26;originWidth=2176&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=231628&#x26;status=done&#x26;style=none&#x26;taskId=u31bd4bde-f40c-44f3-91f6-2db221cab99&#x26;title=&#x26;width=1088\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1646112594334-aabb6075-c45d-461b-83cf-7d6bfb6e88f4.png#clientId=uccdb37dc-1b84-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=411&#x26;id=QioXG&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=822&#x26;originWidth=798&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=69725&#x26;status=done&#x26;style=none&#x26;taskId=u8c65b0ca-02be-4c77-828f-1a1ff9feacf&#x26;title=&#x26;width=399\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1646112612364-18772cb9-9e09-4af3-a96a-92aae0dd655d.png#clientId=uccdb37dc-1b84-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=404&#x26;id=xhB7n&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=808&#x26;originWidth=934&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=72566&#x26;status=done&#x26;style=none&#x26;taskId=udc480d3d-cdab-4cc3-8014-5072149eec1&#x26;title=&#x26;width=467\" alt=\"image.png\"></p>\n<p><a name=o8uwG></a></p>\n<h3>通过邮件验证已有账号</h3>\n<p>除了以上展示的百度的处理方式，还有另外的方式，比如通过发送验证码到已有账号的邮箱，用户需要输入邮箱验证码来确认自己拥有已有的账号。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1646113303794-4fd6345c-dab9-4c05-9653-e0f76b68acec.png#clientId=uccdb37dc-1b84-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=414&#x26;id=u5436a3cc&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=828&#x26;originWidth=926&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=93403&#x26;status=done&#x26;style=none&#x26;taskId=ufafe9d60-9b13-4b97-8be6-89d402260e1&#x26;title=&#x26;width=463\" alt=\"image.png\">\n<a name=tXGxe></a></p>\n<h3>重新授权已验证已有账号</h3>\n<p>这个重新验证，可以是 OTP，也可以是使用密码。比如以上百度的处理方式，就是重新使用密码验证。</p>\n<p><a name=Wkxtd></a></p>\n<h1>Keycloak 的实现</h1>\n<p>详细代码参见： <a href=\"https://github.com/keycloak/keycloak/blob/8e6489459dac322bbc61b6a63b7cb2d5aa9870af/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java\">https://github.com/keycloak/keycloak/blob/8e6489459dac322bbc61b6a63b7cb2d5aa9870af/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java</a></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1646186431218-65fc9a15-5805-4190-8010-e8a0667b6ae8.png#clientId=ucd2768ef-b277-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=387&#x26;id=u89a09326&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=774&#x26;originWidth=2040&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=88017&#x26;status=done&#x26;style=none&#x26;taskId=u5ea6ef90-3b28-4d1a-8f7b-3fc57c66d59&#x26;title=&#x26;width=1020\" alt=\"image.png\"></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}