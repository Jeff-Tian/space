{"componentChunkName":"component---src-templates-post-js","path":"/posts/Uncaught-RangeError-Maximum-call-stack-size-exceeded/","result":{"data":{"sitePage":{"id":"SitePage /posts/Uncaught-RangeError-Maximum-call-stack-size-exceeded/"}},"pageContext":{"url":"/posts/Uncaught-RangeError-Maximum-call-stack-size-exceeded/","relativePath":"posts/Uncaught-RangeError-Maximum-call-stack-size-exceeded.md","relativeDir":"posts","base":"Uncaught-RangeError-Maximum-call-stack-size-exceeded.md","name":"Uncaught-RangeError-Maximum-call-stack-size-exceeded","frontmatter":{"title":"Uncaught RangeError: Maximum call stack size exceeded","stackbit_url_path":"posts/Uncaught-RangeError-Maximum-call-stack-size-exceeded","date":"2012-03-17 20:38:52.9595073","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["javascript","memory leak","pow","循环引用"],"canonical_url":"https://be-net.azurewebsites.net/post/2012/03/17/Uncaught-RangeError-Maximum-call-stack-size-exceeded","template":"post"},"html":"<h2><font color=\"#800080\">一、问题：</font></h2>  <p>今天在做网页时突然碰到这样的JavaScript错误：</p>  <p>Uncaught RangeError: Maximum call stack size exceeded </p>  <p>百思不得其解，千次调试找不到原因。</p>  <p>表面上看，是因为递归次数太多导致内存被耗费太多，但是我的程序中，并没有一处使用递归算法啊。</p>  <h2><font color=\"#800080\">二、原因：</font></h2>  <p>最终冷静地思考了良久，终于发现，问题的根源在于网页中引用了两个不同的JavaScript库，而这两个库都对JavaScript原始对象的某些方法做了修改，从而导致出现了循环引用。具体说来，就是这么回事儿：</p>  <p>网页H引用了js库A和B，而A与B中对Math.pow方法都作了修改，如下图所示：</p>  <p><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/%E6%9C%AA%E6%A0%87%E9%A2%98-1.jpg\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px\" title=\"Maximum call stack size exceeded\" border=\"0\" alt=\"Maximum call stack size exceeded\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/%E6%9C%AA%E6%A0%87%E9%A2%98-1_thumb.jpg\" width=\"553\" height=\"504\" /></a> </p>  <p></p>  <p>如果对Math.pow()方法的修改只进行一次，那么是不会有问题的：先用Math.power存储了Math.pow的原始版本，然后再用新的代码替换Math.pow。然而，在第二个库中，又执行到 Math.power = Math.pow时，那么Math.power就不再是保存Math.pow的原始版本了，因为Math.pow已经被第一个库改成了新代码，所以在Math.pow的新代码中调用Math.power()时，本意是调用原始版本，而实际上，却是调用自己了。于是造成了循环！</p>  <p><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_491.png\"><img style=\"border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px\" title=\"Uncaught RangeError: Maximum call stack size exceeded\" border=\"0\" alt=\"Uncaught RangeError: Maximum call stack size exceeded\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_thumb_214.png\" width=\"353\" height=\"344\" /></a> </p>  <h2><font color=\"#800080\">三、解决方案：</font></h2>  <p>在进行替换前加一行判断代码，避免重复使用相同的方法名。</p>  <p>即</p>  <pre class=\"brush: javascript\">if (Math.power == null) {\r\n        // 此判断非常重要，如果Math.power 已经在别的地方定义过了，再次这样重新定义，会导致循环引用，从而引发\r\n        // Uncaught RangeError: Maximum call stack size exceeded 错误\r\n\tMath.power = Math.pow;\n<pre><code>Math.pow = function(x, y) {\r\n\tif(x != 0) {\r\n\t\treturn Math.pow(x, y);\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\n</code></pre>\n<p>} // end if</pre></p>\n<h2><font color=\"#800080\">四、备注：</font></h2>\n<p>看到这里，也许会有人感到奇怪，为什么要对原始的Math.pow()方法进行替换呢？这里的替换代码似乎除了降低它的效率外，什么也没做。实际上，这里只是说明问题原因的一个示例，所以用了蠢代码，但是简单。为什么要对Math.pow()进行替换，因为原始的Math.pow()有一个Bug，就是对负数求比如 1/3 次方，就会返回不正确的结果NaN。详细讨论见：</p>\n<h3><a href=\"http://zizhujy.com/blog/post/2012/02/21/%E5%AF%B9JavaScript%E7%9A%84Mathpow()%E5%87%BD%E6%95%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BF%AE%E6%AD%A3.aspx\">对JavaScript的Math.pow()函数的一个修正</a></h3>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}