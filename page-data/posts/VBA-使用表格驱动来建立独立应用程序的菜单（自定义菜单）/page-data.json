{"componentChunkName":"component---src-templates-post-js","path":"/posts/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）/","result":{"data":{"sitePage":{"id":"SitePage /posts/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）/"}},"pageContext":{"url":"/posts/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）/","relativePath":"posts/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）.md","relativeDir":"posts","base":"VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）.md","name":"VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）","frontmatter":{"title":"VBA 使用表格驱动来建立独立应用程序的菜单（自定义菜单）","stackbit_url_path":"posts/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）","date":"2010-02-04 07:33:55","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/02/04/VBA-使用表格驱动来建立独立应用程序的菜单（自定义菜单）","template":"post"},"html":"<pre><code>    &#x3C;style type=\"text/css\">\n</code></pre>\n<!--\n/* 仿Google的表格样式; 涂鸦， 2010-1-21 */\ntable.tbLikeGoogle \n{\n\tborder: solid 1px #CCCCCC;\n\tborder-collapse: collapse;\n\twidth: 99%;\n\tbackground-color: White;\n}\n\ntable.tbLikeGoogle tr\n{\n\tborder: solid 1px #CCCCCC;\n}\n\n/* 鼠标经过的样式 */\ntable.tbLikeGoogle tr:hover\n{\n\tbackground-color: #F1FCFF;\n}    \n\ntable.tbLikeGoogle thead tr \n{\n\tborder-bottom: solid 1px #a6a6a6;\n}\n\n/* 表头当鼠标经过时样式不变 */\ntable.tbLikeGoogle thead tr:hover\n{\n\tborder-bottom: solid 1px #a6a6a6;\n\tbackground-color: transparent;\n}\n\ntable.tbLikeGoogle tr td \n{\n\tpadding: 6px 0 6px 3px;\n\t/* IE 7 及以下不支持 tr 的border属性 */\n\tborder-top: solid 1px #CCCCCC;\n\tborder-bottom: solid 1px #CCCCCC;\n\tborder-right: solid 1px #cccccc;\n\ttext-align: left;\n}\n\n/* 链接样式 */\ntable.tbLikeGoogle tr td a:link \n{\n\tpadding: 0!important;\n\tmargin: 0!important;\n\tcolor: #2244DD!important;\n\ttext-decoration: underline!important;\n}\n\ntable.tbLikeGoogle tr td a:link \n{\n\tpadding: 0!important;\n\tmargin: 0!important;\n\tcolor: #2244DD!important;\n\ttext-decoration: underline!important;\n}\n\ntable.tbLikeGoogle tr td a:link \n{\n\tpadding: 0!important;\n\tmargin: 0!important;\n\tcolor: #2244DD!important;\n\ttext-decoration: underline!important;\n}\n\ntable.tbLikeGoogle tr td a:link \n{\n\tpadding: 0!important;\n\tmargin: 0!important;\n\tcolor: #2244DD!important;\n\ttext-decoration: underline!important;\n}\n\ntable.tbLikeGoogle thead tr th\n{\n\t/* IE 7 及以下不支持 tr 的border属性 */\n\tborder-bottom: solid 1px #a6a6a6;\n\ttext-align: left;\n\tpadding: 6px 0 6px 3px;\n\tvertical-align: top;\n}\n\ntable.tbLikeGoogle thead tr th .filter \n{\n\tfont-weight: normal;\n}\n/* 仿Google的表格样式；结束 */\n-->\n</style>\n<div style=\"text-indent: 2em;\">\n<p>《Excel 专业开发》提供了很多很好的开发框架，以表格驱动来建立自定义菜单就是其中一个很好的框架。</p>\n<p>使用表格驱动建立菜单，可以很方便很简单地管理自定义菜单，节约开发与维护成本。</p>\n<p>如果要建立如下图所示的菜单项：</p>\n<p><img src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_360.png\" alt=\"菜单\"></p>\n<p>只需要按如下格式输入自定义菜单信息：</p>\n<div style=\"width: 100%; overflow: auto;\">\n<table x:str=\"\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"2288\" style=\"border-collapse:\n collapse;table-layout:fixed;width:1722pt\" class=\"tbLikeGoogle\">\n <colgroup><col class=\"xl71\" width=\"135\" style=\"mso-width-source:userset;mso-width-alt:4320;\n width:101pt\">\n <col class=\"xl71\" width=\"102\" style=\"mso-width-source:userset;mso-width-alt:3264;\n width:77pt\">\n <col class=\"xl71\" width=\"110\" style=\"mso-width-source:userset;mso-width-alt:3520;\n width:83pt\">\n <col class=\"xl70\" width=\"116\" style=\"mso-width-source:userset;mso-width-alt:3712;\n width:87pt\">\n <col class=\"xl70\" width=\"58\" style=\"mso-width-source:userset;mso-width-alt:1856;\n width:44pt\">\n <col class=\"xl70\" width=\"76\" span=\"2\" style=\"mso-width-source:userset;mso-width-alt:\n 2432;width:57pt\">\n <col class=\"xl70\" width=\"72\" style=\"width:54pt\">\n <col class=\"xl70\" width=\"73\" style=\"mso-width-source:userset;mso-width-alt:2336;\n width:55pt\">\n <col class=\"xl70\" width=\"89\" style=\"mso-width-source:userset;mso-width-alt:2848;\n width:67pt\">\n <col class=\"xl70\" width=\"73\" style=\"mso-width-source:userset;mso-width-alt:2336;\n width:55pt\">\n <col class=\"xl70\" width=\"62\" style=\"mso-width-source:userset;mso-width-alt:1984;\n width:47pt\">\n <col class=\"xl70\" width=\"68\" style=\"mso-width-source:userset;mso-width-alt:2176;\n width:51pt\">\n <col class=\"xl70\" width=\"89\" style=\"mso-width-source:userset;mso-width-alt:2848;\n width:67pt\">\n <col class=\"xl70\" width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2720;\n width:64pt\">\n <col class=\"xl70\" width=\"133\" style=\"mso-width-source:userset;mso-width-alt:4256;\n width:100pt\">\n <col class=\"xl70\" width=\"90\" style=\"mso-width-source:userset;mso-width-alt:2880;\n width:68pt\">\n <col class=\"xl70\" width=\"86\" style=\"mso-width-source:userset;mso-width-alt:2752;\n width:65pt\">\n <col class=\"xl70\" width=\"170\" style=\"mso-width-source:userset;mso-width-alt:5440;\n width:128pt\">\n <col class=\"xl70\" width=\"105\" style=\"mso-width-source:userset;mso-width-alt:3360;\n width:79pt\">\n <col class=\"xl70\" width=\"93\" span=\"2\" style=\"mso-width-source:userset;mso-width-alt:\n 2976;width:70pt\">\n <col class=\"xl70\" width=\"72\" style=\"width:54pt\">\n <col class=\"xl70\" width=\"86\" style=\"mso-width-source:userset;mso-width-alt:2752;\n width:65pt\">\n <col class=\"xl70\" width=\"76\" style=\"mso-width-source:userset;mso-width-alt:2432;\n width:57pt\">\n </colgroup><tbody><tr class=\"xl69\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" class=\"xl66\" width=\"135\" style=\"height:12.75pt;width:101pt\"><a name=\"TableStart\">Command Bar Name</a><!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_1\" onmouseover=\"msoCommentShow('_com_1','_anchor_1')\" onmouseout=\"msoCommentHide('_com_1')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_1\" name=\"_msoanchor_1\">[1]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"102\" style=\"width:77pt\">Control Caption<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_2\" onmouseover=\"msoCommentShow('_com_2','_anchor_2')\" onmouseout=\"msoCommentHide('_com_2')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_2\" name=\"_msoanchor_2\">[2]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"110\" style=\"width:83pt\">Control Caption<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_3\" onmouseover=\"msoCommentShow('_com_3','_anchor_3')\" onmouseout=\"msoCommentHide('_com_3')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_3\" name=\"_msoanchor_3\">[3]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"116\" style=\"width:87pt\">Control Caption<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_4\" onmouseover=\"msoCommentShow('_com_4','_anchor_4')\" onmouseout=\"msoCommentHide('_com_4')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_4\" name=\"_msoanchor_4\">[4]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"58\" style=\"width:44pt\">Position<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_5\" onmouseover=\"msoCommentShow('_com_5','_anchor_5')\" onmouseout=\"msoCommentHide('_com_5')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_5\" name=\"_msoanchor_5\">[5]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"76\" style=\"width:57pt\">IsMenubar<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_6\" onmouseover=\"msoCommentShow('_com_6','_anchor_6')\" onmouseout=\"msoCommentHide('_com_6')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_6\" name=\"_msoanchor_6\">[6]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"76\" style=\"width:57pt\">Visible<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_7\" onmouseover=\"msoCommentShow('_com_7','_anchor_7')\" onmouseout=\"msoCommentHide('_com_7')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_7\" name=\"_msoanchor_7\">[7]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"72\" style=\"width:54pt\">Width<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_8\" onmouseover=\"msoCommentShow('_com_8','_anchor_8')\" onmouseout=\"msoCommentHide('_com_8')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_8\" name=\"_msoanchor_8\">[8]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"73\" style=\"width:55pt\">Protection<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_9\" onmouseover=\"msoCommentShow('_com_9','_anchor_9')\" onmouseout=\"msoCommentHide('_com_9')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_9\" name=\"_msoanchor_9\">[9]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"89\" style=\"width:67pt\">IsTemporary<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_10\" onmouseover=\"msoCommentShow('_com_10','_anchor_10')\" onmouseout=\"msoCommentHide('_com_10')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_10\" name=\"_msoanchor_10\">[10]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"73\" style=\"width:55pt\">IsEnabled<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_11\" onmouseover=\"msoCommentShow('_com_11','_anchor_11')\" onmouseout=\"msoCommentHide('_com_11')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_11\" name=\"_msoanchor_11\">[11]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"62\" style=\"width:47pt\">OnAction<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_12\" onmouseover=\"msoCommentShow('_com_12','_anchor_12')\" onmouseout=\"msoCommentHide('_com_12')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_12\" name=\"_msoanchor_12\">[12]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"68\" style=\"width:51pt\">Control ID<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_13\" onmouseover=\"msoCommentShow('_com_13','_anchor_13')\" onmouseout=\"msoCommentHide('_com_13')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_13\" name=\"_msoanchor_13\">[13]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"89\" style=\"width:67pt\">Control Type<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_14\" onmouseover=\"msoCommentShow('_com_14','_anchor_14')\" onmouseout=\"msoCommentHide('_com_14')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_14\" name=\"_msoanchor_14\">[14]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"85\" style=\"width:64pt\">Control Style<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_15\" onmouseover=\"msoCommentShow('_com_15','_anchor_15')\" onmouseout=\"msoCommentHide('_com_15')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_15\" name=\"_msoanchor_15\">[15]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"133\" style=\"width:100pt\">Face ID<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_16\" onmouseover=\"msoCommentShow('_com_16','_anchor_16')\" onmouseout=\"msoCommentHide('_com_16')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_16\" name=\"_msoanchor_16\">[16]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"90\" style=\"width:68pt\">Begin Group<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_17\" onmouseover=\"msoCommentShow('_com_17','_anchor_17')\" onmouseout=\"msoCommentHide('_com_17')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_17\" name=\"_msoanchor_17\">[17]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"86\" style=\"width:65pt\">Before<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_18\" onmouseover=\"msoCommentShow('_com_18','_anchor_18')\" onmouseout=\"msoCommentHide('_com_18')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_18\" name=\"_msoanchor_18\">[18]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"170\" style=\"width:128pt\">Tooltip<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_19\" onmouseover=\"msoCommentShow('_com_19','_anchor_19')\" onmouseout=\"msoCommentHide('_com_19')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_19\" name=\"_msoanchor_19\">[19]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"105\" style=\"width:79pt\">Shortcut Text<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_20\" onmouseover=\"msoCommentShow('_com_20','_anchor_20')\" onmouseout=\"msoCommentHide('_com_20')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_20\" name=\"_msoanchor_20\">[20]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"93\" style=\"width:70pt\">Tag<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_21\" onmouseover=\"msoCommentShow('_com_21','_anchor_21')\" onmouseout=\"msoCommentHide('_com_21')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_21\" name=\"_msoanchor_21\">[21]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"93\" style=\"width:70pt\">Parameter<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_22\" onmouseover=\"msoCommentShow('_com_22','_anchor_22')\" onmouseout=\"msoCommentHide('_com_22')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_22\" name=\"_msoanchor_22\">[22]</a></span></span><!--[endif]--></td>\n  <td class=\"xl67\" width=\"72\" style=\"width:54pt\">State<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_23\" onmouseover=\"msoCommentShow('_com_23','_anchor_23')\" onmouseout=\"msoCommentHide('_com_23')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_23\" name=\"_msoanchor_23\">[23]</a></span></span><!--[endif]--></td>\n  <td class=\"xl66\" width=\"86\" style=\"width:65pt\">ListRange<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_24\" onmouseover=\"msoCommentShow('_com_24','_anchor_24')\" onmouseout=\"msoCommentHide('_com_24')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_24\" name=\"_msoanchor_24\">[24]</a></span></span><!--[endif]--></td>\n  <td class=\"xl68\" width=\"76\" style=\"width:57pt\">Lists<!--[if !supportAnnotations]--><span class=\"msocomspan1\"><span class=\"msocomspan2\" id=\"_anchor_25\" onmouseover=\"msoCommentShow('_com_25','_anchor_25')\" onmouseout=\"msoCommentHide('_com_25')\" language=\"JavaScript\"><a class=\"msocomanch\" href=\"#_msocom_25\" name=\"_msoanchor_25\">[25]</a></span></span><!--[endif]--></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" class=\"xl70\" style=\"height:12.75pt\">Worksheet Menu Bar</td>\n  <td colspan=\"24\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" class=\"xl70\" style=\"height:12.75pt\"></td>\n  <td class=\"xl70\">mf-Utility</td>\n  <td colspan=\"11\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\" x:fmla=\"=msoControlPopup\">10</td>\n  <td colspan=\"3\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\">Window</td>\n  <td colspan=\"7\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\">拆分表格<font class=\"font5\">(&amp;S)</font></td>\n  <td colspan=\"8\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">M<font class=\"font5\">enuSplitTable</font></td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">461</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">S<font class=\"font5\">plit\n  one table to more tables</font></td>\n  <td colspan=\"5\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\" colspan=\"2\" style=\"mso-ignore:colspan\">多表模式拆分记录<font class=\"font5\">(&amp;R)</font></td>\n  <td colspan=\"7\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">M<font class=\"font5\">enuSplitTable_MultiSheets</font></td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">461</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">S<font class=\"font5\">plit\n  one table to more tables with multi sheets</font></td>\n  <td colspan=\"4\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\" colspan=\"2\" style=\"mso-ignore:colspan\">多表模式拆分记录二<font class=\"font5\">(&amp;M)</font></td>\n  <td colspan=\"7\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">MenuSplitTable_MultiSheets_Mode2</td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">461</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">S<font class=\"font5\">plit\n  one table to more tables with multi sheets</font></td>\n  <td colspan=\"4\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\">导出记录<font class=\"font5\">(&amp;E)</font></td>\n  <td colspan=\"8\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">M<font class=\"font5\">enuExtractRecords</font></td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">659</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\">E<font class=\"font5\">xtract records</font></td>\n  <td colspan=\"6\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\" colspan=\"2\" style=\"mso-ignore:colspan\">多表模式导出记录<font class=\"font5\">(&amp;T)</font></td>\n  <td colspan=\"7\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">MenuExtractRecords_MultiSheets</td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">659</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">Extract records with\n  multi-sheets</td>\n  <td colspan=\"5\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\">删除文件夹<font class=\"font5\">(&amp;D)</font></td>\n  <td colspan=\"7\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"center\" x:bool=\"FALSE\">FALSE</td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">M<font class=\"font5\">enuDeleteFolders</font></td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">2500</td>\n  <td class=\"xl70\" align=\"center\" x:bool=\"TRUE\">TRUE</td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\">D<font class=\"font5\">elete folders</font></td>\n  <td colspan=\"6\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\">在线帮助<font class=\"font5\">(&amp;H)</font></td>\n  <td colspan=\"8\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" colspan=\"2\" style=\"mso-ignore:colspan\">MenuOnlineHelp</td>\n  <td colspan=\"2\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">4087</td>\n  <td class=\"xl70\" align=\"center\" x:bool=\"TRUE\">TRUE</td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\" colspan=\"3\" style=\"mso-ignore:colspan\">Online help\n  (Website:http://www.myfootprints.cn)</td>\n  <td colspan=\"4\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"2\" class=\"xl70\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td class=\"xl72\">退出<font class=\"font5\">(&amp;X)</font></td>\n  <td colspan=\"8\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\">AppExit</td>\n  <td colspan=\"3\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n  <td class=\"xl70\" align=\"right\" x:num=\"\">868</td>\n  <td class=\"xl70\" align=\"center\" x:bool=\"TRUE\">TRUE</td>\n  <td class=\"xl70\"></td>\n  <td class=\"xl70\">E<font class=\"font5\">xit My Footprints Utility</font></td>\n  <td colspan=\"6\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" class=\"xl71\" style=\"height:12.75pt\">Stop</td>\n  <td colspan=\"2\" class=\"xl71\" style=\"mso-ignore:colspan\"></td>\n  <td colspan=\"22\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <tr class=\"xl70\" height=\"17\" style=\"height:12.75pt\">\n  <td height=\"17\" colspan=\"3\" class=\"xl71\" style=\"height:12.75pt;mso-ignore:colspan\"></td>\n  <td colspan=\"22\" class=\"xl70\" style=\"mso-ignore:colspan\"></td>\n </tr>\n <!--[if supportMisalignedColumns]-->\n <tr height=\"0\" style=\"display:none\">\n  <td width=\"135\" style=\"width:101pt\"></td>\n  <td width=\"102\" style=\"width:77pt\"></td>\n  <td width=\"110\" style=\"width:83pt\"></td>\n  <td width=\"116\" style=\"width:87pt\"></td>\n  <td width=\"58\" style=\"width:44pt\"></td>\n  <td width=\"76\" style=\"width:57pt\"></td>\n  <td width=\"76\" style=\"width:57pt\"></td>\n  <td width=\"72\" style=\"width:54pt\"></td>\n  <td width=\"73\" style=\"width:55pt\"></td>\n  <td width=\"89\" style=\"width:67pt\"></td>\n  <td width=\"73\" style=\"width:55pt\"></td>\n  <td width=\"62\" style=\"width:47pt\"></td>\n  <td width=\"68\" style=\"width:51pt\"></td>\n  <td width=\"89\" style=\"width:67pt\"></td>\n  <td width=\"85\" style=\"width:64pt\"></td>\n  <td width=\"133\" style=\"width:100pt\"></td>\n  <td width=\"90\" style=\"width:68pt\"></td>\n  <td width=\"86\" style=\"width:65pt\"></td>\n  <td width=\"170\" style=\"width:128pt\"></td>\n  <td width=\"105\" style=\"width:79pt\"></td>\n  <td width=\"93\" style=\"width:70pt\"></td>\n  <td width=\"93\" style=\"width:70pt\"></td>\n  <td width=\"72\" style=\"width:54pt\"></td>\n  <td width=\"86\" style=\"width:65pt\"></td>\n  <td width=\"76\" style=\"width:57pt\"></td>\n </tr>\n <!--[endif]-->\n</tbody></table>\n</div>\n<p>以下程序(MCommandBars.bas)将会根据如上输入的信息，自动构建出自定义的菜单。当需要更改、删除或者添加自定义的菜单项时，只需要在上面的表格中修改即可，而不需要更改程序代码。</p>\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">'\n' Description:  This module builds the custom CommandBars specified by the\n'               entries in the wksCommandBars worksheet table.\n'\n' Authors:      Stephen Bullen, www.oaltd.co.uk\n'               Rob Bovey, www.appspro.com\n'\n' Chapter Change Overview\n' Ch#   Comment\n' --------------------------------------------------------------\n' 06    Initial version\n' 07    Added Window menu to support multiple-document interface\n' 08    Replaced the item-by-item method of v7 with a new table-driven\n'       commandbar builder. The wksCommandBars worksheet contains the table.\n' 12    Added error handling to all non-trivial procedures.\n'\nOption Explicit\nOption Private Module\n<p>' ****************************************************************************\n' Module Constant Declarations Follow\n' ****************************************************************************\nPrivate Const msMODULE As String = \"MCommandBars\"</p>\n<p>Private Const mlMAX_TABLE_ROWS As Long = 10000      ' The maximum number of rows the routine will use (just a safety precaution).\nPrivate Const mlPROPERTY_NOT_SET As Long = -9999    ' Indicates that a Long data type property was not specified (0 is a valid setting for many CommandBarControl Long properties).\nPrivate Const mlCUSTOM_CONTROL As Long = 1          ' Indicates that the control will be a custom control, not a built-in control.</p>\n<p>'''''' wksCommandBars worksheet table range name constants. ''''''''''''''''''\n' Marks the first cell in the CommandBar definition table.\nPrivate Const msRNG_TABLE_START As String = \"TableStart\"</p>\n<p>' These properties apply only to CommandBars.\nPrivate Const msCOL_POSITION As String = \"Position\"\nPrivate Const msCOL_IS_MENU_BAR As String = \"IsMenubar\"\nPrivate Const msCOL_VISIBLE As String = \"Visible\"\nPrivate Const msCOL_PROTECTION As String = \"Protection\"</p>\n<p>' These properties apply to both CommandBars and CommandBarControls.\nPrivate Const msCOL_WIDTH As String = \"Width\"\nPrivate Const msCOL_IS_TEMPORARY As String = \"IsTemporary\"\nPrivate Const msCOL_IS_ENABLED As String = \"IsEnabled\"</p>\n<p>' These properties apply only to CommandBarControls.\nPrivate Const msCOL_ONACTION As String = \"OnAction\"\nPrivate Const msCOL_CONTROL_ID As String = \"ControlID\"\nPrivate Const msCOL_CONTROL_TYPE As String = \"ControlType\"\nPrivate Const msCOL_CONTROL_STYLE As String = \"ControlStyle\"\nPrivate Const msCOL_FACE_ID As String = \"FaceID\"\nPrivate Const msCOL_BEGIN_GROUP As String = \"BeginGroup\"\nPrivate Const msCOL_BEFORE As String = \"Before\"\nPrivate Const msCOL_TOOLTIP As String = \"Tooltip\"\nPrivate Const msCOL_SHORTCUT_TEXT As String = \"ShortcutText\"\nPrivate Const msCOL_TAG As String = \"Tag\"\nPrivate Const msCOL_PARAMETER As String = \"Parameter\"\nPrivate Const msCOL_STATE As String = \"State\"\nPrivate Const msCOL_LIST_RANGE As String = \"ListRange\"</p>\n<p>' ****************************************************************************\n' Module Type Declaractions Follow\n' ****************************************************************************\n' This type structure holds the data for a single command bar. The elements\n' are listed in the order in which they appear in the wksCommandBars table.\nPrivate Type COMMANDBAR_PROPERTIES\nsBarName As String      ' The name of the CommandBar.\nlPosition As Long       ' The location of the CommandBar.\nbIsMenuBar As Boolean   ' Whether or not the CommandBar will be a menu bar.\nbVisible As Boolean     ' Whether or not the CommandBar will be made immediately visible.\nlWidth As Long          ' You can specify a width for msoBarFloating command bars.\nlProtection As Long     ' Controls what kinds of changes the user will be allowed to make to the CommandBar.\nbIsTemporary As Boolean ' Whether the CommandBar will persist between sessions.\nbIsEnabled As Boolean   ' Whether the CommandBar will be enabled upon creation. Disabled CommandBars are not visible to the user.\nEnd Type</p>\n<p>' This type structure holds the data for a single command bar control.\n' The elements are listed in the order in which they appear in the wksCommandBars table.\nPrivate Type CONTROL_PROPERTIES\nsControlName As String  ' The name of the control.\nlWidth As Long          ' The width of the control.\nbIsTemporary As Boolean ' Whether the control will persist between sessions.\nbIsEnabled As Boolean   ' Whether the control will be enabled upon creation.\nsOnAction As String     ' The macro assigned to the control.\nlControlID As Long      ' Used to specify a built-in control.\nlControlType As Long    ' What kind of control this is.\nlControlStyle As Long   ' Applies only to controls of lControlType msoControlButton. Specifies the appearance of the control.\nvFaceID As Variant      ' Used to specify the control face to be used.\nbBeginGroup As Boolean  ' Whether this control has a separator bar above/left of it.\nlBefore As Long         ' The index of the control to add the control before.\nsTooltip As String      ' The tootip for this control.\nsShortcutKey As String  ' The shortcut key, if any. This just displays the shortcut key. The shortcut key must be <em>set</em> in the caption.\nsTag As String          ' String data type storage for the programmer's use.\nvParameter As Variant   ' Variant data type storage for the programmer's use.\nlState As Long          ' Specifies whether the button should be depressed or normal upon creation.\nrngListRange As Excel.Range   ' The list used to populate dropdown and combobox controls.\nEnd Type</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Creates a set of CommandBars based on the entries in the\n'           wksCommandBars worksheet table.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/14/04      Stephen Bullen  Ch08    Set protection after all controls have been added\n'                                       Also added initial call to ResetCommandBars\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPublic Function bBuildCommandBars() As Boolean</p>\n<pre><code>Const sSOURCE As String = \"bBuildCommandBars()\"\n\nDim bReturn As Boolean                          ' The function return value.\nDim uCommandBarAtr As COMMANDBAR_PROPERTIES     ' The attribute type structures for the CommandBars.\nDim uCtlProperties As CONTROL_PROPERTIES        ' The attribute type structures for the CommandBarControls.\nDim rngCurrentBarStart As Excel.Range           ' The first cell of the current command bar definition.\nDim rngCurrentBarStop As Excel.Range            ' The first cell of the current command bar definition.\nDim rngCurrentControlStart As Excel.Range       ' The cell holding the name of the control currently being added to the command bar.\nDim rngCurrentRow As Excel.Range                ' The current CommandBar definition table row being read.\nDim rngTemp As Excel.Range\nDim cbrCurrentBar As Office.CommandBar          ' The commandbar currently being built or modified.\nDim ctlTopControl As Office.CommandBarControl   ' Used to test the return value of ctlAddNewControl.\n\nOn Error GoTo ErrorHandler\n\n' Assume success until an error is encountered.\nbReturn = True\n\n' Remove any previous command bars that may be left over from a crash.\nResetCommandBars\n\n' Set a reference to the starting cell of the first command bar definition.\nSet rngCurrentBarStart = wksCommandBars.Range(msRNG_TABLE_START).Offset(1, 0)\n\n'# Edit By myfootprints.cn@gmail.com 2008-12-01\nIf rngCurrentBarStart Is Nothing Then\n    'Set rngCurrentBarStart = wksCommandBars.Range(\"A1\").Offset(1, 0)\n    Err.Raise -1, sSOURCE, \"The worksheet wksCommandBars is not been set correctly. Please check the name defenition.\"\nEnd If\n'# Edit End\n\n' Start the Add CommandBar loop.\nDo While rngCurrentBarStart.Row &#x26;lt; mlMAX_TABLE_ROWS\n\n    ' Find the last cell in the current CommandBar definition.\n    Set rngCurrentBarStop = rngCurrentBarStart.End(xlDown)\n    Set rngCurrentRow = rngCurrentBarStart.EntireRow\n    \n    ' Get the name of the CommandBar.\n    uCommandBarAtr.sBarName = Trim$(rngCurrentBarStart.value)\n    \n    ' If a CommandBar by the name of sCurrentBar doesn't already exist then add one.\n    If Not bCommandbarExists(uCommandBarAtr.sBarName, cbrCurrentBar) Then\n    \n        ' Load the CommandBar type structure with the properties of the CommandBar\n        ' being added. Default values are loaded for unspecified properties.\n        With uCommandBarAtr\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_POSITION))\n            If IsEmpty(rngTemp.value) Then .lPosition = msoBarTop Else .lPosition = CLng(rngTemp.value)\n            If .lPosition = msoBarPopup Then\n                .bIsMenuBar = False\n            Else\n                .bIsMenuBar = CBool(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_IS_MENU_BAR)).value)\n            End If\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_VISIBLE))\n            ' The Visible property *must* be false for msoBarPopup type CommandBars.\n            If .lPosition = msoBarPopup Then .bVisible = False Else .bVisible = CBool(rngTemp.value)\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_WIDTH))\n            ' The Width property only applies to msoBarFloating type CommandBars.\n            If IsEmpty(rngTemp.value) Or .lPosition &#x26;lt;&#x26;gt; msoBarFloating Then .lWidth = mlPROPERTY_NOT_SET Else .lWidth = CLng(rngTemp.value)\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_PROTECTION))\n            If IsEmpty(rngTemp.value) Then .lProtection = msoBarNoCustomize Else .lProtection = CLng(rngTemp.value)\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_IS_TEMPORARY))\n            If IsEmpty(rngTemp.value) Then .bIsTemporary = True Else .bIsTemporary = CBool(rngTemp.value)\n            Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_IS_ENABLED))\n            If IsEmpty(rngTemp.value) Then .bIsEnabled = True Else .bIsEnabled = CBool(rngTemp.value)\n        End With\n        \n        If Not bAddNewCommandBar(uCommandBarAtr) Then Err.Raise glHANDLED_ERROR\n        \n        Set cbrCurrentBar = Application.CommandBars(uCommandBarAtr.sBarName)\n    \n    End If\n\n    ' Set a reference to the postion of the first control for sCurrentBar\n    Set rngCurrentControlStart = rngCurrentBarStart.Offset(0, 1).End(xlDown)\n\n    ' The add controls loop.\n    Do While rngCurrentControlStart.Row &#x26;lt; rngCurrentBarStop.Row\n    \n        ' Load the control attribute type structure.\n        If Not bLoadControlAttributes(rngCurrentControlStart, uCtlProperties, cbrCurrentBar) Then Err.Raise glHANDLED_ERROR\n        \n        ' If sCurrentControl has sub-controls it will be a CommandBarPopup.\n        If Len(rngCurrentControlStart.Offset(1, 1).value) &#x26;gt; 0 Then\n        \n            ' Check to see if it exists already. Add it if it doesn't.\n            If Not bControlExists(cbrCurrentBar, uCtlProperties.sControlName) Then\n                Set ctlTopControl = Nothing\n                Set ctlTopControl = ctlAddNewControl(cbrCurrentBar, uCtlProperties)\n                If ctlTopControl Is Nothing Then Err.Raise glHANDLED_ERROR\n            Else\n                Set ctlTopControl = cbrCurrentBar.Controls(uCtlProperties.sControlName)\n            End If\n            \n            ' Add the sub-controls the the CommandBarPopup.\n            If Not bAddSubControls(ctlTopControl, rngCurrentControlStart, rngCurrentBarStop.Row) Then Err.Raise glHANDLED_ERROR\n            \n        Else    ' If sCurrentControl has no sub-controls then set its properties directly.\n        \n            ' Only add it if it doesn't already exist.\n            If Not bControlExists(cbrCurrentBar, uCtlProperties.sControlName) Then\n                Set ctlTopControl = Nothing\n                Set ctlTopControl = ctlAddNewControl(cbrCurrentBar, uCtlProperties)\n                If ctlTopControl Is Nothing Then Err.Raise glHANDLED_ERROR\n            End If\n            \n        End If\n        \n        ' Reset the starting point for the next control.\n        If Len(rngCurrentControlStart.Offset(1, 0).value) &#x26;gt; 0 Then\n            Set rngCurrentControlStart = rngCurrentControlStart.Offset(1, 0)\n        Else\n            Set rngCurrentControlStart = rngCurrentControlStart.End(xlDown)\n        End If\n        \n    Loop\n\n    ' CommandBar width and protection can't be set until after the controls have been added.\n    If uCommandBarAtr.lWidth &#x26;gt; 0 Then cbrCurrentBar.Width = uCommandBarAtr.lWidth\n    If Not cbrCurrentBar.BuiltIn Then cbrCurrentBar.Protection = uCommandBarAtr.lProtection\n\n    ' Reset the starting point for the next command bar.\n    Set rngCurrentBarStart = rngCurrentBarStop.End(xlDown)\n\nLoop\n</code></pre>\n<p>ErrorExit:</p>\n<pre><code>' This is required to get any FaceID pictures that we've copied out of\n' the clipboard (Application.CutCopyMode = False alone doesn't work).\nwksCommandBars.Range(\"A1\").Copy\nApplication.CutCopyMode = False\nbBuildCommandBars = bReturn\nExit Function\n</code></pre>\n<p>ErrorHandler:\nIf Err.Number &#x3C;> glHANDLED_ERROR Then Err.Description = Err.Description &#x26; \" (\" &#x26; sSOURCE &#x26; \")\"\nbReturn = False\nIf bCentralErrorHandler(msMODULE, sSOURCE) Then\nStop\nResume\nElse\nResume ErrorExit\nEnd If\nEnd Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Reads the CommandBars table and removes all custom CommandBars and\n'           controls defined there.\n'           This code makes the implicit assumption that cascading submenus\n'           are either 100% built-in or 100% custom.\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPublic Sub ResetCommandBars()</p>\n<pre><code>Dim rngCurrentBarStart As Excel.Range       ' The first cell of the current command bar definition.\nDim rngCurrentBarStop As Excel.Range        ' The first cell of the current command bar definition.\nDim rngCurrentControlStart As Excel.Range   ' The cell holding the name of the control currently being added to the command bar.\nDim lSubMenuCount As Long\nDim cbrBar As Office.CommandBar\nDim ctlMenuControl As Office.CommandBarControl\nDim sCurrentBar As String                   ' Holds the name of the command bar currently being built.\nDim sCurrentControl As String               ' The name of the Control currently being deleted.\nDim sSubMenu As String                      ' The current submenu.\n\nIf gbDEBUG_MODE Then\n    On Error GoTo 0\nElse\n    On Error Resume Next\nEnd If\n\n' Set a reference to the starting cell of the first command bar definition.\nSet rngCurrentBarStart = wksCommandBars.Range(msRNG_TABLE_START).Offset(1, 0)\n\n'# Edit By myfootprints.cn@gmail.com 2088-8-2\nIf rngCurrentBarStart Is Nothing Then\n    ' If rngCurrentBarStart is still nothing, give it a default value\n    Set rngCurrentBarStart = wksCommandBars.Range(\"A1\").Offset(1, 0)\nEnd If\n'# Edit End\n\n' Start processing the CommandBars table.\nDo While rngCurrentBarStart.Row &#x26;lt; mlMAX_TABLE_ROWS\n\n    ' Find the last cell in the current command bar definition.\n    Set rngCurrentBarStop = rngCurrentBarStart.End(xlDown)\n    \n    ' Grab the name of the current command bar.\n    sCurrentBar = Trim$(rngCurrentBarStart.value)\n\n    ' Only continue if the CommandBar has not already been deleted.\n    If bCommandbarExists(sCurrentBar, cbrBar) Then\n\n        ' If the whole CommandBar is custom then just delete it.\n        If Not cbrBar.BuiltIn Then\n            cbrBar.Delete\n        Else    ' Otherwise loop through and check each control.\n        \n            ' Set a reference to the postion of the first control for sCurrentBar\n            Set rngCurrentControlStart = rngCurrentBarStart.Offset(0, 1).End(xlDown)\n    \n            ' Loop the top-level controls.\n            Do While rngCurrentControlStart.Row &#x26;lt; rngCurrentBarStop.Row\n            \n                ' The name of the control to check.\n                sCurrentControl = Trim$(rngCurrentControlStart.value)\n\n                ' Only continue if the control has not already been deleted.\n                If bControlExists(cbrBar, sCurrentControl) Then\n                \n                    Set ctlMenuControl = cbrBar.Controls(sCurrentControl)\n                            \n                    ' If it's custom delete it, otherwise continue.\n                    If Not ctlMenuControl.BuiltIn Then\n                        ctlMenuControl.Delete\n                    Else\n                    \n                        ' If the top-level control has sub-controls, loop them.\n                        If Len(rngCurrentControlStart.Offset(1, 1).value) &#x26;gt; 0 Then\n                        \n                            lSubMenuCount = 1\n                            \n                            Do While rngCurrentControlStart.Offset(lSubMenuCount, 1).Row &#x26;lt; rngCurrentBarStop.Row\n                                sSubMenu = Trim$(rngCurrentControlStart.Offset(lSubMenuCount, 1).value)\n                                If Len(sSubMenu) &#x26;gt; 0 Then\n                                    ' Delete the submenu if it isn't built-in.\n                                    With ctlMenuControl.Controls(sSubMenu)\n                                        If Not .BuiltIn Then .Delete\n                                    End With\n                                End If\n                                lSubMenuCount = lSubMenuCount + 1\n                            Loop\n                            \n                        End If\n                    \n                    End If\n                \n                End If\n                \n                ' Reset the starting point for the next control.\n                If Len(rngCurrentControlStart.Offset(1, 0).value) &#x26;gt; 0 Then\n                    Set rngCurrentControlStart = rngCurrentControlStart.Offset(1, 0)\n                Else\n                    Set rngCurrentControlStart = rngCurrentControlStart.End(xlDown)\n                End If\n                \n            Loop\n        \n        End If\n        \n    End If\n    \n    ' Reset the starting point for the next command bar.\n    Set rngCurrentBarStart = rngCurrentBarStop.End(xlDown)\n   \nLoop\n   \n</code></pre>\n<p>End Sub</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Adds sub-controls to a CommandBarPopup control.\n'\n' Arguments:    ctlTopControl       The CommandBarPopup to which controls will\n'                                   be added.\n'               rngCurControlStart  The cell in wksCommandBars at which the\n'                                   definition of ctlTopControl begins.\n'               lBarStopRow         The last row in the current CommandBar\n'                                   definition.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPrivate Function bAddSubControls(ByRef ctlTopControl As Office.CommandBarPopup, ByRef rngCurControlStart As Excel.Range, ByVal lBarStopRow As Long) As Boolean</p>\n<pre><code>Const sSOURCE As String = \"bAddSubControls()\"\n\nDim bReturn As Boolean\nDim uCtlProperties As CONTROL_PROPERTIES\nDim rngCurLevel1Control As Excel.Range          ' The table definition range of the Level1Control being added.\nDim rngCurLevel2Control As Excel.Range          ' The table definition range of the Level2Control being added.\nDim lTopControlStopRow As Long                  ' The last row in the top control's table definition.\nDim lSubMenuItemStopRow As Long                 ' The last row in the Level2Control control's table definition.\nDim ctlControlItem As Office.CommandBarControl  ' A reference to the first level control being added (used when level 2 controls are specified).\nDim ctlReturn As Office.CommandBarControl       ' Tests the return value of the ctlAddNewControl function.\n\nOn Error GoTo ErrorHandler\n\n' Assume success until an error is encountered.\nbReturn = True\n\n' Set a reference to the table definition range of the Level1Control being added.\nSet rngCurLevel1Control = rngCurControlStart.Offset(1, 1)\n\n' Grab the number of the last row in the top control's table definition.\nlTopControlStopRow = rngCurControlStart.End(xlDown).Row\n\n' Make sure we don't read past the end of the command bar definition\nIf lTopControlStopRow &#x26;gt; lBarStopRow Then lTopControlStopRow = lBarStopRow\n\n' Add sub-controls loop.\nDo While rngCurLevel1Control.Row &#x26;lt; lTopControlStopRow\n    \n    ' Load the control attribute type structure.\n    If Not bLoadControlAttributes(rngCurLevel1Control, uCtlProperties, ctlTopControl) Then Err.Raise glHANDLED_ERROR\n    \n    ' If True, it's an msoControlPopup, otherwise it's an msoControlButton.\n    If Len(rngCurLevel1Control.Offset(1, 0).value) = 0 And Len(rngCurLevel1Control.Offset(1, 1).value) &#x26;gt; 0 Then\n    \n        ' Add the msoControlPopup.\n        If Not bControlExists(ctlTopControl, uCtlProperties.sControlName) Then\n            Set ctlControlItem = Nothing\n            Set ctlControlItem = ctlAddNewControl(ctlTopControl, uCtlProperties)\n            If ctlControlItem Is Nothing Then Err.Raise glHANDLED_ERROR\n        Else\n            ' Set a reference to the existing control\n            Set ctlControlItem = ctlTopControl.Controls(uCtlProperties.sControlName)\n        End If\n        \n        ' Grab the last row in the Level 2 control's table definition.\n        If Len(rngCurLevel1Control.Offset(2, 1).value) = 0 Then\n            ' Only a single level 2 control.\n            lSubMenuItemStopRow = rngCurLevel1Control.Offset(1, 1).Row\n        Else\n            ' Multiple level 2 controls.\n            lSubMenuItemStopRow = rngCurLevel1Control.Offset(1, 1).End(xlDown).Row\n        End If\n        \n        ' Add the msoControlPopup sub-controls.\n        If lSubMenuItemStopRow &#x26;lt; lTopControlStopRow Then\n        \n            ' Set a reference to the table definition range of the Level2Control being added.\n            Set rngCurLevel2Control = rngCurLevel1Control.Offset(1, 1)\n            \n            ' msoControlPopup sub-controls loop.\n            Do While rngCurLevel2Control.Row &#x26;lt;= lSubMenuItemStopRow\n            \n                ' Load the control attribute type structure.\n                If Not bLoadControlAttributes(rngCurLevel2Control, uCtlProperties, ctlControlItem) Then Err.Raise glHANDLED_ERROR\n                \n                ' Add the sub-control.\n                Set ctlReturn = Nothing\n                Set ctlReturn = ctlAddNewControl(ctlControlItem, uCtlProperties)\n                If ctlReturn Is Nothing Then Err.Raise glHANDLED_ERROR\n                \n                ' Increment the range for the next sub-control.\n                Set rngCurLevel2Control = rngCurLevel2Control.Offset(1, 0)\n                \n            Loop\n    \n        End If\n            \n        ' Increment the range for the next level 1 control.\n        Set rngCurLevel1Control = rngCurLevel1Control.End(xlDown)\n        \n    Else    ' It's an msoControlButton, assign all properties directly.\n\n        If Not bControlExists(ctlTopControl, uCtlProperties.sControlName) Then\n            Set ctlControlItem = Nothing\n            Set ctlControlItem = ctlAddNewControl(ctlTopControl, uCtlProperties)\n            If ctlControlItem Is Nothing Then Err.Raise glHANDLED_ERROR\n        End If\n        \n        ' Increment the range for the next level 1 control.\n        Set rngCurLevel1Control = rngCurLevel1Control.Offset(1, 0)\n        \n    End If\n\nLoop\n</code></pre>\n<p>ErrorExit:</p>\n<pre><code>bAddSubControls = bReturn\nExit Function\n</code></pre>\n<p>ErrorHandler:\nIf Err.Number &#x3C;> glHANDLED_ERROR Then Err.Description = Err.Description &#x26; \" (\" &#x26; sSOURCE &#x26; \")\"\nbReturn = False\nIf bCentralErrorHandler(msMODULE, sSOURCE) Then\nStop\nResume\nElse\nResume ErrorExit\nEnd If\nEnd Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Adds a new CommandBar.\n'\n' Arguments:    uBarProperties  The type structure containing all the\n'                               CommandBar's properties.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/14/04      Stephen Bullen  Ch08    Moved Protection setting to the end of main\n'                                       procedure to avoid crash when pasting pictures.\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPrivate Function bAddNewCommandBar(ByRef uBarProperties As COMMANDBAR_PROPERTIES) As Boolean</p>\n<pre><code>Const sSOURCE As String = \"bAddNewCommandBar()\"\n\nDim bReturn As Boolean\nDim cbrBar As Office.CommandBar\n\nOn Error GoTo ErrorHandler\n\n' Assume success until an error is encountered.\nbReturn = True\n\nSet cbrBar = Nothing\n\nWith uBarProperties\n    Set cbrBar = Application.CommandBars.Add(.sBarName, .lPosition, .bIsMenuBar, .bIsTemporary)\nEnd With\n\n' Set any properties that could not be set during CommandBar creation.\nWith uBarProperties\n    ' You can't set the visible property for Popup CommandBars.\n    If .lPosition &#x26;lt;&#x26;gt; msoBarPopup Then cbrBar.Visible = .bVisible\n    If .lWidth &#x26;lt;&#x26;gt; mlPROPERTY_NOT_SET Then cbrBar.Width = .lWidth\n    cbrBar.Enabled = .bIsEnabled\nEnd With\n</code></pre>\n<p>ErrorExit:</p>\n<pre><code>bAddNewCommandBar = bReturn\nExit Function\n</code></pre>\n<p>ErrorHandler:\nIf Err.Number &#x3C;> glHANDLED_ERROR Then Err.Description = Err.Description &#x26; \" (\" &#x26; sSOURCE &#x26; \")\"\nbReturn = False\nIf bCentralErrorHandler(msMODULE, sSOURCE) Then\nStop\nResume\nElse\nResume ErrorExit\nEnd If\nEnd Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Determines if the specified CommandBar already exists.\n'\n' Arguments:    sBarName    The name of the CommandBar to look for.\n'               cbrBar      Returns a reference to the CommandBar if it exists.\n'\n' Returns:      Boolean     True if the CommandBar already exists,\n'                           False otherwise.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n'\nPrivate Function bCommandbarExists(ByVal sBarName As String, ByRef cbrBar As Office.CommandBar) As Boolean</p>\n<pre><code>If IsNumeric(sBarName) Then\n    ' If an index was passed for the CommandBar name, check for it directly.\n    On Error Resume Next\n        Set cbrBar = Application.CommandBars(CLng(sBarName))\n    On Error GoTo 0\nElse\n    ' Otherwise loop the CommandBars collection and look for a name match.\n    For Each cbrBar In Application.CommandBars\n        ' If a match is located, exit the loop.\n        If StrComp(cbrBar.Name, sBarName, vbTextCompare) = 0 Then Exit For\n    Next cbrBar\nEnd If\n\nbCommandbarExists = Not cbrBar Is Nothing\n</code></pre>\n<p>End Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Adds a CommandBarControl to a CommandBar or CommandBarPopup.\n'\n' Arguments:    objTarget           The CommandBar or CommandBarPopup to add the\n'                                   control to.\n'               uCtlProperties      A type structure containing the properties\n'                                   of the control to be added.\n'\n' Returns:      CommandBarControl   An object reference to the control that was\n'                                   created.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/13/04      Stephen Bullen  Ch08    Allow built-in controls to have custom faces.\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPrivate Function ctlAddNewControl(ByRef objTarget As Object, ByRef uCtlProperties As CONTROL_PROPERTIES) As Office.CommandBarControl</p>\n<pre><code>Const sSOURCE As String = \"ctlAddNewControl()\"\nConst sDOUBLE As String = \"Double\"\nConst sSTRING As String = \"String\"\n\nStatic bSetOnce As Boolean\n\nDim rngCell As Excel.Range\nDim lSeparator As Long\nDim objButton As Object\nDim ctlControl As Office.CommandBarControl\n\nIf gbDEBUG_MODE Then\n    On Error GoTo 0\nElse\n    On Error GoTo ErrorHandler\nEnd If\n\nWith uCtlProperties\n    ' Different .Add calls are required depending on whether the control is a\n    ' custom control and whether or not the Before property was specified.\n    If .lControlID = mlCUSTOM_CONTROL Then\n        ' This is a custom control, specify its Parameter property.\n        If .lBefore = mlPROPERTY_NOT_SET Then\n            ' Before not specified.\n            Set ctlControl = objTarget.Controls.Add(.lControlType, .lControlID, .vParameter, , .bIsTemporary)\n        Else\n            ' Before was specified.\n            Set ctlControl = objTarget.Controls.Add(.lControlType, .lControlID, .vParameter, .lBefore, .bIsTemporary)\n        End If\n    Else\n        ' This is a built-in control, do not specify its Type property.\n        If .lBefore = mlPROPERTY_NOT_SET Then\n            ' Before not specified.\n            Set ctlControl = objTarget.Controls.Add(, .lControlID, .vParameter, , .bIsTemporary)\n        Else\n            ' Before was specified.\n            Set ctlControl = objTarget.Controls.Add(, .lControlID, .vParameter, .lBefore, .bIsTemporary)\n        End If\n    End If\nEnd With\n\nIf uCtlProperties.lControlID = mlCUSTOM_CONTROL Then ctlControl.Caption = uCtlProperties.sControlName\nIf uCtlProperties.lControlStyle &#x26;lt;&#x26;gt; mlPROPERTY_NOT_SET Then ctlControl.Style = uCtlProperties.lControlStyle\nIf uCtlProperties.lWidth &#x26;lt;&#x26;gt; mlPROPERTY_NOT_SET Then ctlControl.Width = uCtlProperties.lWidth\n\n' These properties are set for all controls.\nctlControl.BeginGroup = uCtlProperties.bBeginGroup\nctlControl.Enabled = uCtlProperties.bIsEnabled\nIf Len(uCtlProperties.sTooltip) &#x26;gt; 0 Then ctlControl.TooltipText = uCtlProperties.sTooltip\nIf Len(uCtlProperties.sShortcutKey) &#x26;gt; 0 Then\n    ctlControl.ShortcutText = uCtlProperties.sShortcutKey\n    If Not bSetOnce Then\n        ' The ShortcutText property will have no effect unless these two\n        ' CommandBar properties are turned on. This only needs to be done\n        ' once, hence the static bSetOnce flag variable.\n        With Application.CommandBars\n            .DisplayTooltips = True\n            .DisplayKeysInTooltips = True\n        End With\n        bSetOnce = True\n    End If\nEnd If\nIf Len(uCtlProperties.sTag) &#x26;gt; 0 Then ctlControl.Tag = uCtlProperties.sTag\n\nIf TypeName(uCtlProperties.vFaceID) = sDOUBLE Then\n    ' The ID number of a built-in button FaceID.\n    ctlControl.FaceId = CLng(uCtlProperties.vFaceID)\nElseIf TypeName(uCtlProperties.vFaceID) = sSTRING Then\n\n    ' A bitmap (and maybe mask) which must be located on the CommandBar definition worksheet.\n    lSeparator = InStr(1, uCtlProperties.vFaceID, \"/\")\n    \n    If lSeparator &#x26;gt; 0 Then  ' A picture and a transparency mask, separated by a /.\n\n        ' Setting the picture and mask is only supported in Excel 2002 and up, so check here.\n        If Val(Application.Version) &#x26;gt;= 10 Then\n        \n            ' Excel 2002 or higher, we can set the picture and mask.\n            Set objButton = ctlControl\n\n            ' Copy the picture to the clipboard and set as the Picture.\n            wksCommandBars.Shapes(Trim$(Left$(uCtlProperties.vFaceID, lSeparator - 1))).CopyPicture xlScreen, xlBitmap\n            objButton.Picture = PastePicture(xlBitmap)\n\n            ' Copy the mask to the clipboard and set as the Mask.\n            wksCommandBars.Shapes(Trim$(Mid$(uCtlProperties.vFaceID, lSeparator + 1))).CopyPicture xlScreen, xlBitmap\n            objButton.Mask = PastePicture(xlBitmap)\n            \n        Else\n            ' Excel 97/2000, so just copy/paste the picture.\n            wksCommandBars.Shapes(Trim$(Left$(uCtlProperties.vFaceID, lSeparator - 1))).CopyPicture\n            ctlControl.PasteFace\n        End If\n        \n    Else\n        ' Just a picture, so copy to the clipboard and paste to the button.\n        wksCommandBars.Shapes(Trim$(uCtlProperties.vFaceID)).CopyPicture\n        ctlControl.PasteFace\n    End If\n    \nEnd If\n\n' These properties are set for custom controls only.\nIf uCtlProperties.lControlID = mlCUSTOM_CONTROL Then\n\n    If Len(uCtlProperties.sOnAction) &#x26;gt; 0 Then ctlControl.OnAction = uCtlProperties.sOnAction\n\n    If uCtlProperties.lState &#x26;lt;&#x26;gt; mlPROPERTY_NOT_SET Then ctlControl.State = uCtlProperties.lState\n    \n    If uCtlProperties.lControlType = msoControlComboBox Or uCtlProperties.lControlType = msoControlDropdown Then\n        If Not uCtlProperties.rngListRange Is Nothing Then\n            For Each rngCell In uCtlProperties.rngListRange\n                ctlControl.AddItem rngCell.value\n            Next rngCell\n        End If\n    End If\n        \nEnd If\n\n' Return an object reference to the new control.\nSet ctlAddNewControl = ctlControl\nExit Function\n</code></pre>\n<p>ErrorHandler:\nIf Err.Number &#x3C;> glHANDLED_ERROR Then Err.Description = Err.Description &#x26; \" (\" &#x26; sSOURCE &#x26; \")\"\nSet ctlAddNewControl = Nothing\nEnd Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Determines whether a CommandBarControl with the specified caption\n'           exists on the specified CommandBar or CommandBarPopup.\n'\n' Arguments:    objTarget       The CommandBar or CommandBarPopup to look for\n'                               the control on.\n'               sFindCaption    The caption of the control to look for.\n'\n' Returns:      Boolean         True if the control exists, False otherwise.\n'\n' Date          Developer       Chap    Action\n' ----------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n'\nPrivate Function bControlExists(ByRef objTarget As Object, ByVal sFindCaption As String) As Boolean</p>\n<pre><code>Const sAMPERSAND As String = \"&#x26;amp;\"\n\nDim bLocated As Boolean\nDim objFunc As Excel.WorksheetFunction\nDim ctlControls As Office.CommandBarControls    ' The collection being searched.\nDim ctlControl As Office.CommandBarControl      ' Collection counter.\nDim sCompareCaption As String                  ' The caption on the current control in the loop.\n\nSet objFunc = Application.WorksheetFunction\n\n' Remove the accelerator symbol if there is one.\nsFindCaption = objFunc.Substitute(sFindCaption, sAMPERSAND, \"\")\n\nSet ctlControls = objTarget.Controls\n\n' Loop through each control on the specified object and try to match sFindCaption.\nFor Each ctlControl In ctlControls\n    ' Remove the accelerator symbol if there is one.\n    sCompareCaption = objFunc.Substitute(ctlControl.Caption, sAMPERSAND, \"\")\n    ' If a match is located, return True and exit.\n    If StrComp(sCompareCaption, sFindCaption, vbTextCompare) = 0 Then\n        bLocated = True\n        Exit For\n    End If\nNext ctlControl\n\nbControlExists = bLocated\n</code></pre>\n<p>End Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Loads a CONTROL_PROPERTIES type structure with values for a\n'           CommandBarControl from the wksCommandBars table.\n'\n' Arguments:    rngStartCell    The cell containing the name of the control\n'               uCtlProperties  The type structure to be loaded with the control\n'                               properties.\n'               objParent       A reference to the parent control of the control\n'                               being loaded.\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n' 05/28/04      Rob Bovey       Ch12    Added error handling\n'\nPrivate Function bLoadControlAttributes(ByRef rngStartCell As Excel.Range, ByRef uCtlProperties As CONTROL_PROPERTIES, ByRef objParent As Object) As Boolean</p>\n<pre><code>Const sSOURCE As String = \"bLoadControlAttributes()\"\n\nDim bReturn As Boolean\nDim rngCurrentRow As Excel.Range\nDim rngTemp As Excel.Range\nDim sTemp As String\n\nOn Error GoTo ErrorHandler\n\n' Assume success until an error is encountered.\nbReturn = True\n\nSet rngCurrentRow = rngStartCell.EntireRow\n\n' Load the control properties type structure. Default values are loaded here for\n' unspecified properties.\nWith uCtlProperties\n\n    .sControlName = Trim$(rngStartCell.value)\n    \n    Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_WIDTH))\n    If IsEmpty(rngTemp.value) Then .lWidth = mlPROPERTY_NOT_SET Else .lWidth = CLng(rngTemp.value)\n    \n    Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_IS_TEMPORARY))\n    If IsEmpty(rngTemp.value) Then .bIsTemporary = True Else .bIsTemporary = CBool(rngTemp.value)\n    \n    Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_IS_ENABLED))\n    If IsEmpty(rngTemp.value) Then .bIsEnabled = True Else .bIsEnabled = CBool(rngTemp.value)\n    \n    ' If no workbook was specified in the OnAction entry, assume ThisWorkbook.\n    sTemp = Trim$(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_ONACTION)))\n    If Len(sTemp) = 0 Then\n        .sOnAction = vbNullString\n    ElseIf InStr(sTemp, \"!\") = 0 Then\n        .sOnAction = ThisWorkbook.Name &#x26;amp; \"!\" &#x26;amp; sTemp\n    Else\n        .sOnAction = sTemp\n    End If\n    \n    Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_CONTROL_ID))\n    If IsEmpty(rngTemp.value) Then .lControlID = mlCUSTOM_CONTROL Else .lControlID = CLng(rngTemp.value)\n    \n    If .lControlID = mlCUSTOM_CONTROL Then\n        Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_CONTROL_TYPE))\n        If IsEmpty(rngTemp.value) Then .lControlType = msoControlButton Else .lControlType = CLng(rngTemp.value)\n    Else\n        .lControlType = mlPROPERTY_NOT_SET\n    End If\n    \n    If .lControlType &#x26;lt;&#x26;gt; mlPROPERTY_NOT_SET Then\n        ' The Style property only applies to controls of type msoControlButton, msoControlComboBox, and msoControlDropdown.\n        Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_CONTROL_STYLE))\n        If .lControlType &#x26;lt;&#x26;gt; msoControlButton And .lControlType &#x26;lt;&#x26;gt; msoControlComboBox And .lControlType &#x26;lt;&#x26;gt; msoControlDropdown Then\n            .lControlStyle = mlPROPERTY_NOT_SET\n        ElseIf IsEmpty(rngTemp.value) Then\n            If .lControlType = msoControlButton Then\n                .lControlStyle = msoButtonAutomatic\n            ElseIf .lControlType = msoControlComboBox Then\n                .lControlStyle = msoComboNormal\n            End If\n        Else\n            .lControlStyle = CLng(rngTemp.value)\n        End If\n    Else\n        .lControlStyle = mlPROPERTY_NOT_SET\n    End If\n    \n    .vFaceID = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_FACE_ID)).value\n    .bBeginGroup = CBool(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_BEGIN_GROUP)).value)\n    \n    Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_BEFORE))\n    .lBefore = lConvertBefore(objParent, rngTemp.value)\n    \n    .sTooltip = Trim$(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_TOOLTIP)).value)\n    \n    If .lControlID = mlCUSTOM_CONTROL Then\n        .sShortcutKey = Trim$(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_SHORTCUT_TEXT)).value)\n    Else\n        .sShortcutKey = vbNullString\n    End If\n    \n    .sTag = Trim$(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_TAG)).value)\n    .vParameter = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_PARAMETER)).value\n    \n    ' The State property only applies to custom controls of type msoControlButton.\n    If (.lControlID = mlCUSTOM_CONTROL) And (.lControlType = msoControlButton) Then\n        Set rngTemp = Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_STATE))\n        If IsEmpty(rngTemp.value) Then\n            .lState = msoButtonUp\n        Else\n            .lState = CLng(rngTemp.value)\n        End If\n    Else\n        .lState = mlPROPERTY_NOT_SET\n    End If\n    \n    ' The ListRange property only applies to controls of type msoControlComboBox or msoControlDropDown.\n    If .lControlType = msoControlComboBox Or .lControlType = msoControlDropdown Then\n        sTemp = Trim$(Application.Intersect(rngCurrentRow, wksCommandBars.Range(msCOL_LIST_RANGE)).value)\n        If Len(sTemp) &#x26;gt; 0 Then\n            Set .rngListRange = wksCommandBars.Range(sTemp)\n        Else\n            Set .rngListRange = Nothing\n        End If\n    End If\n    \nEnd With\n</code></pre>\n<p>ErrorExit:</p>\n<pre><code>bLoadControlAttributes = bReturn\nExit Function\n</code></pre>\n<p>ErrorHandler:\nIf Err.Number &#x3C;> glHANDLED_ERROR Then Err.Description = Err.Description &#x26; \" (\" &#x26; sSOURCE &#x26; \")\"\nbReturn = False\nIf bCentralErrorHandler(msMODULE, sSOURCE) Then\nStop\nResume\nElse\nResume ErrorExit\nEnd If\nEnd Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Converts a control name into its position index on the CommandBar.\n'\n' Arguments:    objBar  The CommandBar or CommandBarPopup that the control is\n'                       located on.\n'               vBefore The name to convert.\n'\n' Returns:      Long    If vBefore is a String, the function returns the\n'                       position index of the control with that name.\n'                       If vBefore is numeric, the function returns it converted\n'                       to a Long data type. If vBefore is empty, the function\n'                       returns mlPROPERTY_NOT_SET.\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------------------\n' 04/29/04      Rob Bovey       Ch08    Initial version\n'\nPrivate Function lConvertBefore(ByRef objBar As Object, ByVal vBefore As Variant) As Long</p>\n<pre><code>' This is the default.\nlConvertBefore = mlPROPERTY_NOT_SET\n\nIf Len(vBefore) = 0 Then\n    ' If it's empty, return not set.\n    lConvertBefore = mlPROPERTY_NOT_SET\nElseIf IsNumeric(vBefore) Then\n    ' If it's already numeric, just return it as a long.\n    lConvertBefore = CLng(vBefore)\nElse    ' Look for a control with that name. Return mlPROPERTY_NOT_SET if not found.\n    On Error Resume Next\n        lConvertBefore = mlPROPERTY_NOT_SET\n        lConvertBefore = objBar.Controls(Trim$(CStr(vBefore))).Index\n    On Error GoTo 0\nEnd If\n</code></pre>\n<p>End Function</p>\n</pre>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}