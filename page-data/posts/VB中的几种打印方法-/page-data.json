{"componentChunkName":"component---src-templates-post-js","path":"/posts/VB中的几种打印方法-/","result":{"data":{"sitePage":{"id":"SitePage /posts/VB中的几种打印方法-/"}},"pageContext":{"url":"/posts/VB中的几种打印方法-/","relativePath":"posts/VB中的几种打印方法-.md","relativeDir":"posts","base":"VB中的几种打印方法-.md","name":"VB中的几种打印方法-","frontmatter":{"title":"VB中的几种打印方法  ","stackbit_url_path":"posts/VB中的几种打印方法-","date":"2010-03-05 08:12:49","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/03/05/VB中的几种打印方法-","template":"post"},"html":"<pre><code>    &#x3C;p>&#x3C;style type=\"text/css\">\n</code></pre>\n<!--\nol li {\n    margin: 1em 0;\n}\n-->\n<p></style></p></p>\n<div style=\"text-indent: 2em; font-size: larger;\">\n<p>此文章摘自：<a href=\"http://zhidao.baidu.com/question/91845529.html\">http://zhidao.baidu.com/question/91845529.html</a></p>\n<h2>VB中的几种打印方法</h2>\n<ol style=\"text-indent: 0;\">\n    <li>&nbsp;采用Visual Basic 提供的简单打印函数PrintForm 方法。应用程序窗体的PrintForm 方法时，Visual Basic 把窗体的位图送到当前打印机。该方法的优点在于它几乎不需要任何编程，但也有很大缺陷。最为突出的是当低分辨率图形在高分辨率打印机上打印时，其结果令人无法满意，会产生锯齿。下面代码将在打印机上打印窗体。\n    <pre class=\"brush: vb\">Private Sub Command1_Click() ' 用PrintForm 打印 \n    Me.PrintForm ' 打印窗体的可见区域 \nEnd Sub </pre>\n    </li>\n    <li>用Printer 对象进行高分辨率输出。但要想产生复杂的打印输出，编程较为烦琐。Printer 对象代表系统缺省的打印机，Printer 对象支持许多由窗体和图形框所支持的属性和方法，三种对象都有画线和画方框。应用程序可用以下代码在Printer 对象上画出一平方英寸的方框。它离左上角二英寸。注意：打印机以twips 来测量距离。每英寸有1440 个twips。\n    <pre class=\"brush: vb\">Printer.Line(2 *1440,2 *1440) －Step(1440,1440), ,B \n</pre>\n    打印机、从窗体和图形框都有Circle、PaintPicture、Print、Pset、TextHeight、TextWidth 方法。使用这些方法，应用程序可以为打印机生成高分辨率输出。  打印文本直接用Print 方法，见下列代码：\n    <pre class=\"brush: vb\">Printer.Print \"Hello,China ComputerWorld!\" ' 打印字符串 \n</pre>\n    Printer 对象还有一些窗体和图形框都没有的方法：\n    <ul>\n        <li>NewPage 告诉打印机，程序对当前输出页的发送已经结束，Printer 对象应开始新的一页。</li>\n        <li>EndDoc 告诉VB，程序创建文档结束，VB 应将它发送到物理打印机上打印。</li>\n        <li>KillDoc 取消当前打印作业。应用程序应该终止由EndDoc 和KillDoc 所设定的每个打印作业。</li>\n        <li>Zoom 属性用于定义打印输出的缩放因子。</li>\n        <li>Copies 属性用于定义打印的副本数目。</li>\n    </ul>\n    </li>\n    <li>采用直接将数据传送打印机的方法进行打印输出。有两种方法将数据送往打印机。第一种是用Print ＃方法，就像将数据写入一个文件一样。另一种方法写端口，但不是送文本，而是送特定的PCL 语言，PCL 表示打印控制语言，它是一种特殊语言，用转义代码来控制打印机的具体动作。因为此方法太烦琐，本文不做太多介绍。</li>\n    <li>如果你在编程时用到了RichTextBox 控制，那么你可以使用该控件的SelPrint 方法来打印，使用非常简单。下面一段代码即用RichTextBox 控件的SelPrint 方法来完成打印。\n    <pre class=\"brush: vb\">Private Sub Command3_Click() 'SelPrint 方法 \n    CommonDialog1.Flags=cdlPDReturnDC ＋cdlPDNoPageNums \n    If RTF1.SelLength = 0 Then \n        'RTF1 为窗体的RichTextBox 控制 \n        CommonDialog1.Flags = CommonDialog1.Flags ＋cdlPDAllPages \n    Else \n        CommonDialog1.Flags = CommonDialog1.Flags ＋ cdlPDSelection \n    End If \n    CommonDialog1.CancelError = True \n    On Error Resume Next \n        CommonDialog1.ShowPrinter \n        If Err.Number = cdlCancel Then Exit Sub \n        If Err.Number &lt;&gt; 0 Then \n            Beep \n            MsgBox \"Error printing file.\"  ＆vbCrLf ＋Err.Description, vbOKOnly ＋vbExclamation,  “Printing Error!\" \n            Exit Sub \n        End If \n        Printer.Print \"\" \n        RTF1.SelPrint CommonDialog1.hDC ' 打印RTF1 控件的可见区域 \nEnd Sub \n</pre>\n    上面代码先进行打进设置，再进行打印。如果不需要设置，采用下面代码更为简单:\n    <pre class=\"vb\">RTF1.SelPrint Printer.hDC  ' 打印RTF1 控件的可见区域 \n</pre>\n    </li>\n    <li>可以在VB 中调用Word 97 提供的OLE 自动化服务，利用Word 97 强大的打印功能来完成VB 打印，笔者认为这是最令人满意的方法。下面代码说明VB 如何与Word 集成。\n    <pre class=\"brush: vb\">Private Sub Command4_Click() ' 调用Word 打印 \n    Dim objWord As Object \n    Const CLASSOBJECT = \"Word.Application\" \n    On Error GoTo objError \n    Set objWord = CreateObject(CLASSOBJECT) \n    objWord.Visible = True \n    objWord.Documents.Add \n    With objWord \n        .ActiveDocument.Paragraphs.Last.Range.Bold = False \n        .ActiveDocument.Paragraphs.Last.Range.Font.Size =20 \n        .ActiveDocument.Paragraphs.Last.Range.Font.Name = \"黑体\" \n        .ActiveDocument.Paragraphs.Last.Range.Font.ColorIndex==4 \n        .ActiveDocument.Paragraphs.Last.Range.Text = \"我是计算机世界读者!\" \n    End With \n    Clipboard.Clear \n    Clipboard.SetText \"通过剪切板向WORD 传送数据!\" \n    objWord.Selection.Paste \n    objWord.PrintPreview = True ' 预览方式 \n    objWord.PrintOut' 执行打印 \n    objWord.Quit' 退出Word \n    Exit Sub \nobjError: \n    If Err &lt;&gt; 429 Then \n        MsgBox Str ＄(Err) ＆Error ＄ \n        Set objWord = Nothing \n        ' 不能创建Word 对象则退出 \n        Exit Sub \n    Else \n        Resume Next \n    End If \nEnd Sub \n</pre>\n    </li>\n</ol>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}}}},"staticQueryHashes":[],"slicesMap":{}}