{"componentChunkName":"component---src-templates-post-js","path":"/posts/cnrark","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/cnrark","relativePath":"posts/cnrark","frontmatter":{"title":"Keycloak 关注公众号即登录插件升级了！","stackbit_url_path":"posts/cnrark","date":"2021-09-07T06:11:17","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=tdVWN></a></p>\n<h1>体验链接</h1>\n<p><a href=\"https://uniheart.pa-ca.me/keycloak/login\">https://uniheart.pa-ca.me/keycloak/login</a></p>\n<p>请忍受二维码出现的速度很慢，因为使用的是免费资源……\n<a name=smml4></a></p>\n<h1></h1>\n<p><a name=LZrL3></a></p>\n<h1>背景</h1>\n<p>今年 2 月份发表的一篇专栏《<a href=\"https://zhuanlan.zhihu.com/p/349504145\">基于 keycloak 的关注公众号即登录功能的设计与实现</a>》，居然有人默默地认真看了，还通过<a href=\"https://www.zhihu.com/consult/conversation/1417107982655684608/archive\">付费咨询</a>频道，向我反映了这篇文章中的插件，在最新版本的 Keycloak 中使用时会报错。<br /><a href=\"https://www.zhihu.com/consult/conversation/1417107982655684608/archive\"><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630934654306-c617547a-4ca2-476d-a0ca-3e5f4d6457ac.png#clientId=ube72ccba-35ba-4&#x26;from=paste&#x26;height=630&#x26;id=u4cbec4c5&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1889&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;size=884612&#x26;status=done&#x26;style=none&#x26;taskId=ubbe25d9f-466e-4efc-adaf-be70cee3c08&#x26;width=320\" alt=\"image.png\"></a><br />看来 Keycloak 是一个非常活跃的开源项目，因为我在 2020 年开发关注公众号即登录插件时，Keycloak 版本号还是 7.0.0，但是现在已经升级到 15.0.2 了。</p>\n<p><a name=KMdLg></a></p>\n<h1>新版</h1>\n<p>在周末，我升级了该插件，在最新版本的 Keycloak 15.0.2 中测试通过。相关 mvn 包的配置和资源信息在这里： <a href=\"https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.20\">https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.20</a>。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630989608105-ffc3a37f-22e3-46cc-8431-1b45fd62deb0.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=1630&#x26;id=u06e61195&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1630&#x26;originWidth=2688&#x26;originalType=binary%E2%88%B6=1&#x26;size=400671&#x26;status=done&#x26;style=none&#x26;taskId=ued9f7166-30ef-46c8-aa85-b63ac060129&#x26;width=2688\" alt=\"image.png\"></p>\n<p><a name=cltFa></a></p>\n<h1>前一个版本</h1>\n<p>在 Keycloak 7.0.0 中实测通过的插件版本是 0.0.6，其 mvn 包的配置以及资源信息在 <a href=\"https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.6\">https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.6</a>。<br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630990314025-27a93a65-9406-4a41-bcf3-3afdc755105e.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=1035&#x26;id=u7fcd331c&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1035&#x26;originWidth=1500&#x26;originalType=binary%E2%88%B6=1&#x26;size=149891&#x26;status=done&#x26;style=none&#x26;taskId=u268fa6b6-69ab-45f7-91f3-2dfd4024f49&#x26;width=1500\" alt=\"image.png\"></p>\n<p><a name=U9QEN></a></p>\n<h1>差异以及不兼容原因</h1>\n<p>理论上 Keycloak 升级不应该影响该插件的功能，但是该插件的实现上依赖了 Keycloak 的 BrokeredIdentityContext 中的一个 <strong>setCode</strong> API，但是该 API 在新版本的 Keycloak 中被删除了。因此这次的改动就是换用了一个 API (<strong>setContextData</strong>) 而已。</p>\n<p>Keycloak 的这个破坏性改动，看提交描述是修复一个 Broker 状态参数，但是具体的 JIRA 卡：<a href=\"https://issues.redhat.com/browse/KEYCLOAK-14483\">https://issues.redhat.com/browse/KEYCLOAK-14483</a>，我还没有权限查看。这个提交详情见：<a href=\"https://github.com/keycloak/keycloak/commit/41dc94fead4c20560e0dd96c3efbd7bd10a484b6\">https://github.com/keycloak/keycloak/commit/41dc94fead4c20560e0dd96c3efbd7bd10a484b6</a>。<br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630991406445-9abc762b-d49e-4a3e-87fd-852e2284ac27.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=639&#x26;id=u822c816e&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=639&#x26;originWidth=1066&#x26;originalType=binary%E2%88%B6=1&#x26;size=87674&#x26;status=done&#x26;style=none&#x26;taskId=u0f55797d-5954-48e0-becd-9c8ebd85c58&#x26;width=1066\" alt=\"image.png\"></p>\n<p>只两个方法的删除是最大的不兼容问题，其他的小问题在某些方法签名上的变化。</p>\n<p>上面👆都是流水账，下面是比较重要的内容了！即如何通过配置的方法，实现一个你自己的关注微信公众号即登录的应用。</p>\n<p><a name=n9qS2></a></p>\n<h1>实现一个你自己的关注微信公众号即登录应用</h1>\n<p>如果你希望自己的应用集成关注公众号即登录应用，想了解如何开发，可以参考：《<a href=\"https://zhuanlan.zhihu.com/p/393360806\">基于 Java Spring Security 的关注微信公众号即登录的设计与实现</a>》。</p>\n<p>如果你不想写代码，那么推荐你使用该插件进行集成。我已经集成了好几个应用了，这里详细讲解一下集成步骤。</p>\n<p><a name=LXouq></a></p>\n<h2>集成的示例应用</h2>\n<ul>\n<li><a href=\"https://uniheart.pa-ca.me/keycloak/login\">https://uniheart.pa-ca.me/keycloak/login</a><br />这是一个基于 eggjs 开发的 node 应用，可以通过关注测试公众号拿到相关的令牌信息</li>\n<li><a href=\"https://jeff-tian-gitlab-wq766wrh9r57-8929.githubpreview.dev/\">https://jeff-tian-gitlab-wq766wrh9r57-8929.githubpreview.dev/</a><br />这是一个 gitlab-ee 应用，增加了关注公众号登录的功能。但是由于利用了 Github 的 Codespace，很可能你打开时已经处于关闭状态（503）。如果你很想体验，请联系我，我可以实时打开这个服务。集成步骤详见《<a href=\"https://zhuanlan.zhihu.com/p/405425214\">在自托管 GitLab 实例中集成 Keycloak 登录</a>》。</li>\n<li><a href=\"https://keycloak.jiwai.win/auth/realms/UniHeart/account/\">https://keycloak.jiwai.win/auth/realms/UniHeart/account/</a><br />这是一个部署在 Heroku 上的 Keycloak 应用本身了</li>\n</ul>\n<p><a name=GEgkC></a></p>\n<h2>集成步骤</h2>\n<p><a name=hjq0K></a></p>\n<h3>部署 Keycloak</h3>\n<p>Keycloak 是一个优秀的开源用户认证与授权管理系统，推荐你先部署它。无论你的应用是什么语言编写，都可以快速通过配置的方式和它集成，详细参看官方文档。</p>\n<p>需要注意的是，部署时要把本插件（ <a href=\"https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.20\">https://github.com/Jeff-Tian/keycloak-services-social-weixin/packages/225091?version=0.0.20</a> ）的 jar 包拷贝到 Keycloak 的 /opt/jboss/keycloak/providers/ 目录下，然后需要把配置页面的两个 html 文件拷贝到 /opt/jboss/keycloak/themes/base/admin/resources/partials 目录。</p>\n<p>具体可以参考： <a href=\"https://github.com/Jeff-Tian/keycloak-heroku/blob/master/Dockerfile\">https://github.com/Jeff-Tian/keycloak-heroku/blob/master/Dockerfile</a> 这个 Dockerfile 文件。</p>\n<p><a name=ORpy5></a></p>\n<h3>在 keycloak 中添加关注公众号即登录插件</h3>\n<ul>\n<li>登录你的 Keycloak admin console<br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630992753468-362a8681-bebc-46ec-b63e-0a321d7310ec.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=481&#x26;id=uf91c3e0b&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=481&#x26;originWidth=685&#x26;originalType=binary%E2%88%B6=1&#x26;size=31632&#x26;status=done&#x26;style=none&#x26;taskId=u4bf5b798-c026-414b-bc4a-21d1d6ed3d8&#x26;width=685\" alt=\"image.png\"></li>\n<li>创建你的领域，并在领域设置里打开身份提供者：<br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630993405981-7f074ad5-5b22-4b70-b37e-c795b791885f.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=462&#x26;id=u8166b3e2&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=462&#x26;originWidth=964&#x26;originalType=binary%E2%88%B6=1&#x26;size=46213&#x26;status=done&#x26;style=none&#x26;taskId=uc2bbea6b-1482-4075-873f-7040194cd42&#x26;width=964\" alt=\"image.png\"></li>\n<li>点击编辑“weixin”进行配置：<br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630993537868-6f46730d-6aca-49bf-b9e6-db6bf125bc73.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=845&#x26;id=u1ea27873&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=845&#x26;originWidth=1073&#x26;originalType=binary%E2%88%B6=1&#x26;size=121234&#x26;status=done&#x26;style=none&#x26;taskId=ub2da8d15-dd55-48fc-a708-ebb524c4c94&#x26;width=1073\" alt=\"image.png\"><br />注意，这里有一个非必填项，customized-login-url，在这里也必须填写，否则就会走默认的开放平台的 OAuth 登录逻辑了。如果你不想自己开发展示带餐二维码，以及对用户扫码的感知逻辑，请一定要填写：<a href=\"https://wechat.pa-ca.me/mp-qr\">https://wechat.pa-ca.me/mp-qr</a> 这个开发好的地址。</li>\n</ul>\n<p><a name=WHwTt></a></p>\n<h3>公众号的配置</h3>\n<p><br /><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1630993905175-0deca8c1-487a-49be-a0d9-f45286a7b051.png#clientId=ua48cc9d7-ac80-4&#x26;from=paste&#x26;height=450&#x26;id=u00b435cd&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=450&#x26;originWidth=1030&#x26;originalType=binary%E2%88%B6=1&#x26;size=46169&#x26;status=done&#x26;style=none&#x26;taskId=u175345a6-ca69-4fb3-8267-e9db37826f6&#x26;width=1030\" alt=\"image.png\">只需要配置接口，不需要配置其他。这个接口是用来接收微信的消息的，如果你不想自己开发，可以使用我开发好的，URL 是：<a href=\"https://uniheart-developer-edition.ap15.force.com/services/apexrest/callback/wechat\">https://uniheart-developer-edition.ap15.force.com/services/apexrest/callback/wechat</a>。欢迎通过知乎付费咨询，或者微信打赏的方式向我索取 Token。</p>\n<blockquote>\n<p><strong>注意，对于个人订阅号，或者未认证的企业服务号，都是没有相关接口（获取带餐二维码等）权限的，所以如果是个人测试的话，只能使用测试公众号，如本截图一样。</strong></p>\n</blockquote>\n<p><a name=OQhKZ></a></p>\n<h1>总结</h1>\n<p>这是一篇 Keycloak 集成的配置详解，因为陆续有人向我反映看了我的一系列 Keycloak 文章后（<a href=\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAxNTk3ODgxNA==&#x26;action=getalbum&#x26;album_id=1792107127465967619&#x26;scene=173&#x26;from_msgid=2247484524&#x26;from_itemidx=1&#x26;count=3&#x26;nolastread=1#wechat_redirect\">https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAxNTk3ODgxNA==&#x26;action=getalbum&#x26;album_id=1792107127465967619&#x26;scene=173&#x26;from_msgid=2247484524&#x26;from_itemidx=1&#x26;count=3&#x26;nolastread=1#wechat_redirect</a>），仍然碰到一些配置上的问题。</p>\n<p>这里面有综合利用到各种不同的免费资源，因此体验一定不是最好的。如果有更好的建议（更大的羊毛可以薅），欢迎留言分享。</p>\n<p>这里面涉及到的相关开发，全部以开源形式放在 GitHub 上，欢迎对其中不满意的地方，发 PR 改进。一共有好多个代码库，可以使用这个链接列出： <a href=\"https://github.com/Jeff-Tian?tab=repositories&#x26;q=keycloak&#x26;type=&#x26;language=&#x26;sort=\">https://github.com/Jeff-Tian?tab=repositories&#x26;q=keycloak&#x26;type=&#x26;language=&#x26;sort=</a></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}