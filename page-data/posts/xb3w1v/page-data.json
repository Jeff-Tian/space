{"componentChunkName":"component---src-templates-post-js","path":"/posts/xb3w1v","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/xb3w1v","relativePath":"posts/xb3w1v","frontmatter":{"title":"Free Arch: 个人开发者也能做到支付闭环","stackbit_url_path":"posts/xb3w1v","date":"2022-11-03T06:31:45","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<blockquote>\n<p>不接受差评，Demo 来了！</p>\n</blockquote>\n<p>之前写过一篇《 <a href=\"https://zhuanlan.zhihu.com/p/569483206\">Free Arch：个人收款发货自动化之随机优惠方案（Hard Money） - Jeff Tian的文章 - 知乎 </a>》，被指没有 Demo 差评。没有 Demo，实在不是我的风格，今天终于可以补上了！<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1667454904182-c65f9ac4-19ee-463c-a99c-cad4eaf4f230.png#clientId=u7d03ab7b-1974-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=325&#x26;id=u93f66e76&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=650&#x26;originWidth=2064&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=170361&#x26;status=done&#x26;style=none&#x26;taskId=u09547df1-bcd1-4715-b7a3-d838b30ae7f&#x26;title=&#x26;width=1032\" alt=\"image.png\"></p>\n<p><a name=iax7d></a></p>\n<h1>何谓支付闭环</h1>\n<p>创建订单环节是在开发者侧完成，但是订单的支付，却需要借助第三方（比如网络支付、或者转账等）才能完成。订单和支付，是两个独立的服务，但是又却需要关联起来，一般是通过订单号来关联的。也就是说，如果可以根据订单“自动”查询到支付状态，那么这就是闭环。否则，需要人工对账，那就不是闭环了。</p>\n<p>企业开发者，是不存在这个闭环问题的，因为一有钱，二有资质。但是对于个人开发者，订单到支付，居然不能很容易地闭环。尤其是我这种穷苦的个人开发者，不仅缺资质，还缺钱（不缺钱的个人开发者也很容易买到一个现成的方案）。</p>\n<p><a name=mIGLQ></a></p>\n<h1>没有闭环的销售场景</h1>\n<p>个人开发者当然可以很容易地开发一个订单系统，但是却苦于没有第三方支付接口可供使用。这个第三方支付接口，至少需要两个接口：</p>\n<ul>\n<li>根据开发者的订单号，创建一个支付订单号。这个支付订单，其实是在第三方支付服务里生成的。同时，第三方支付服务会返回一个支付方式，比如对这笔订单生成一个专属的支付二维码。</li>\n<li>根据支付订单号，查询支付状态。</li>\n</ul>\n<p>有了以上两个接口，就能让支付闭环了。想一想个人收款的场景，一般是展示个人收款码（注意，这是一个提前生成的统一的收款码，不是通过接口调用按需生成的），收到款项后自己人工核对。这很适合线下销售场景，比如很多小卖部，会在桌上放置一个二维码，客户扫码支付后，商家听到收款语音（到账 xxx 元），就将客户挑选好的商品（xxx 元）交付到客户手中。</p>\n<p>这种模式，在线上销售场景，就比较麻烦。一般是需要客户付款后，截图发送给商户，商户核对后发货。</p>\n<p><a name=Aat2F></a></p>\n<h1>自动化的思路</h1>\n<p>可以看出，没有闭环时，会需要人肉做两个关键动作：</p>\n<ul>\n<li>监听收款语音</li>\n<li>根据金额关联订单</li>\n</ul>\n<p>如果在缺少接口的情况下，将以上两个关键动作自动化，那么，也相当于是闭环了。</p>\n<p><a name=Y6gmM></a></p>\n<h2>监听收款语音</h2>\n<p>比如可以做个语音识别软件，能够从收款语音中分析出订单金额。这个方案，详见《<a href=\"https://dev.to/jefftian/-524i\">个人收款自动化</a>》中的讨论。</p>\n<p><a name=wT9QV></a></p>\n<h2>根据金额关联订单</h2>\n<p>这就要求每个订单的金额不一样，于是，会导致这个方案注定吞吐量不高（其实线下人肉做这件事时，吞吐量也不高的），不过，似乎对于个人收款，吞吐量没有很高的要求。如果吞吐量很高，说明已经发财了，可以买接口了呀！</p>\n<p>这个方案的设计，其实在《 <a href=\"https://zhuanlan.zhihu.com/p/569483206\">Free Arch：个人收款发货自动化之随机优惠方案（Hard Money） - Jeff Tian的文章 - 知乎 </a>》里已经详述了，这里不再啰嗦，只是快速回顾一下，关键是每次生成订单的同时，生成一个在一定时间窗口里随机的优惠金额。</p>\n<p><a name=O3sNC></a></p>\n<h2>企业微信的支付查询接口</h2>\n<p>在上面的方案中，还发现了企业微信的支付查询接口，它可以在没有企业资质的情况下调用。于是，当订单采用微信支付时，只需要做一步“根据金额关联订单”的自动化即可，语音识别可以省去了！</p>\n<p><a name=HLrS0></a></p>\n<h1>在线演示</h1>\n<p>由于本篇文章只是回顾前面的方案，没有太多新的内容。这一点点新的内容是，按照上面的想法，真的做了一个可以运行的演示程序，那就是： <a href=\"https://v.pa-pa.me/orders\">https://v.pa-pa.me/orders</a> 。</p>\n<p>打开以上链接，会展示一个订单列表页。同时可以在页面上创建一个新的订单，通过微信扫码支付完成后，它能“感知”到支付完成，并跳转回订单列表页。</p>\n<p><a name=pHAnZ></a></p>\n<h1>待办事项</h1>\n<p>在这一步可行性得到验证后，后面可以将其复制到别的使用场景，比如应用于个人版的微信小程序里，这是我下一步想做的事情，做完后又是一个 Demo！</p>\n<p>不过，在真的开发微信小程序中的个人收款之前，我会先写几篇文章，把本篇 Demo 的开发实战先记录一下，因为这又是一个老项目的免费复活案例（我最喜欢做的事情之一）。</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}