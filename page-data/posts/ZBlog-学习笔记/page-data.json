{"componentChunkName":"component---src-templates-post-js","path":"/posts/ZBlog-学习笔记/","result":{"data":{"sitePage":{"id":"SitePage /posts/ZBlog-学习笔记/"}},"pageContext":{"url":"/posts/ZBlog-学习笔记/","relativePath":"posts/ZBlog-学习笔记.md","relativeDir":"posts","base":"ZBlog-学习笔记.md","name":"ZBlog-学习笔记","frontmatter":{"title":"ZBlog 学习笔记","stackbit_url_path":"posts/ZBlog-学习笔记","date":"2010-02-09 05:33:52","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/02/09/ZBlog-学习笔记","template":"post"},"html":"<pre><code>    &#x3C;div style=\"text-indent: 2em;\">&#x3C;p>今天在升级 Blog 之后，以前自己对后台程序作的修改丢失了。由于是很早以前修改的，现在却找不到应该在哪里修改了。这样造成的后果就是，发布代码时，存入数据库中的代码是我自己的写的，然后在页面上显示出来的代码却变得一团糟，因为后台程序在手写的代码上加入了其他的HTML代码标签。&#x3C;/p>&#x3C;p>我一般使用自己的代码显示标签（即 dp.SyntaxHighlighter 所提供的方式），而没有使用 ZBlog 自带的[code]标签。以前引用 dp.SyntaxHighlighter 时，对Blog后台程序进行了修改，从而在Blog中顺利地融入了 dp.SyntaxHighlighter。而现在要重新做这们的修改，却发现怎么也找不到当时的那个修改入口了。于是想偷懒，就去ZBlog程序开发交流区发问，如果让后台程序在发布文章后不要修改我写的代码内容。回答是：不可能（原文是“没有你想像的功能。”）。回答者是 haphic，我用过他开发的插件，很佩服他。但是他的回答给我泼了冷水，我决心透彻地研究一下ZBlog程序，使用比上次更好的方法来实现我自己的需求。&#x3C;/p>&#x3C;p>ASP 是弱类型语言，对于变量，若要保证变量是自己想要的类型，需要使用一些类型转换函数。ZBlog 将这一需求找包成一个统一的函数，很好。&#x3C;/p>&#x3C;pre class=\"brush: vb\" style=\"text-indent: 0;\">'*********************************************************\n</code></pre>\n<p>' 目的：    检查参数，将弱类型 source 变量转换成指定的期望\n'           类型的变量\n'\n' 位置：    /FUNCTION/c_function.asp\n'\n' 参数：    source  要检查的变量，是按引用传递的\n'           strType 期望的参数类型\n'           default 默认值\n'\n' 返回：    无错则返回True；\n'           出错则转到ShowError(3)\n'\n' 日期      开发者      行为\n' --------------------------------------------------------\n' -         -           创建\n' 2010-2-9  涂鸦        添加注释\n'*********************************************************\nFunction CheckParameter(byRef source,strType,default)</p>\n<pre><code>On Error Resume Next\n\nIf strType=\"int\" Then\n\n\t'数值\n\tIf IsNull(source) Then\n\t\tsource=default\n\tElseIf IsEmpty(source) Then\n\t\tsource=default\n\tElseIf IsNumeric(source) Then\n\t\tsource=CLng(source)\n\tElseIf source=\"\" Then\n\t\tsource=default\n\tElse\n\t\tCall ShowError(3)\n\tEnd if\n\tIf Err.Number&#x26;lt;&#x26;gt;0 Then Call ShowError(3)\n\n\tCheckParameter=True\n\nElseIf  strType=\"dtm\" Then\n\n\t'日期\n\tIf IsNull(source) Then\n\t\tsource=default\n\tElseIf IsEmpty(source) Then\n\t\tsource=default\n\tElseIf IsDate(source) Then\n\t\tsource=source\n\t\tCall FormatDateTime(source,vbLongDate)\n\t\tCall FormatDateTime(source,vbShortDate)\n\tElseIf source=\"\" Then\n\t\tsource=default\n\tElse\n\t\tCall ShowError(3)\n\tEnd if\n\tIf Err.Number&#x26;lt;&#x26;gt;0 Then Call ShowError(3)\n\n\tCheckParameter=True\n\nElseIf strType=\"sql\" Then\n\n\t'SQL\n\tIf IsNull(source) Or Trim(source)=\"\" Or IsEmpty(source) Then\n\t\tsource=default\n\tElse\n\t    ' 将单引号'替换成连续的两个单引号'' - 涂鸦，2010-2-9\n\t\tsource=CStr(Replace(source,Chr(39),Chr(39)&#x26;amp;Chr(39)))\n\tEnd If\n\nElseIf strType=\"bool\" Then\n\n\t'Boolean\n\tsource=CBool(source)\n\n\tIf Err.Number&#x26;lt;&#x26;gt;0 Then\n\t\tErr.Clear\n\t\tIf IsEmpty(source)=True Then\n\t\t\tsource=True\n\t\tElse\n\t\t\tsource=False\n\t\tEnd If\n\tEnd If\n\nElse\n\tCall ShowError(0)\nEnd If\n</code></pre>\n<p>End Function\n'*********************************************************\n</pre></div></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[],"slicesMap":{}}