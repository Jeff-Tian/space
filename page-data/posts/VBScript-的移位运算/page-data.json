{"componentChunkName":"component---src-templates-post-js","path":"/posts/VBScript-的移位运算/","result":{"data":{"sitePage":{"id":"SitePage /posts/VBScript-的移位运算/"}},"pageContext":{"url":"/posts/VBScript-的移位运算/","relativePath":"posts/VBScript-的移位运算.md","relativeDir":"posts","base":"VBScript-的移位运算.md","name":"VBScript-的移位运算","frontmatter":{"title":"VBScript 的移位运算","stackbit_url_path":"posts/VBScript-的移位运算","date":"2009-11-24 14:48:53","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2009/11/24/VBScript-的移位运算","template":"post"},"html":"<pre><code>    &#x3C;div style=\"text-indent: 2em;\">\n</code></pre>\n<p>在C和Java等编程语言中，可以方便地对变量进行移位运算，但是在VB中，却没有内置的移位运算符或者函数。</p>\n<p>于是，我们得自己动手编写移位的运算函数。原理很简单，<strong>每向右移一位，就将被移位的变量的二进制除以2；每向左移一位，就将被移位的变量的二进制乘以2</strong>。于是可以写出以下函数：</p>\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">    '\n    ' 按位左移\n    '\n    Public Function LShift(ByVal val, ByVal n)\n        LShift = val * 2 ^ n\n    End Function\n<pre><code>'\n' 按位右移\n'\nPublic Function RShift(ByVal val, Byval n) \n    RShift = val \\ (2 ^ n)\nEnd Function\n</code></pre>\n</pre>\n<p>以上写的两个左移和右移函数，非常简单，没有考虑机器字长以及传过来的变量类型等。</p>\n<p>后来看到在VBS的MD5加密算法中，包含左移右移的函数，在这里，将它们单独拧出来，以作为左移右移函数的升级版本：</p>\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">Private&nbsp;m_lOnBits(30)\nPrivate&nbsp;m_l2Power(30)\n<p>Private Function Initialize() \n    m_lOnBits(0) = CLng(1)\n    m_lOnBits(1) = CLng(3)\n    m_lOnBits(2) = CLng(7)\n    m_lOnBits(3) = CLng(15)\n    m_lOnBits(4) = CLng(31)\n    m_lOnBits(5) = CLng(63)\n    m_lOnBits(6) = CLng(127)\n    m_lOnBits(7) = CLng(255)\n    m_lOnBits(8) = CLng(511)\n    m_lOnBits(9) = CLng(1023)\n    m_lOnBits(10) = CLng(2047)\n    m_lOnBits(11) = CLng(4095)\n    m_lOnBits(12) = CLng(8191)\n    m_lOnBits(13) = CLng(16383)\n    m_lOnBits(14) = CLng(32767)\n    m_lOnBits(15) = CLng(65535)\n    m_lOnBits(16) = CLng(131071)\n    m_lOnBits(17) = CLng(262143)\n    m_lOnBits(18) = CLng(524287)\n    m_lOnBits(19) = CLng(1048575)\n    m_lOnBits(20) = CLng(2097151)\n    m_lOnBits(21) = CLng(4194303)\n    m_lOnBits(22) = CLng(8388607)\n    m_lOnBits(23) = CLng(16777215)\n    m_lOnBits(24) = CLng(33554431)\n    m_lOnBits(25) = CLng(67108863)\n    m_lOnBits(26) = CLng(134217727)\n    m_lOnBits(27) = CLng(268435455)\n    m_lOnBits(28) = CLng(536870911)\n    m_lOnBits(29) = CLng(1073741823)\n    m_lOnBits(30) = CLng(2147483647)\n    \n    m_l2Power(0) = CLng(1)\n    m_l2Power(1) = CLng(2)\n    m_l2Power(2) = CLng(4)\n    m_l2Power(3) = CLng(8)\n    m_l2Power(4) = CLng(16)\n    m_l2Power(5) = CLng(32)\n    m_l2Power(6) = CLng(64)\n    m_l2Power(7) = CLng(128)\n    m_l2Power(8) = CLng(256)\n    m_l2Power(9) = CLng(512)\n    m_l2Power(10) = CLng(1024)\n    m_l2Power(11) = CLng(2048)\n    m_l2Power(12) = CLng(4096)\n    m_l2Power(13) = CLng(8192)\n    m_l2Power(14) = CLng(16384)\n    m_l2Power(15) = CLng(32768)\n    m_l2Power(16) = CLng(65536)\n    m_l2Power(17) = CLng(131072)\n    m_l2Power(18) = CLng(262144)\n    m_l2Power(19) = CLng(524288)\n    m_l2Power(20) = CLng(1048576)\n    m_l2Power(21) = CLng(2097152)\n    m_l2Power(22) = CLng(4194304)\n    m_l2Power(23) = CLng(8388608)\n    m_l2Power(24) = CLng(16777216)\n    m_l2Power(25) = CLng(33554432)\n    m_l2Power(26) = CLng(67108864)\n    m_l2Power(27) = CLng(134217728)\n    m_l2Power(28) = CLng(268435456)\n    m_l2Power(29) = CLng(536870912)\n    m_l2Power(30) = CLng(1073741824)\nEnd Function </p>\n<p>Private Function LShift(lValue, iShiftBits)\n    If iShiftBits = 0 Then\n        LShift = lValue\n        Exit Function\n    ElseIf iShiftBits = 31 Then\n        If lValue And 1 Then\n            LShift = &#x26;H80000000\n        Else\n            LShift = 0\n        End If\n        Exit Function\n    ElseIf iShiftBits &#x3C; 0 Or iShiftBits > 31 Then\n        Err.Raise 6\n    End If</p>\n<p>    If (lValue And m_l2Power(31 - iShiftBits)) Then\n        LShift = ((lValue And m_lOnBits(31 - (iShiftBits + 1))) <em> m_l2Power(iShiftBits)) Or &#x26;H80000000\n    Else\n        LShift = ((lValue And m_lOnBits(31 - iShiftBits)) </em> m_l2Power(iShiftBits))\n    End If\nEnd Function</p>\n<p>Private Function RShift(lValue, iShiftBits)\n    If iShiftBits = 0 Then\n        RShift = lValue\n        Exit Function\n    ElseIf iShiftBits = 31 Then\n        If lValue And &#x26;H80000000 Then\n            RShift = 1\n        Else\n            RShift = 0\n        End If\n        Exit Function\n    ElseIf iShiftBits &#x3C; 0 Or iShiftBits > 31 Then\n        Err.Raise 6\n    End If\n    \n    RShift = (lValue And &#x26;H7FFFFFFE) &#x26;nbsp;m_l2Power(iShiftBits)</p>\n<p>    If (lValue And &#x26;H80000000) Then\n        RShift = (RShift Or (&#x26;H40000000 &#x26;nbsp;m_l2Power(iShiftBits - 1)))\n    End If\nEnd Function\n</pre></p>\n<p>另外，在此基础上再添加两个位运算函数：循环左移和无符号数的加法运算。</p>\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">Private&nbsp;Function&nbsp;RotateLeft(lValue,&nbsp;iShiftBits)\n&nbsp;&nbsp;&nbsp;&nbsp;RotateLeft&nbsp;=&nbsp;LShift(lValue,&nbsp;iShiftBits)&nbsp;Or&nbsp;RShift(lValue,&nbsp;(32&nbsp;-&nbsp;iShiftBits))\nEnd&nbsp;Function\n<p>Private Function AddUnsigned(lX, lY)\n    Dim lX4\n    Dim lY4\n    Dim lX8\n    Dim lY8\n    Dim lResult\n \n    lX8 = lX And &#x26;H80000000\n    lY8 = lY And &#x26;H80000000\n    lX4 = lX And &#x26;H40000000\n    lY4 = lY And &#x26;H40000000\n \n    lResult = (lX And &#x26;H3FFFFFFF) + (lY And &#x26;H3FFFFFFF)\n \n    If lX4 And lY4 Then\n        lResult = lResult Xor &#x26;H80000000 Xor lX8 Xor lY8\n    ElseIf lX4 Or lY4 Then\n        If lResult And &#x26;H40000000 Then\n            lResult = lResult Xor &#x26;HC0000000 Xor lX8 Xor lY8\n        Else\n            lResult = lResult Xor &#x26;H40000000 Xor lX8 Xor lY8\n        End If\n    Else\n        lResult = lResult Xor lX8 Xor lY8\n    End If\n \n    AddUnsigned = lResult\nEnd Function\n</pre></p>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}