{"componentChunkName":"component---src-templates-post-js","path":"/posts/ubuw50k40w0g1o6l/","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/ubuw50k40w0g1o6l","relativePath":"posts/ubuw50k40w0g1o6l","frontmatter":{"title":"在微信小程序中使用 Cookie","stackbit_url_path":"posts/ubuw50k40w0g1o6l","date":"2023-10-08T14:13:19","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=XgUJM></a></p>\n<h1>和Web相比，微信小程序有哪些限制？</h1>\n<p>微信小程序作为一种独立的应用开发平台，与传统的 Web 应用相比，存在一些特定的限制和差异。了解这些限制对于在微信小程序中集成身份认证平台至关重要。在本节中，我们将介绍微信小程序相对于 Web 应用的主要限制。</p>\n<p>以下是一些微信小程序的限制：</p>\n<ul>\n<li><strong>运行环境限制</strong>：微信小程序运行在微信客户端中，无法直接在浏览器中访问。因此，一些基于浏览器的功能（如 Cookie 等）在微信小程序中不可用。</li>\n<li><strong>网络请求限制</strong>：微信小程序中的网络请求受到严格的安全策略限制。只能发送 HTTPS 请求，且只能访问特定的域名。这意味着在集成身份认证平台时，需要确保认证服务提供商的域名在微信小程序的白名单之中。</li>\n<li><strong>文件系统限制</strong>：微信小程序具有受限的文件系统访问权限。只能访问小程序自身的文件系统，无法直接读取用户本地文件或系统文件。</li>\n<li><strong>UI 组件限制</strong>：微信小程序提供了一组特定的 UI 组件，相对于 Web 应用的 UI 组件更加有限。需要根据微信小程序的组件库进行布局和样式设计。</li>\n<li><strong>代码运行限制</strong>：微信小程序使用的是基于 JavaScript 的开发语言，但与 Web 应用相比，微信小程序的 JavaScript 运行环境具有一些差异。需要熟悉微信小程序的开发规范和限制，以确保身份认证功能的正确实现。</li>\n</ul>\n<p><a name=tGspB></a></p>\n<h1>通过自定义 Cookie 存储对接网络请求的 set-cookie</h1>\n<p>尽管在微信小程序中没有像浏览器那样的原生 Cookie 存储，但如果有需要，比如在和身份认证平台交互过程中，非常需要客户端有 Cookie 存取功能的话，可以使用自定义的 Cookie 存储来实现。<br />好在，不用完全从0开始造轮子，我们可以基于 tough-cookie封闭几个常用的接口，以便在微信小程序中灵活地读取和存储网络请求中的 Cookie，不妨将自己封装的文件命名为 browser-cookie.ts。\n<a name=YtqtA></a></p>\n<h1>规格说明</h1>\n<p>我们用一个测试文件说明对 browser-cookie 的使用：\ntypescript\nimport {Cookie} from tough-cookie;\nimport * as assert from assert;\nimport {BrowserCookieStore} from ./browser-cookie;</p>\n<p>describe(Browser Cookie Store, () => {\nconst sut = new BrowserCookieStore()</p>\n<p>it(finds cookie, (done) => {\nsut.findCookie(test, test, key, (_err: Error | null, cookie: Cookie | null) => {\nexpect(cookie).toEqual(null);</p>\n<pre><code>  done()\n});\n</code></pre>\n<p>})</p>\n<p>it(finds cookies, (done) => {\nsut.findCookies(test, test, false, (_err: Error | null, cookies: Cookie[] | null) => {\nexpect(cookies).toBeDefined()\nexpect(cookies!.length).toEqual(0)</p>\n<pre><code>  done()\n});\n</code></pre>\n<p>})</p>\n<p>it(gets all cookies, (done) => {\nsut.getAllCookies((_err: Error | null, cookies: Cookie[]) => {\nexpect(cookies.length).toEqual(0)</p>\n<pre><code>  done()\n})\n</code></pre>\n<p>})</p>\n<p>it(puts cookie, (done) => {\nsut.putCookie(Cookie.parse(foo=bar)!, (err: Error | null) => {\nexpect(err).toEqual(null)</p>\n<pre><code>  sut.getAllCookies((_err, cookies) => {\n    expect(cookies.length).toEqual(1)\n\n    sut.putCookie(Cookie.parse(joe=doe)!, (err2) => {\n      expect(err2).toEqual(null)\n\n      sut.getAllCookies((_, allCookies) => {\n        expect(allCookies.length).toEqual(2)\n      })\n    })\n\n    done()\n  })\n})\n</code></pre>\n<p>})</p>\n<p>it(removes cookie, (done) => {\nsut.getAllCookies((_err, cookies) => {\nexpect(cookies.length).toEqual(2)</p>\n<pre><code>  sut.removeCookie(, , foo, (err2) => {\n    expect(err2).toEqual(null)\n\n    sut.getAllCookies((_, allCookies) => {\n      expect(allCookies.length).toEqual(1)\n\n      done()\n    })\n  })\n})\n</code></pre>\n<p>})</p>\n<p>it(removes all cookies, (done) => {\nsut.getAllCookies((_err, cookies) => {\nexpect(cookies.length).toEqual(1)</p>\n<pre><code>  sut.removeCookies(, , () => {\n    sut.getAllCookies((_, allCookies) => {\n      expect(allCookies.length).toEqual(0);\n\n      done();\n    })\n  })\n})\n</code></pre>\n<p>})</p>\n<p>it(update cookie, (done) => {\nconst cookie = Cookie.parse(foo=bar)\nassert.ok(cookie)</p>\n<pre><code>sut.putCookie(cookie, () => {\n  sut.getAllCookies((_, allCookies) => {\n    expect(allCookies.length).toEqual(1)\n    expect(document.cookie).toEqual(foo=bar)\n\n    const newCookie = Cookie.parse(foo=doe)\n    assert.ok(newCookie)\n\n    sut.updateCookie(cookie, newCookie, () => {\n      expect(document.cookie).toEqual(foo=doe)\n      done()\n    })\n  })\n})\n</code></pre>\n<p>})</p>\n<p>it(finds cookie without allowSpecialUseDomain, (done) => {\nconst cb = (err, cookies) => {\nexpect(err).toEqual(null)\nexpect(cookies.length).toEqual(0)</p>\n<pre><code>  done()\n}\n\nsut.findCookies(www.zhihu.com, /api/v3/oauth/captcha, cb)\n</code></pre>\n<p>})\n})</p>\n<p><a name=vXxYK></a></p>\n<h1>实现</h1>\n<p>typescript\nimport {Cookie, CookieJar, Store} from tough-cookie;</p>\n<p>type FindCookiesCallback = (err: (Error | null), cookie: Cookie[]) => void</p>\n<p>export class BrowserCookieStore implements Store {\nsynchronous: boolean;</p>\n<p>findCookie(domain: string, path: string, key: string, cb: (err: (Error | null), cookie: (Cookie | null)) => void): void {\nconst decodedCookie = decodeURIComponent(document.cookie)</p>\n<pre><code>decodedCookie.split(;).forEach(c => {\n  while (c.startsWith( )) {\n    c = c.substring(1)\n  }\n\n  const name = key + =\n  if (c.startsWith(name)) {\n    cb(null, Cookie.parse(c.substring(name.length, c.length)) ?? null)\n  }\n});\n\ncb(null, null)\n</code></pre>\n<p>}</p>\n<p>findCookies(domain: string, path: string, cb: FindCookiesCallback): void\nfindCookies(domain: string, path: string, allowSpecialUseDomain: boolean, cb: FindCookiesCallback): void\nfindCookies(domain: string, path: string, allowSpecialUseDomain: boolean | FindCookiesCallback, cb?: FindCookiesCallback): void {\nif (!cb) {\ncb = allowSpecialUseDomain as FindCookiesCallback\n}</p>\n<pre><code>const decodedCookie = decodeURIComponent(document.cookie)\nconst cookies: Cookie[] = []\n\ndecodedCookie.split(;).forEach(c => {\n  const cookie = Cookie.parse(c)\n\n  if (cookie) {\n    if (domain &#x26;&#x26; path) {\n      if (cookie.domain === domain &#x26;&#x26; cookie.path === path) {\n        cookies.push(cookie)\n      }\n    } else {\n      cookies.push(cookie)\n    }\n  }\n})\n\ncb(null, cookies)\n</code></pre>\n<p>}</p>\n<p>getAllCookies(cb: (err: (Error | null), cookie: Cookie[]) => void): void {\nthis.findCookies(, , false, cb)\n}</p>\n<p>putCookie(cookie: Cookie, cb: (err: (Error | null)) => void): void {\nconsole.log(put cookie = , cookie);\ndocument.cookie = cookie.toString()</p>\n<pre><code>cb(null)\n</code></pre>\n<p>}</p>\n<p>removeCookie(domain: string, path: string, key: string, cb: (err: (Error | null)) => void): void {\nthis.getAllCookies((_, allCookies) => {\nallCookies.forEach(c => {\nif (c.key === key) {\ndocument.cookie = ${c.key}=${c.value};max-age=0;\n}\n})</p>\n<pre><code>  cb(null)\n});\n</code></pre>\n<p>}</p>\n<p>removeCookies(domain: string, path: string, cb: (err: (Error | null)) => void): void {\nthis.getAllCookies((_, allCookies) => {\nallCookies.forEach(c => {\ndocument.cookie = ${c.key}=${c.value};max-age=0\n})</p>\n<pre><code>  cb(null)\n})\n</code></pre>\n<p>}</p>\n<p>updateCookie(oldCookie: Cookie, newCookie: Cookie, cb: (err: (Error | null)) => void): void {\nthis.removeCookie(, , oldCookie.key, () => {\nthis.putCookie(newCookie, () => {\ncb(null)\n})\n})\n}</p>\n<p>}</p>\n<p>const cookieStore = new BrowserCookieStore()\ncookieStore.synchronous = true;</p>\n<p>export const getCookieStore = () => {\nreturn cookieStore\n}</p>\n<p>export const clearCookieStore = () => {\ncookieStore.removeCookies(, , () => {\n})\nreturn cookieStore\n}</p>\n<p>export const getCookieJar = () => {\nreturn new CookieJar(cookieStore)\n}</p>\n<p><a name=aBcl7></a></p>\n<h1>实际用途</h1>\n<p>很多网站的登录状态都依赖 Cookie，通过在微信小程序里利用网站 cookie，就可以实现从微信小程序和网站共享登录状态，有一种跨越设备的单点登录效果。</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}}}},"staticQueryHashes":[],"slicesMap":{}}