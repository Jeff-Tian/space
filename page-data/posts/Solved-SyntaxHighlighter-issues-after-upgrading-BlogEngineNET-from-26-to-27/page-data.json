{"componentChunkName":"component---src-templates-post-js","path":"/posts/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27/","result":{"data":{"sitePage":{"id":"SitePage /posts/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27/"}},"pageContext":{"url":"/posts/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27/","relativePath":"posts/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27.md","relativeDir":"posts","base":"Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27.md","name":"Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27","frontmatter":{"title":"[Solved] SyntaxHighlighter issues after upgrading BlogEngine.NET from 2.6 to 2.7","stackbit_url_path":"posts/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27","date":"2014-04-21 19:54:08.7373952","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["BlogEngine.NET","Syntax Highlighter"],"canonical_url":"https://be-net.azurewebsites.net/post/2014/04/21/Solved-SyntaxHighlighter-issues-after-upgrading-BlogEngineNET-from-26-to-27","template":"post"},"html":"<h2><font color=\"#9b00d3\">Problem:</font></h2>  <p>I updated my BlogEngine.NET from 2.6 to 2.7, and everything goes well. But one day I found that the syntax highlighter were functioning horribly poor. They are:</p>  <ol>   <li>Js error thrown on every post page claming:      <br /><font color=\"#ff0000\">Uncaught ReferenceError: SyntaxHighlighter is not defined </font></li>    <li>Tabs were removed inside code block. </li>    <li>Auto text wrap not work at the long text lines. </li> </ol>  <h2><font color=\"#9b00d3\">Cause:</font></h2>  <ol>   <li>The js error only happens if you turned on <strong>SyntaxHighlighter extension</strong>, and checked “<strong>collapse</strong>” option.       <br /><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_624.png\"><img title=\"[Solved] SyntaxHighlighter issues after upgrading BlogEngine.NET from 2.6 to 2.7\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"[Solved] SyntaxHighlighter issues after upgrading BlogEngine.NET from 2.6 to 2.7\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_thumb_343.png\" width=\"626\" height=\"401\" /></a>       <br />It will add a script line after the syntax highlighter js files were referenced like this:       <br />      <pre class=\"brush: html\">&lt;script type=&quot;text/javascript&quot; src=&quot;/Scripts/syntaxhighlighter/shCore.js&quot; defer=&quot;defer&quot; async=&quot;async&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/Scripts/syntaxhighlighter/shAutoloader.js&quot; defer=&quot;defer&quot; async=&quot;async&quot;&gt;&lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;/Scripts/syntaxhighlighter/shInit.js&quot; defer=&quot;defer&quot; async=&quot;async&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; defer=&quot;defer&quot;&gt;\r\n\tSyntaxHighlighter.defaults['collapse'] = true;\r\n});\r\n&lt;/script&gt;</pre>\r\nI guess the <strong>defer=”defer” async=”async”</strong> attributes makes the execution order is unpredictable, so the last line `<strong>SyntaxHighlighter.defaults[‘collapse’] = true</strong>` actually executes before the <strong>shCore.js</strong> loaded. </li>\n  <li>This is because in the site.master.cs, there is a line of code: \r\n    <br />\n<pre><code>&#x3C;pre class=\"brush: csharp\">html = reg.Replace(html, string.Empty).Trim();&#x3C;/pre>\n</code></pre>\n  </li>\n  <li>As be explained in <a title=\"JQuery搞定SyntaxHighlighter v3.x长代码自动换行\" href=\"http://diaosbook.com/Post/2012/9/12/jquery-fix-line-wrap-in-SyntaxHighlighter-v3\" target=\"_blank\">this article</a>, it is caused by the Syntax Highlighter 3.x separated the gutter and code so that when you copy code you won’t copy the line numbers. This is a good thing, but it forgot or gave up the auto line wrap functionality because it was hard to keep it. </li>\r\n</ol>\n<h2><font color=\"#9b00d3\">Solution:</font></h2>\n<ol>\r\n  <li>Improve the <strong>SyntaxHighlighter extension</strong> so that it generates script codes like this to make sure when setting the SyntaxHighlighter.defaults, the SyntaxHighlighter had already been defined. \n<pre><code>&#x3C;br />\r\n\r\n&#x3C;pre class=\"brush: html\">&#x26;lt;script type=&#x26;quot;text/javascript&#x26;quot; src=&#x26;quot;/Scripts/syntaxhighlighter/shCore.js&#x26;quot; defer=&#x26;quot;defer&#x26;quot; async=&#x26;quot;async&#x26;quot;&#x26;gt;&#x26;lt;/script&#x26;gt;\n</code></pre>\n<p>&#x3C;script type=\"text/javascript\" src=\"/Scripts/syntaxhighlighter/shAutoloader.js\" defer=\"defer\" async=\"async\">&#x3C;/script>\r\n&#x3C;script type=\"text/javascript\" src=\"/Scripts/syntaxhighlighter/shInit.js\" defer=\"defer\" async=\"async\">&#x3C;/script>&#x3C;script type=\"text/javascript\" defer=\"defer\"></p>\n<pre><code>    if (typeof executeOn === 'undefined') {\r\n        window.executeOn = function (condition, func) {\r\n            var interval = setInterval(function () {\r\n                try {\r\n                    var result = false;\r\n\r\n                    if (typeof condition === &#x26;quot;function&#x26;quot;) {\r\n                        result = condition();\r\n                    } else if (typeof condition === &#x26;quot;string&#x26;quot;) {\r\n                        result = eval(condition);\r\n                    } else {\r\n                        throw &#x26;quot;argument 'condition' must be a bool function or a bool expression.&#x26;quot;;\r\n                    }\r\n\r\n                    if (result === true) {\r\n                        clearInterval(interval);\r\n                        func();\r\n                    }\r\n                } catch (ex) {\r\n                    clearInterval(interval);\r\n                    throw ex;\r\n                }\r\n            }, 100);\r\n        };\r\n    }\r\n\r\n// Make sure the SyntaxHighlighter has already been defined, otherwise wait a chunk of time\r\nexecuteOn(&#x26;quot;typeof SyntaxHighlighter !== 'undefined' &#x26;quot;, function() {\r\n\tSyntaxHighlighter.defaults['collapse'] = true;\r\n\r\n\texecuteOn(&#x26;quot;document.readyState === 'loaded' || document.readyState === 'complete'&#x26;quot;, function() {\r\n\t\tSyntaxHighlighter.all();\r\n            });\r\n});\n</code></pre>\n<p>&#x3C;/script></pre>\r\nThe updated SyntaxHighlighter extension(<strong>SyntaxHighlighter.cs</strong>, if you don't have it, add it to the <strong>~/App_Code/</strong> folder in your BlogEngine.NET project) looks like this:</p>\n<pre><code>&#x3C;pre class=\"brush: csharp; collapse: true\">using System.Text;\n</code></pre>\n<p>using System.Web;\r\nusing System.Web.UI.HtmlControls;\r\nusing BlogEngine.Core;\r\nusing BlogEngine.Core.Web.Controls;\r\nusing BlogEngine.Core.Web.Extensions;\r\nusing Page=System.Web.UI.Page;\r\nusing System.Collections.Generic;\r\nusing System;</p>\n<p>[Extension(\"Adds &#x3C;a target=&#x26;quot;_new&#x26;quot; href=&#x26;quot;<a href=\"http://alexgorbatchev.com/wiki/SyntaxHighlighter&#x26;quot;%3EAlex\">http://alexgorbatchev.com/wiki/SyntaxHighlighter&#x26;quot;>Alex</a> Gorbatchev's&#x3C;/a> source code formatter\", \"2.5.2\", \"&#x3C;a target=&#x26;quot;_new&#x26;quot; href=&#x26;quot;http://dotnetblogengine.net/&#x26;quot;>BlogEngine.NET&#x3C;/a>\")]\r\npublic class SyntaxHighlighter\r\n{\r\n#region Private members\r\nprivate const string ExtensionName = \"SyntaxHighlighter\";\r\nstatic protected Dictionary&#x3C;Guid, ExtensionSettings> _blogsOptions = new Dictionary&#x3C;Guid, ExtensionSettings>();\r\nstatic protected Dictionary&#x3C;Guid, ExtensionSettings> _blogsThemes = new Dictionary&#x3C;Guid, ExtensionSettings>();\r\n#endregion</p>\n<pre><code>/// &#x26;lt;summary&#x26;gt;\r\n///     The sync root.\r\n/// &#x26;lt;/summary&#x26;gt;\r\nprivate static readonly object syncRoot = new object();\r\n\r\nprivate static ExtensionSettings Options\r\n{\r\n    get\r\n    {\r\n        Guid blogId = Blog.CurrentInstance.Id;\r\n        ExtensionSettings options = null;\r\n        _blogsOptions.TryGetValue(blogId, out options);\r\n\r\n        if (options == null)\r\n        {\r\n            lock (syncRoot)\r\n            {\r\n                _blogsOptions.TryGetValue(blogId, out options);\r\n\r\n                if (options == null)\r\n                {\r\n                    // Initializes\r\n                    //   (1) Options\r\n                    //   (3) Themees\r\n                    // for the current blog instance.\r\n\r\n                    // options\r\n                    options = new ExtensionSettings(&#x26;quot;Options&#x26;quot;);\r\n                    options.IsScalar = true;\r\n                    options.Help = OptionsHelp();\r\n\r\n                    options.AddParameter(&#x26;quot;cdnScriptsPath&#x26;quot;, &#x26;quot;CDN Script Path&#x26;quot;, 250, false);\r\n                    options.AddParameter(&#x26;quot;cdnStylesPath&#x26;quot;, &#x26;quot;CDN Styles Path&#x26;quot;, 250, false);\r\n                    options.AddParameter(&#x26;quot;gutter&#x26;quot;, &#x26;quot;Gutter&#x26;quot;);\r\n                    options.AddParameter(&#x26;quot;smart-tabs&#x26;quot;, &#x26;quot;Smart tabs&#x26;quot;);\r\n                    options.AddParameter(&#x26;quot;auto-links&#x26;quot;, &#x26;quot;Auto links&#x26;quot;);\r\n                    options.AddParameter(&#x26;quot;collapse&#x26;quot;, &#x26;quot;Collapse&#x26;quot;);\r\n                    options.AddParameter(&#x26;quot;tab-size&#x26;quot;, &#x26;quot;Tab size&#x26;quot;);\r\n                    options.AddParameter(&#x26;quot;toolbar&#x26;quot;, &#x26;quot;Toolbar&#x26;quot;);\r\n\r\n                    options.AddValue(&#x26;quot;cdnScriptsPath&#x26;quot;, &#x26;quot;&#x26;quot;); // &#x26;quot;http://alexgorbatchev.com.s3.amazonaws.com/pub/sh/3.0.83/scripts/&#x26;quot;);\r\n                    options.AddValue(&#x26;quot;cdnStylesPath&#x26;quot;, &#x26;quot;&#x26;quot;); // &#x26;quot;http://alexgorbatchev.com.s3.amazonaws.com/pub/sh/3.0.83/styles/&#x26;quot;);\r\n                    options.AddValue(&#x26;quot;gutter&#x26;quot;, true);\r\n                    options.AddValue(&#x26;quot;smart-tabs&#x26;quot;, true);\r\n                    options.AddValue(&#x26;quot;auto-links&#x26;quot;, true);\r\n                    options.AddValue(&#x26;quot;collapse&#x26;quot;, false);\r\n                    options.AddValue(&#x26;quot;tab-size&#x26;quot;, 4);\r\n                    options.AddValue(&#x26;quot;toolbar&#x26;quot;, true);\r\n\r\n                    _blogsOptions[blogId] = ExtensionManager.InitSettings(ExtensionName, options);\r\n\r\n                    // themes\r\n                    ExtensionSettings themes = new ExtensionSettings(&#x26;quot;Themes&#x26;quot;);\r\n                    themes.IsScalar = true;\r\n                    themes.AddParameter(&#x26;quot;SelectedTheme&#x26;quot;, &#x26;quot;Themes&#x26;quot;, 20, false, false, ParameterType.ListBox);\r\n                    themes.AddValue(&#x26;quot;SelectedTheme&#x26;quot;, new string[] { &#x26;quot;Default&#x26;quot;, &#x26;quot;Django&#x26;quot;, &#x26;quot;Eclipse&#x26;quot;, &#x26;quot;Emacs&#x26;quot;, &#x26;quot;FadeToGrey&#x26;quot;, &#x26;quot;MDUltra&#x26;quot;, &#x26;quot;Midnight&#x26;quot;, &#x26;quot;Dark&#x26;quot; }, &#x26;quot;Default&#x26;quot;);\r\n                    _blogsThemes[blogId] = ExtensionManager.InitSettings(ExtensionName, themes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n}\r\n\r\nprivate static ExtensionSettings Themes\r\n{\r\n    get\r\n    {\r\n        // by invoking the &#x26;quot;Options&#x26;quot; property getter, we are ensuring\r\n        // that an entry is put into _blogsThemes for the current blog instance.\r\n        ExtensionSettings options = Options;\r\n        return _blogsThemes[Blog.CurrentInstance.Id];\r\n    }\r\n}\r\n\r\nstatic SyntaxHighlighter()\r\n{\r\n    Post.Serving += AddSyntaxHighlighter;\r\n    InitSettings();\r\n}\r\n\r\nprivate static void AddSyntaxHighlighter(object sender, ServingEventArgs e)\r\n{\r\n    if (!ExtensionManager.ExtensionEnabled(&#x26;quot;SyntaxHighlighter&#x26;quot;))\r\n        return;\r\n\r\n\tif(e.Location == ServingLocation.Feed) \r\n        return;\r\n\r\n    // if no code blocks on the page - don't bother\r\n    if (!e.Body.ToLowerInvariant().Contains(&#x26;quot;&#x26;lt;pre class=\\&#x26;quot;brush:&#x26;quot;))\r\n        return;\r\n\r\n    HttpContext context = HttpContext.Current;\r\n\t\r\n    Page page = (Page)context.CurrentHandler;\r\n\r\n    if ((context.CurrentHandler is Page == false) || (context.Items[ExtensionName] != null))\r\n    {\r\n        return;\r\n    }\r\n\r\n    AddCssStyles(page);\r\n    AddJavaScripts(page);\r\n    AddOptions(page);\r\n\r\n    context.Items[ExtensionName] = 1;\r\n}\r\n\r\nprivate static void AddCssStyles(Page page)\r\n{\r\n    AddStylesheet(&#x26;quot;shCore.css&#x26;quot;, page);\r\n\r\n    if (Themes != null)\r\n    {\r\n        switch (Themes.GetSingleValue(&#x26;quot;SelectedTheme&#x26;quot;))\r\n        {\r\n            case &#x26;quot;Django&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeDjango.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;Eclipse&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeEclipse.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;Emacs&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeEmacs.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;FadeToGrey&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeFadeToGrey.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;MDUltra&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeMDUltra.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;Midnight&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeMidnight.css&#x26;quot;, page);\r\n                break;\r\n            case &#x26;quot;Dark&#x26;quot;:\r\n                AddStylesheet(&#x26;quot;shThemeRDark.css&#x26;quot;, page);\r\n                break;\r\n            default:\r\n                AddStylesheet(&#x26;quot;shThemeDefault.css&#x26;quot;, page);\r\n                break;\r\n        }\r\n    }       \r\n}\r\n\r\nprivate static void AddJavaScripts(Page page)\r\n{\r\n    if (BlogSettings.Instance.EnableOptimization)\r\n    {\r\n        BlogEngine.Core.Web.Scripting.Helpers.AddScript(\r\n            page, string.Format(&#x26;quot;{0}Scripts/highlighter&#x26;quot;, Utils.ApplicationRelativeWebRoot), false, true, true);\r\n    }\r\n    else\r\n    {\r\n        BlogEngine.Core.Web.Scripting.Helpers.AddScript(\r\n            page, string.Format(&#x26;quot;{0}Scripts/syntaxhighlighter/shCore.js&#x26;quot;, Utils.ApplicationRelativeWebRoot), false, true, true);\r\n        BlogEngine.Core.Web.Scripting.Helpers.AddScript(\r\n            page, string.Format(&#x26;quot;{0}Scripts/syntaxhighlighter/shAutoloader.js&#x26;quot;, Utils.ApplicationRelativeWebRoot), false, true, true);\r\n        BlogEngine.Core.Web.Scripting.Helpers.AddScript(\r\n            page, string.Format(&#x26;quot;{0}Scripts/syntaxhighlighter/shInit.js&#x26;quot;, Utils.ApplicationRelativeWebRoot), false, true, true);\r\n    }\r\n}\r\n\r\n#region Script/Style adding\r\n\r\nprivate static void AddJavaScript(string src, Page page)\r\n{\r\n    page.ClientScript.RegisterStartupScript(page.GetType(), src, String.Format(&#x26;quot;&#x26;lt;script type=\\&#x26;quot;text/javascript\\&#x26;quot; src=\\&#x26;quot;{0}\\&#x26;quot;&#x26;gt;&#x26;lt;/script&#x26;gt;&#x26;quot;, GetUrl(ScriptsFolder(), src)));\r\n}\r\n\r\nprivate static void AddStylesheet(string href, Page page)\r\n{\r\n    HtmlLink css = new HtmlLink();\r\n    css.Attributes[&#x26;quot;type&#x26;quot;] = &#x26;quot;text/css&#x26;quot;;\r\n    css.Attributes[&#x26;quot;rel&#x26;quot;] = &#x26;quot;stylesheet&#x26;quot;;\r\n    css.Attributes[&#x26;quot;href&#x26;quot;] = GetUrl(StylesFolder(), href);\r\n    //begin: jeff@zizhujy.com\r\n    try\r\n    {\r\n        if (page != null &#x26;amp;&#x26;amp; page.Header != null &#x26;amp;&#x26;amp; page.Header.Controls != null)\r\n            page.Header.Controls.Add(css);\r\n    }\r\n    catch (NullReferenceException ex)\r\n    {\r\n        throw ex;\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        throw ex;\r\n    }\r\n    //end: jeff@zizhujy.com\r\n}\r\n\r\nprivate static void AddOptions(Page page)\r\n{\r\n    StringBuilder sb = new StringBuilder();\r\n\r\n    var executeOn = @&#x26;quot;\r\n    if (typeof executeOn === 'undefined') {\r\n        window.executeOn = function (condition, func) {\r\n            var interval = setInterval(function () {\r\n                try {\r\n                    var result = false;\r\n\r\n                    if (typeof condition === &#x26;quot;&#x26;quot;function&#x26;quot;&#x26;quot;) {\r\n                        result = condition();\r\n                    } else if (typeof condition === &#x26;quot;&#x26;quot;string&#x26;quot;&#x26;quot;) {\r\n                        result = eval(condition);\r\n                    } else {\r\n                        throw &#x26;quot;&#x26;quot;argument 'condition' must be a bool function or a bool expression.&#x26;quot;&#x26;quot;;\r\n                    }\r\n\r\n                    if (result === true) {\r\n                        clearInterval(interval);\r\n                        func();\r\n                    }\r\n                } catch (ex) {\r\n                    clearInterval(interval);\r\n                    throw ex;\r\n                }\r\n            }, 100);\r\n        };\r\n    }&#x26;quot;;\r\n\r\n    \r\n    sb.AppendLine(&#x26;quot;&#x26;lt;script type=\\&#x26;quot;text/javascript\\&#x26;quot; defer=\\&#x26;quot;defer\\&#x26;quot;&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(executeOn);\r\n\r\n    sb.AppendLine(@&#x26;quot;executeOn(&#x26;quot;&#x26;quot;typeof SyntaxHighlighter !== 'undefined' &#x26;quot;&#x26;quot;, function() {&#x26;quot;);\r\n\r\n    // add not-default options\r\n    if (Options != null)\r\n    {\r\n        if(Options.GetSingleValue(&#x26;quot;gutter&#x26;quot;).ToLowerInvariant() == &#x26;quot;false&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;gutter&#x26;quot;));\r\n\r\n        if (Options.GetSingleValue(&#x26;quot;smart-tabs&#x26;quot;).ToLowerInvariant() == &#x26;quot;false&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;smart-tabs&#x26;quot;));\r\n\r\n        if (Options.GetSingleValue(&#x26;quot;auto-links&#x26;quot;).ToLowerInvariant() == &#x26;quot;false&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;auto-links&#x26;quot;));\r\n\r\n        if (Options.GetSingleValue(&#x26;quot;collapse&#x26;quot;).ToLowerInvariant() == &#x26;quot;true&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;collapse&#x26;quot;));\r\n        \r\n        if (Options.GetSingleValue(&#x26;quot;toolbar&#x26;quot;).ToLowerInvariant() == &#x26;quot;false&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;toolbar&#x26;quot;));\r\n\r\n        if (Options.GetSingleValue(&#x26;quot;tab-size&#x26;quot;) != &#x26;quot;4&#x26;quot;)\r\n            sb.AppendLine(GetOption(&#x26;quot;tab-size&#x26;quot;));\r\n    }  \r\n    \r\n    //sb.AppendLine(&#x26;quot;\\tSyntaxHighlighter.all();&#x26;quot;);\r\n\r\n    sb.AppendLine(@&#x26;quot;\r\n        executeOn(&#x26;quot;&#x26;quot;document.readyState === 'loaded' || document.readyState === 'complete'&#x26;quot;&#x26;quot;, function() {\r\n            SyntaxHighlighter.all();\r\n        });&#x26;quot;);\r\n\r\n    sb.AppendLine(@&#x26;quot;});&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;/script&#x26;gt;&#x26;quot;);\r\n    page.ClientScript.RegisterStartupScript(page.GetType(), &#x26;quot;SyntaxHighlighter&#x26;quot;, sb.ToString(), false);\r\n}\r\n\r\nprivate static string GetUrl(string folder, string url)\r\n{\r\n    string s = HttpContext.Current.Server.UrlPathEncode(string.Format(&#x26;quot;{0}{1}&#x26;quot;, folder, url));\r\n    if (!folder.ToLowerInvariant().Contains(&#x26;quot;http:&#x26;quot;) &#x26;amp;&#x26;amp; !folder.ToLowerInvariant().Contains(&#x26;quot;https://&#x26;quot;))\r\n        s = Utils.ApplicationRelativeWebRoot + s;\r\n    return s;\r\n}\r\n\r\n#endregion\r\n\r\n#region Private methods\r\n\r\nprivate static void InitSettings()\r\n{\r\n    // call Options getter so default settings are loaded on application start.\r\n    var s = Options;\r\n}\r\n\r\nstatic string OptionsHelp()\r\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;This extension implements excellent Alex Gorbatchev's syntax highlighter JS library for source code formatting. Please refer to &#x26;lt;a target=\\&#x26;quot;_new\\&#x26;quot; href=\\&#x26;quot;http://alexgorbatchev.com/wiki/SyntaxHighlighter:Usage\\&#x26;quot;&#x26;gt;this site&#x26;lt;/a&#x26;gt; for usage.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;cdnScriptsPath&#x26;lt;/b&#x26;gt;: Allows you to load the SyntaxHighlighter script from a CDN. Leave empty for local files&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;cdnStylesPath&#x26;lt;/b&#x26;gt;: Allows you to load the SyntaxHighlighter styles from a CDN. Leave empty for local files&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;auto-links&#x26;lt;/b&#x26;gt;: Allows you to turn detection of links in the highlighted element on and off. If the option is turned off, URLs won't be clickable.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;collapse&#x26;lt;/b&#x26;gt;: Allows you to force highlighted elements on the page to be collapsed by default.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;gutter&#x26;lt;/b&#x26;gt;:\tAllows you to turn gutter with line numbers on and off.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;smart-tabs&#x26;lt;/b&#x26;gt;:\tAllows you to turn smart tabs feature on and off.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;tab-size&#x26;lt;/b&#x26;gt;: Allows you to adjust tab size.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;b&#x26;gt;toolbar&#x26;lt;/b&#x26;gt;: Toggles toolbar on/off.&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    sb.AppendLine(&#x26;quot;&#x26;lt;p&#x26;gt;&#x26;lt;a target=\\&#x26;quot;_new\\&#x26;quot; href=\\&#x26;quot;http://alexgorbatchev.com/wiki/SyntaxHighlighter:Configuration\\&#x26;quot;&#x26;gt;more...&#x26;lt;/a&#x26;gt;&#x26;lt;/p&#x26;gt;&#x26;quot;);\r\n    return sb.ToString();\r\n}\r\n\r\nstatic string GetOption(string opt)\r\n{\r\n    if (Options != null)\r\n    {\r\n        string pattern = &#x26;quot;\\tSyntaxHighlighter.defaults['{0}'] = {1};&#x26;quot;;\r\n\r\n        string val = Options.GetSingleValue(opt).ToLowerInvariant();\r\n        return string.Format(pattern, opt, val);\r\n    }\r\n\r\n    return &#x26;quot;&#x26;quot;;\r\n}\r\n\r\nstatic string ScriptsFolder()\r\n{\r\n    if (Options != null)\r\n    {\r\n        if (!String.IsNullOrEmpty(Options.GetSingleValue(&#x26;quot;cdnScriptsPath&#x26;quot;)))\r\n            return Options.GetSingleValue(&#x26;quot;cdnScriptsPath&#x26;quot;);\r\n        else\r\n            return &#x26;quot;Scripts/syntaxhighlighter/&#x26;quot;;\r\n    }\r\n    return &#x26;quot;&#x26;quot;;\r\n}\r\n\r\nstatic string StylesFolder()\r\n{\r\n    if (Options != null)\r\n    {\r\n        if (!String.IsNullOrEmpty(Options.GetSingleValue(&#x26;quot;cdnStylesPath&#x26;quot;)))\r\n            return Options.GetSingleValue(&#x26;quot;cdnStylesPath&#x26;quot;);\r\n        else\r\n            return &#x26;quot;Styles/syntaxhighlighter/&#x26;quot;;\r\n    }\r\n    return &#x26;quot;&#x26;quot;;\r\n}\r\n\r\n#endregion\n</code></pre>\n<p>}</pre></p>\n  </li>\n  <li>Open your site.master.cs, and comment out the line as below shows inside the Render method. \r\n    <br />\n<pre><code>&#x3C;pre class=\"brush: csharp;\">protected override void Render(HtmlTextWriter writer)\r\n{\r\n    using (HtmlTextWriter htmlwriter = new HtmlTextWriter(new System.IO.StringWriter()))\r\n    {\r\n        base.Render(htmlwriter);\r\n        string html = htmlwriter.InnerWriter.ToString();\r\n\r\n        //html = reg.Replace(html, string.Empty).Trim();\r\n\r\n        writer.Write(html);\r\n    }\r\n}&#x3C;/pre>\n</code></pre>\n  </li>\n  <li>Go to your BlogEngine.NET Control panel, navigate to “Settings/Custom code” pane, and paste the following code to the “head section”: \r\n    <br />\n<pre><code>&#x3C;pre class=\"brush: html\">&#x26;lt;style type=&#x26;quot;text/css&#x26;quot;&#x26;gt;\r\nbody .syntaxhighlighter .line {\r\n    white-space: pre-wrap !important;\r\n}\n</code></pre>\n<p>&#x3C;/style></p>\n<p>&#x3C;script type=\"text/javascript\" id=\"line-word-wrap-syntax-highlighter\">\r\n$(function () {\r\n// Line wrap back\r\nvar shLineWrap = function () {\r\n// Fix by Jeff Tian that make it work with the collapsed setting\r\n$('.syntaxhighlighter:not(.collapsed)').each(function () {\r\n// Fetch\r\nvar $sh = $(this),\r\n$gutter = $sh.find('td.gutter'),\r\n$code = $sh.find('td.code')\r\n;\r\n// Cycle through lines\r\n$gutter.children('.line').each(function (i) {\r\n// Fetch\r\nvar $gutterLine = $(this),\r\n$codeLine = $code.find('.line:nth-child(' + (i + 1) + ')')\r\n;\r\n//alert($gutterLine);\r\n// Fetch height\r\nvar height = $codeLine.height() || 0;\r\nif (!height) {\r\nheight = 'auto';\r\n}\r\nelse {\r\nheight = height += 'px';\r\n//alert(height);\r\n}\r\n// Copy height over\r\n$gutterLine.attr('style', 'height: ' + height + ' !important'); // fix by Edi, for JQuery 1.7+ under Firefox 15.0\r\n});\r\n});\r\n};</p>\n<pre><code>    // Line wrap back when syntax highlighter has done it's stuff\r\n    var shLineWrapWhenReady = function () {\r\n        if ($('.syntaxhighlighter').length === 0) {\r\n            setTimeout(shLineWrapWhenReady, 100);\r\n        }\r\n        else {\r\n            shLineWrap();\r\n            // Fix by Jeff Tian that make it work with the collapsed setting\r\n            if ($(&#x26;quot;.syntaxhighlighter.collapsed&#x26;quot;).length &#x26;gt; 0) {\r\n                setTimeout(shLineWrapWhenReady, 100);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Fire\r\n    shLineWrapWhenReady();\r\n});\n</code></pre>\n<p>&#x3C;/script></pre>\r\nScreenshot:</p>\n<pre><code>&#x3C;br />&#x3C;a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_625.png\">&#x3C;img title=\"[Solved] SyntaxHighlighter issues after upgrading BlogEngine.NET from 2.6 to 2.7\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"[Solved] SyntaxHighlighter issues after upgrading BlogEngine.NET from 2.6 to 2.7\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_thumb_344.png\" width=\"618\" height=\"212\" />&#x3C;/a> &#x3C;/li>\n</code></pre>\n  <li>Now all issues related to SyntaxHighlighter are resolved! </li>\r\n</ol>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}