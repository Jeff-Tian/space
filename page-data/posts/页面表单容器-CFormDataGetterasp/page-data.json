{"componentChunkName":"component---src-templates-post-js","path":"/posts/页面表单容器-CFormDataGetterasp/","result":{"data":{"sitePage":{"id":"SitePage /posts/页面表单容器-CFormDataGetterasp/"}},"pageContext":{"url":"/posts/页面表单容器-CFormDataGetterasp/","relativePath":"posts/页面表单容器-CFormDataGetterasp.md","relativeDir":"posts","base":"页面表单容器-CFormDataGetterasp.md","name":"页面表单容器-CFormDataGetterasp","frontmatter":{"title":"页面表单容器 CFormDataGetter.asp","stackbit_url_path":"posts/页面表单容器-CFormDataGetterasp","date":"2010-04-04 18:33:10","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/04/04/页面表单容器-CFormDataGetterasp","template":"post"},"html":"<pre><code>    &#x3C;p>页面表单容器类，用来封装对表单数据的二进制读取等操作，是无组件上传的核心程序。其中有用到一个文件类，文件类的代码见：&#x3C;a href=\"http://www.myfootprints.cn/blog/post/329.html\">http://www.myfootprints.cn/blog/post/329.html&#x3C;/a>&#x3C;/p>\n</code></pre>\n<pre class=\"brush: vb\">&lt;!--#include file=\"CFile.asp\"--&gt;\n&lt;% \n'**************************************************** \n'文件名: CFormDataGetter.asp\n'描  述：这是一个页面表单容器，可以分析每个表单元素的内容，也可用作无组件上传类。\n'\t\n'\n'**************************************************** \n'# *Using CFile.asp*\n\nClass CFormDataGetter\n    ' 表单字节大小\n    Private lFormSize\n    ' 表单数据\n    Private bnsFormData\n    ' 表单数据中字段间的分隔符\n    private bnsDivider\n    Private bnsVbCrLf\n    Private lChunkBytes\n    Private lReadedBytes\n    \n    ' 字段分隔符\n    Public Property Get FieldDivider()\n        FieldDivider = bnsDivider\n    End Property\n    \n    Public Property Get FormSize() \n        FormSize = lFormSize\n    End Property\n    \n    Public Property Get FormBinaryData()\n        FormBinaryData = bnsFormData\n    End Property\n    \n    Public Property Get Chunk()\n        Chunk = lChunkBytes\n    End Property\n    \n    Public Property Let Chunk(ByVal l)\n        lChunkBytes = l\n    End Property\n    \n    Public Property Get ReadedBytes()\n        ReadedBytes = lReadedBytes\n    End Property\n    \n    Public Property Let ReadedBytes(ByVal l)\n        lReadedBytes = l\n    End Property\n    \n    Public Property Get LogPath()\n        On Error Resume Next\n        LogPath = Session(\"ssnLogPath\")\n        If Err.number &lt;&gt; 0 Then\n            LogPath = sMF_WebSiteRootFolder\n        End If\n        On Error Goto 0\n    End Property\n    \n    Public Property Let LogPath(ByVal s)\n        Session(\"ssnLogPath\") = s\n    End Property \n    \n    Public Property Get LogFileName()\n        On Error Resume Next\n        LogFileName = Session(\"ssnLogFileName\")\n        If Err.number &lt;&gt; 0 Then\n            LogFileName = \"DataReadLog.xml\"\n        End If\n        On Error Goto 0\n    End Property\n    \n    Public Property Let LogFileName(ByRef s)\n        Session(\"ssnLogFileName\") = s\n    End Property\n        \n    Private Sub Class_Initialize\n        ' 分块数\n        Dim lChunks, i, lBytesToRead, oStream\n        bnsVbCrLf = ChrB(13) &amp; ChrB(10)\n        \n        ' 获取表单的总字节数\n        lFormSize = Request.TotalBytes\n        \n        Me.Chunk = 100 * 1024\n        Me.ReadedBytes = 0\n        \n        If lFormSize &gt; 0 And Me.Chunk &gt; 0 Then\n            If lFormSize Mod Me.Chunk = 0 Then\n                lChunks = lFormSize \\ Me.Chunk\n            Else\n                lChunks = lFormSize \\ Me.Chunk + 1\n            End If\n            \n            Set oStream = Server.CreateObject(\"ADODB.Stream\")\n            oStream.Type = 1\n            oStream.Mode = 3\n            oStream.Open \n            \n            ' 分块读取数据\n            For i = 1 To lChunks\n                ' 如果剩余的数据多于分块，则读进一个分块，否则读进剩余数据\n                If lFormSize - Me.ReadedBytes &gt; Me.Chunk Then\n                    lBytesToRead = Me.Chunk\n                Else\n                    lBytesToRead = lFormSize - Me.ReadedBytes\n                End If\n                \n                oStream.Write Request.BinaryRead(lBytesToRead)                \n                Me.ReadedBytes = Me.ReadedBytes + lBytesToRead\n                \n                ' 记录读进了多少数据\n                On Error Resume Next\n                'LogDataReaded i, Now(), Me.ReadedBytes, lFormSize\n                'LogDataReadInSession Me.ReadedBytes / lFormSize\n                On Error Goto 0\n            Next\n            oStream.Position = 0\n            bnsFormData = oStream.Read\n            \n            Set oStream = Nothing\n            \n            ' 下面开始查找表单数据中字段间的分隔符\n            Dim lIndex\n            \n            lIndex = CLng(InstrB(bnsFormData,bnsVbCrLf))\n            If lIndex &gt;= 1 Then\n                ' 成功获取到字段间的分隔符\n                bnsDivider = LeftB(bnsFormData, lIndex - 1)\n            Else\n                '\n                bnsDivider = \"\"\n            End If\n        Else\n            bnsFormData = \"\"\n            bnsDivider = \"\"\n        End If\n    End Sub\n    \n    '\n    ' 记录上传了多少？\n    '\n    Public Function LogDataReaded(ByVal lSerialNumber, ByVal sTimeStamp, ByVal lBytesReaded, ByVal lTotalBytes)\n        Dim sFileFullVirtualName, sFileContent, oFS, oFile\n        \n        sFileFullVirtualName = Me.LogPath &amp; Me.LogFileName\n        sFileContent = \"&lt;?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;datareaded&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;serialnumber&gt;\" &amp; lSerialNumber &amp; \"&lt;/serialnumber&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;timestamp&gt;\" &amp; sTimeStamp &amp; \"&lt;/timestamp&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;bytesreaded&gt;\" &amp; lBytesReaded &amp; \"&lt;/bytesreaded&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;totalbytes&gt;\" &amp; lTotalBytes &amp; \"&lt;/totalbytes&gt;\"\n        sFileContent = sFileContent &amp; \"&lt;/datareaded&gt;\"\n        \n        Set oFS = Server.CreateObject(\"Scripting.FileSystemObject\")\n        Set oFile = oFS.CreateTextFile(Server.MapPath(sFileFullVirtualName), True)\n        \n        oFile.Write sFileContent\n        oFile.Close\n        Set oFile = Nothing\n        Set oFS = Nothing\n        \n    End Function\n    \n    '\n    ' 记录上传了多少？\n    '\n    Public Sub LogDataReadInTxtFile(ByVal dPercent)\n        Dim sFileFullVirtualName, sFileContent, oFS, oFile\n        \n        sFileFullVirtualName = Me.LogPath &amp; Me.LogFileName\n        sFileContent = dPercent\n        \n        Set oFS = Server.CreateObject(\"Scripting.FileSystemObject\")\n        Set oFile = oFS.CreateTextFile(Server.MapPath(sFileFullVirtualName), True)\n        \n        oFile.Write sFileContent\n        oFile.Close\n        Set oFile = Nothing\n        Set oFS = Nothing        \n    End Sub\n    \n    ' \n    ' 将上传了多少的信息记录到 Session 变量中\n    '\n    Public Sub LogDataReadInSession(ByVal dPercent)\n        Session(\"ssnProgress\") = dPercent\n    End Sub\n        \n    '\n    ' 获取指字字段名的二进制串\n    '\n    Public Function GetFieldBinaryData(ByRef sFieldName)\n        Dim bnsBorder, lIndex, lFieldStart, lFieldEnd, lFieldSize\n        \n        If Me.FormSize &lt;= 0 Then\n            GetFieldBinaryData = \"\"\n            Exit Function\n        End If\n        \n        ' 字段开始边界\n        bnsBorder = bnsDivider &amp; bnsVBCrLf &amp; ConvertStringToBinary(\"Content-Disposition: form-data; name=\"\"\" &amp; sFieldName &amp; \"\"\"\") &amp; bnsVbCrLf &amp; bnsVbCrLf\n        lIndex = InStrB(1, Me.FormBinaryData, bnsBorder)\n        If lIndex &gt; 0 Then\n            ' 定位到字段内容的开始位置\n            lFieldStart = lIndex + LenB(bnsBorder)\n            ' 定位到字段内容的结束位置\n            lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsDivider) - 3\n            ' 计算字段内容的字节长度\n            lFieldSize = lFieldEnd - lFieldStart + 1\n            GetFieldBinaryData = MidB(Me.FormBinaryData, lFieldStart, lFieldSize)\n        Else\n            GetFieldBinaryData = bnsBorder\n        End If\n    End Function\n    \n    '\n    ' 获取指定字段名的文本串\n    '\n    Public Function GetFieldTextData(ByRef sFieldName)\n        GetFieldTextData = ConvertBinaryToString(GetFieldBinaryData(sFieldName))\n    End Function\n    \n    '\n    ' 将一个文本字符串转换成二进制字符串\n    '\n    Public Function ConvertStringToBinary(ByRef s)\n        Dim bns, i\n        \n        For i = Len(s) To 1 Step -1\n            bns = ChrB(Asc(Mid(s, i, 1))) &amp; bns\n        Next\n        \n        ConvertStringToBinary = bns\n    End Function\n    \n    '\n    ' 将一个二进制字符串转换成文本字符串\n    ' ------------------------------------\n    ' 此方法在localhost上能正确使用，得到理想的效果。但是将网站上传到服务器上时，有时会失灵。\n    ' 在别的地方看到另一种程序来将二进制字符转换成文本字符串，和我的差不多，但是对于Ascii码大于等于128的，进行跳过，然后使用AscW()对连接两个字符同时进行转换。如下 \n    ' Public Function ConvertBinaryToString(ByVal bns)\n    '   Dim i, s, sClow\n    '   For i = 1 To LenB(bns)\n    '       sClow = MidB(bns, i, 1)\n    '       If AscB(sClow) &lt; 128 Then\n    '           s = s &amp; Chr(AscB(sClow))\n    '       Else\n    '           i = i + 1\n    '           If i &lt;= LenB(bns) Then s = s &amp; Chr(AscW(MidB(bns, i, 1) &amp; sClow))\n    '       End If\n    '   Next\n    '   ConvertBinaryToString = s\n    ' End Function\n    '\n    Public Function ConvertBinaryToString(ByVal bns)\n        Dim s, i\n        \n        s = \"\"\n        For i = LenB(bns) To 1 Step -1\n            s = Chr(AscB(MidB(bns, i, 1))) &amp; s\n        Next\n        \n        ConvertBinaryToString = s\n    End Function\n    \n    '\n    ' 获取文件\n    '\n    Public Function GetFile(ByRef sFieldName) \n        Dim bnsBorder, lIndex, lFieldStart, lFieldEnd, lFieldSize, oFile\n        \n        If Me.FormSize &lt;= 0 Then\n            Set GetFile = Nothing\n            'AddInfo \"表单大小为0字节\"\n            Exit Function\n        Else\n            'AddInfo \"表单大小为 \" &amp; Me.FormSize &amp; \" 字节\"\n        End If\n        \n        ' 文件二进制流开始边界\n        bnsBorder = bnsDivider &amp; bnsVbCrLf &amp; ConvertStringToBinary(\"Content-Disposition: form-data; name=\"\"\" &amp; sFieldName &amp; \"\"\"; filename=\"\"\")\n        \n        lIndex = InStrB(1, Me.FormBinaryData, bnsBorder)\n        \n        If lIndex &gt; 0 Then\n            Set oFile = New CFile\n            ' 以下获取文件完整路径名\n            '   定位到第1个字符\n            lFieldStart = lIndex + LenB(bnsBorder)\n            '   定位到最后1个字符\n            lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsVbCrLf) - 2\n            '   计算路径字段内容大小\n            lFieldSize = lFieldEnd - lFieldStart + 1\n            If lFieldSize &gt; 0 Then\n                ' 文件名\n                oFile.FullName = Cbns2TextStream(MidB(Me.FormBinaryData, lFieldStart, lFieldSize), \"utf-8\")\n                \n                ' 以下获取文件的MIME类型\n                Dim lPos\n                lPos = InStrB(lFieldEnd, Me.FormBinaryData, ConvertStringToBinary(\"Content-Type: \"))\n                If lPos &gt; 0 Then\n                    lFieldStart = lPos + LenB(ConvertStringToBinary(\"Content-Type: \"))\n                    lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsVbCrLf &amp; bnsVbCrLf) - 1\n                    lFieldSize = lFieldEnd - lFieldStart + 1\n                    If lFieldSize &gt; 0 Then\n                        oFile.MIME = ConvertBinaryToString(MidB(Me.FormBinaryData, lFieldStart, lFieldSize))\n                    Else \n                        oFile.MIME = \"\"\n                    End If\n                Else\n                    oFile.MIME = \"\"\n                End If\n                \n                ' 以下获取文件内容\n                lPos = lFieldEnd\n                lFieldStart = InStrB(lPos, Me.FormBinaryData, bnsVbCrLf &amp; bnsVbCrLf) + 4\n                lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsDivider) - 3\n                lFieldSize = lFieldEnd - lFieldStart + 1\n                If lFieldSize &lt;= 0 Or lFieldStart &lt;= 0 Then\n                    oFile.BinaryStream = \"\"\n                Else\n                    Dim stmFormBinaryData, stmFileBinaryData\n                    Set stmFormBinaryData = Server.CreateObject(\"ADODB.Stream\")\n                    Set stmFileBinaryData = Server.CreateObject(\"ADODB.Stream\")\n                    stmFormBinaryData.Type = 1\n                    stmFormBinaryData.Open\n                    stmFormBinaryData.Write Me.FormBinaryData\n                    \n                    stmFileBinaryData.Type = 1\n                    stmFileBinaryData.Open \n                    ' 在ADODB.Stream对象里，索引从0开始，而不是VB的其他地方，索引从1开始\n                    'stmFormBinaryData.Position = lFieldStart - 1\n                    stmFormBinaryData.Position = 0\n                    'stmFormBinaryData.CopyTo stmFileBinaryData, lFieldSize\n                    stmFormBinaryData.CopyTo stmFileBinaryData\n                    ' 使用MidB()或者LeftB()返回的字符串会自动添加一些别的信息，导致结果二进制串与原来的不太一样\n                    'oFile.BinaryStream = MidB(Me.FormBinaryData, lFieldStart, lFieldSize)\n                    stmFileBinaryData.Position = lFieldStart - 1\n                    oFile.BinaryStream = stmFileBinaryData.Read(lFieldSize)\n                    stmFormBinaryData.Close\n                    stmFileBinaryData.Close\n                    Set stmFormBinaryData = Nothing\n                    Set stmFileBinaryData = Nothing\n                End If\n                Set GetFile = oFile\n            Else\n                oFile.BinaryStream = \"\"\n                Set GetFile = oFile\n            End If\n        Else\n            ' 未找到文件二进制流开始边界\n            'AddInfo \"未找到文件二进制流开始边界\"\n            'AddInfo \"表单数据：\" &amp; Cbns2TextStream(Me.FormBinaryData, \"utf-8\")\n            Set GetFile = Nothing\n            Exit Function\n        End If\n    End Function\n    \n    '\n    ' 保存文件\n    '\n    Public Function SaveFile(ByRef sFieldName, ByRef sFullName, ByVal iWriteMode) \n        Dim bnsBorder, lIndex, lFieldStart, lFieldEnd, lFieldSize, oFile\n        \n        If Me.FormSize &lt;= 0 Then\n            Set GetFile = Nothing\n            Exit Function\n        End If\n        \n        ' 文件二进制流开始边界\n        bnsBorder = bnsDivider &amp; bnsVbCrLf &amp; ConvertStringToBinary(\"Content-Disposition: form-data; name=\"\"\" &amp; sFieldName &amp; \"\"\"; filename=\"\"\")\n        \n        lIndex = InStrB(1, Me.FormBinaryData, bnsBorder)\n        \n        If lIndex &gt; 0 Then\n            Set oFile = New CFile\n            ' 以下获取文件完整路径名\n            '   定位到第1个字符\n            lFieldStart = lIndex + LenB(bnsBorder)\n            '   定位到最后1个字符\n            lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsVbCrLf) - 2\n            '   计算路径字段内容大小\n            lFieldSize = lFieldEnd - lFieldStart + 1\n            ' 文件名\n            oFile.FullName = ConvertBinaryToString(MidB(Me.FormBinaryData, lFieldStart, lFieldSize))\n            \n            ' 以下获取文件的MIME类型\n            Dim lPos\n            lPos = lFieldEnd\n            lFieldStart = lPos + 18\n            lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsVbCrLf &amp; bnsVbCrLf) - 1\n            lFieldSize = lFieldEnd - lFieldStart + 1\n            oFile.MIME = ConvertBinaryToString(MidB(Me.FormBinaryData, lFieldStart, lFieldSize))\n            \n            ' 以下获取文件内容\n            lPos = lFieldEnd\n            lFieldStart = lPos + 5\n            lFieldEnd = InStrB(lFieldStart, Me.FormBinaryData, bnsDivider) - 3\n            lFieldSize = lFieldEnd - lFieldStart + 1\n            oFile.BinaryStream = MidB(Me.FormBinaryData, lFieldStart, lFieldSize)\n            \n            ' 开始保存文件\n            Dim stm, stmFile\n            \n            If Trim(sFullName) = \"\" Or Right(sFullName, 1) = \"\\\" Then Exit Function\n            Set stm = Server.CreateObject(\"ADODB.Stream\")\n            Set stmFile = Server.CreateObject(\"ADODB.Stream\")\n            stm.Type = 1\n            stm.Mode = 3\n            stm.Open\n            'stm.Write MidB(Me.FormBinaryData, lFieldStart, lFieldSize)\n            stm.Write Me.FormBinaryData\n            stmFile.Type = 1\n            stmFile.Open \n            stm.Position = lFieldStart - 1\n            stm.CopyTo stmFile, lFieldSize\n            stmFile.SaveToFile sFullName, iWriteMode\n            stm.Close\n            stmFile.Close\n            Set stm = Nothing\n            Set stmFile = Nothing\n            \n            Set SaveFile = oFile\n        Else\n            Set SaveFile = Nothing\n            Exit Function\n        End If\n    End Function\n    \n    '\n    ' 将指定的二进制串转换成特定编码的文本\n    '\n    Public Function Cbns2TextStream(ByRef bns, ByRef sCharset)\n        Dim stm\n        \n        Set stm = Server.CreateObject(\"ADODB.Stream\")\n        stm.Type = 2\n        stm.Open\n        stm.WriteText bns\n        stm.Position = 0\n        If Len(sCharset) &gt; 0 Then stm.Charset = sCharset\n        Cbns2TextStream = stm.ReadText\n        stm.Close\n        Set stm = Nothing\n    End Function \nEnd Class\n%&gt;\n</pre>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[],"slicesMap":{}}