{"componentChunkName":"component---src-templates-post-js","path":"/posts/涂鸦代理：强行引用反盗链图片/","result":{"data":{"sitePage":{"id":"SitePage /posts/涂鸦代理：强行引用反盗链图片/"}},"pageContext":{"url":"/posts/涂鸦代理：强行引用反盗链图片/","relativePath":"posts/涂鸦代理：强行引用反盗链图片.md","relativeDir":"posts","base":"涂鸦代理：强行引用反盗链图片.md","name":"涂鸦代理：强行引用反盗链图片","frontmatter":{"title":"涂鸦代理：强行引用反盗链图片","stackbit_url_path":"posts/涂鸦代理：强行引用反盗链图片","date":"2010-03-08 01:19:01","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/03/08/涂鸦代理：强行引用反盗链图片","template":"post"},"html":"<pre><code>    &#x3C;script type=\"text/javascript\" src=\"http://www.myfootprints.cn/jsLib/mfMessage.js\">&#x3C;/script>      &#x3C;script type=\"text/javascript\"> \n&#x3C;!--\n    var oInfo = new mfMessage(); \n\n    // 将焦点置于第一个输入框上\n    oInfo.addEventHandler(window, 'load', function () {\n            oInfo.focusOnFirstFormElement();\n            }); \n    \n    // 生成图片链接地址\n    function generateUrl() {\n        var sRssUrl = document.getElementById('link').value;\n        var reUrl = /^(http:\\/\\/)?(\\w+\\.)?([\\w|-]+)\\.\\w+.*[^.]$/;\n        if (sRssUrl.length &#x3C;= 0) {\n            return;\n        }\n        if (!reUrl.test(sRssUrl)) {\n            return;\n        }\n        var sDoodleImageRSSUrl = 'http://www.myfootprints.cn/ASPAgent.asp';\n        sDoodleImageRSSUrl += '?url=' + encodeURIComponent(sRssUrl) + '&#x26;contentType=image/*';\n        // 由于有些地方会对链接类型做检查，后缀名不是图片格式则非法，所以多加一个参数\n        sDoodleImageRSSUrl += '&#x26;imgType=.jpg';\n        document.getElementById('doodleLink').value = sDoodleImageRSSUrl;\n\n        var oImg = document.getElementById('imagePreview');\n        oImg.src = sDoodleImageRSSUrl;\n\n        return sDoodleImageRSSUrl;\n    }\n\n    // 输入框里的按键事件捕获\n    function catchKeyup() {\n        var oEvent = oInfo.getEvent(window.event);\n        if (oEvent.keyCode == 13) {\n            if (oEvent.target == document.getElementById('link')) {\n                // 生成图片的链接地址\n                generateUrl();\n            } else if (oEvent.target == document.getElementById('doodleLink')) {\n                // 复制图片的链接地址\n                copyIt(oEvent.target);\n            }\n        }\n        return false;\n    }\n\n    // 复制对象内容\n    function copyIt(o) {\n        try {\n            if (o.value.length > 0) {\n                o.select();\n                window.document.execCommand('Copy');\n\n                oInfo.showMessage('涂鸦代理链接复制成功。', true);\n            }\n        } catch (oError) {\n            oInfo.showMessage('发生意外，请用鼠标右键->复制或者Ctrl+C复制。');\n        }\n    }\n    \n//-->\n&#x3C;/script>\n</code></pre>\n<div style=\"text-indent: 2em; font-size: larger;\">\n<div style=\"background-color: yellow; border: solid 1px red; color: black;\">\n<p><a title=\"涂鸦代理：强行引用反盗链图片\" target=\"_blank\" href=\"http://www.myfootprints.cn/tools/14_DoodleAgent.asp\">进入涂鸦代理 &gt;&gt;</a></p>\n</div>\n<p>我在前面的一篇文章《<a target=\"_blank\" href=\"http://www.myfootprints.cn/blog/post/201.html\">自制网页代理</a>》中，提到了网页代理的两个用处。</p>\n<p>今天，我在上篇的网页代理代码中增加了少许几行，便又增加了网页代理的一个“邪恶”的用处，那就是用来盗链像QQ空间等使用了反盗链技术的网站中的图片。</p>\n<p>先来分析一下防盗链的技术细节：</p>\n<p>一般的反盗链，是在服务器端加上了这样的逻辑，如果对此资源的请求是来自以下两种情况，则允许该请求，并给予相应的响应。</p>\n<p>① 直接输入；</p>\n<p>② 从本站转发的请求。</p>\n<p>如果对此资源的请求是<strong>来自其他的未经授权的网站</strong>，那么不允许该请求，并可选地给予一个提示。</p>\n<p>以下是一个示例。</p>\n<p>比如以下这个资源链接，就是QQ空间相册中的一个图片文件：</p>\n<p><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_275.png\">http://b12.photo.store.qq.com/http_imgload.cgi?/rurl4_b=26fea1a982b3b43d7e42333ceb8faeb0a2ba1ab8621187e3a05a36b67b0123b8d544bd31c983761e0359ed86fea5943ce1fb9d402da2036fe393da21799a280f08e82c7a3ee1841e3d6d1b0056183db04cbcdd84&amp;a=23&amp;b=12</a></p>\n<p>如果你直接点击那个链接，是可以看到那个图片的。如果你在QQ空间中发表日志，在日志中引用该图片，也是可以正确地看到那个图片的。</p>\n<p>但是，如果你在其他的地方引用该图片，就看不到那张图片了，而是看到一个提示图片，提示说：“此图片来自QQ空间，未经允许不可引用”。比如在人人网中发表的日志“<a href=\"http://blog.renren.com/blog/244527631/424930074\">http://blog.renren.com/blog/244527631/424930074</a>”中，就引用了该图片，但是看不见。</p>\n<p>或者我再在此篇文章中直接引用该图片如下，你将看到一个不准引用的提示：</p>\n<p><a target=\"_blank\" href=\"http://b12.photo.store.qq.com/http_imgload.cgi?/rurl4_b=26fea1a982b3b43d7e42333ceb8faeb0a2ba1ab8621187e3a05a36b67b0123b8d544bd31c983761e0359ed86fea5943ce1fb9d402da2036fe393da21799a280f08e82c7a3ee1841e3d6d1b0056183db04cbcdd84&amp;a=23&amp;b=12\"><img alt=\"不准引用的提示\" src=\"http://b12.photo.store.qq.com/http_imgload.cgi?/rurl4_b=26fea1a982b3b43d7e42333ceb8faeb0a2ba1ab8621187e3a05a36b67b0123b8d544bd31c983761e0359ed86fea5943ce1fb9d402da2036fe393da21799a280f08e82c7a3ee1841e3d6d1b0056183db04cbcdd84&amp;a=23&amp;b=12\"></a></p>\n<p>知道了以上技术细节，就可以找到破解方法了，即在别的未经授权的网站上引用图片时，将该请求转变成直接请求，而不是从该网站转发请求。于是便可以想到网页代理可以用来做这件事情。网页代理就是，代理你发出对该资源的请求，而且是直接请求的形式，它不会告诉目标服务器，我的这个请求，是从一个你没有授权的网站中发出来的。从而使得目标服务器给予期待的响应。</p>\n<p>我将我写的网页代理文件，命名为“涂鸦网页代理”。同样是上面那幅QQ空间中的图片，我在下面引用它，使用“涂鸦网页代理”的方式，来看看效果：</p>\n<p><a target=\"_blank\" href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_276.png\"><img alt=\"使用涂鸦网页代理来引用图片\" src=\"http://www.myfootprints.cn/ASPAgent.asp?url=http://b12.photo.store.qq.com/http_imgload.cgi?/rurl4_b=26fea1a982b3b43d7e42333ceb8faeb0a2ba1ab8621187e3a05a36b67b0123b8d544bd31c983761e0359ed86fea5943ce1fb9d402da2036fe393da21799a280f08e82c7a3ee1841e3d6d1b0056183db04cbcdd84&amp;a=23&amp;b=12&amp;contentType=image/*\"></a></p>\n<p>怎么样？真是令人激动。</p>\n<p>我不鼓励盗链，而且反对自己没有任何资源而全部盗链别人的资源的行为，那是一种偷窃的行为。然而，有时候的确需要引用别处的资源，这个时候是一种正当的引用，然而，如何区分正当与否，目标服务器实在无能为力。所以，如果你是正当引用，欢迎使用本文所提及的涂鸦网页代理。如果你想纯粹地偷窃，请走开。</p>\n<p>如何使用“涂鸦网页代理”呢？</p>\n<p>你只需要将你要引用的图片链接地址，套上一层“涂鸦网页代理”网址的外衣就可以了。格式如下：</p>\n<p>http://www.myfootprints.cn/ASPAgent.asp?url=你要引用的图片网址&amp;contentType=image/*</p>\n<p>非常地简单，如果你不想自己输入那些字符，那么，你只要将你要引用的图片链接，粘贴到下面的文本框中，并点击“生成涂鸦代理链接”，然后复制那个“涂鸦代理链接”，粘贴到你想引用的地方就可以了。</p>\n<p><strong>正当破解防盗链引用步骤：</strong></p>\n<p>（一）输入或者粘贴你要引用的图片链接地址（以http://开头）：</p>\n<p><label for=\"link\" style=\"text-indent: 0; width: 10em; display: inline-block; text-align: right;\">要引用的图片链接：</label> <input type=\"text\" id=\"link\" style=\"width: 20em;\" onkeyup=\"catchKeyup();\"> <input type=\"button\" value=\"生成涂鸦代理链接\" onclick=\"generateUrl()\"></p>\n<p><label for=\"doodleLink\" style=\"text-indent: 0; width: 10em; display: inline-block; text-align: right;\">涂鸦代理链接： </label> <input type=\"text\" id=\"doodleLink\" style=\"width: 20em;\" onkeyup=\"catchKeyup();\"> <input type=\"button\" value=\"复制\" onclick=\"copyIt(document.getElementById('doodleLink'));\"></p>\n<p><label for=\"link\" style=\"text-indent: 0; width: 10em; display: inline-block; text-align: right;\">引用图片预览：</label> <img alt=\"引用图片预览\" id=\"imagePreview\" src=\"\"></p>\n<p>&nbsp;(二）复制涂鸦代理链接，粘贴到你要引用的地方，搞定！</p>\n<p>&nbsp;</p>\n<p>知道了原理和使用方法，现在来看一看涂鸦网页代理的源代码，它是《<a target=\"_blank\" href=\"http://www.myfootprints.cn/blog/post/201.html\">自制网页代理</a>》一文中代码的改进版。虽然你可以直接使用上述引用向导来引用你想要的图片，但是，你也可以复制以下代理，制作自己的网页代理，并使用自己的代理来引用图片。这里的代码只是一个起步，你可以改进得更好。</p>\n<p>ASPAgent.asp源码：</p>\n<div style=\"text-indent: 0;\">\n<pre class=\"brush: vb\">&lt;%@LANGUAGE=\"VBSCRIPT\" CODEPAGE=\"65001\"%&gt;\n&lt;% Option Explicit %&gt;\n&lt;%Session.CodePage=65001%&gt;\n&lt;%\n    Response.CharSet = \"utf-8\"\n%&gt;\n&lt;%    \n    Dim sRSSUrl, oHTTP, charset, contentType\n    sRSSUrl = Request.QueryString(\"url\")\n    charset = Request.QueryString(\"charset\")\n    contentType = Request.QueryString(\"contentType\")\n<pre><code>If Len(contentType) &#x26;lt;= 0 Then\n    contentType = \"text/html\"\nEnd If\nResponse.ContentType = contentType\n\nIf Len(charset) &#x26;lt;= 0 Then\n    charset = \"utf-8\"\nEnd If\n\nIf Len(sRSSUrl) &#x26;gt; 0 Then\n\n    Set oHTTP = Server.CreateObject(\"Microsoft.XMLHTTP\")\n    oHTTP.Open \"GET\", sRSSURL, False\n    oHTTP.Send\n    \n    if contentType = \"text/html\" Then        \n        If charset = \"utf-8\" Then\n            Response.Write oHTTP.ResponseText\n        Else\n            Response.Write Cbns2TextStream(oHTTP.ResponseBody, charset)\n        End If\n    Else\n        Response.AddHeader \"Content-Disposition\", \"attachment; filename=\" &#x26;amp; \"OpenItWithYourPhotoViewer.jpg\"\n        Response.BinaryWrite oHTTP.ResponseBody\n    End If\n    Set oHTTP = Nothing\nElse\n    Response.Write \"\"\nEnd If\n</code></pre>\n<p>%>\n&#x3C;%\n'\n' 将指定的二进制串转换成特定编码的文本\n'\nPublic Function Cbns2TextStream(ByRef bns, ByRef sCharset)\nDim stm</p>\n<pre><code>    Set stm = Server.CreateObject(\"ADODB.Stream\")\n    stm.Type = 2\n    stm.Open\n    stm.WriteText bns\n    stm.Position = 0\n    If Len(sCharset) &#x26;gt; 0 Then stm.Charset = sCharset\n    Cbns2TextStream = stm.ReadText\n    stm.Close\n    Set stm = Nothing\nEnd Function \n</code></pre>\n<p>%>\n</pre></p>\n</div>\n<p>^_^</p>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}}}},"staticQueryHashes":[],"slicesMap":{}}