{"componentChunkName":"component---src-templates-post-js","path":"/posts/EXCEL-VBA-开发框架之工作环境模块/","result":{"data":{"sitePage":{"id":"SitePage /posts/EXCEL-VBA-开发框架之工作环境模块/"}},"pageContext":{"url":"/posts/EXCEL-VBA-开发框架之工作环境模块/","relativePath":"posts/EXCEL-VBA-开发框架之工作环境模块.md","relativeDir":"posts","base":"EXCEL-VBA-开发框架之工作环境模块.md","name":"EXCEL-VBA-开发框架之工作环境模块","frontmatter":{"title":"EXCEL VBA 开发框架之工作环境模块","stackbit_url_path":"posts/EXCEL-VBA-开发框架之工作环境模块","date":"2009-12-09 14:12:30","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2009/12/09/EXCEL-VBA-开发框架之工作环境模块","template":"post"},"html":"<pre><code>    &#x3C;div style=\"text-indent: 2em;\">&#x3C;p>这个模块(MWorkspace.bas)主要用来配置EXCEL VBA独立应用程序的环境，摘抄自《Excel专业开发》，分享下，也备自己不时之需。&#x3C;/p>\n</code></pre>\n<p>其中有一些常量或者函数是定义在其他模块文件中的，使用时需要自己定义。如 gsREG_XL_ENV 就是定义在MGlobals.bas中。</p>\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">'\n' Description:  This module holds code to save and restore the Excel workspace.\n'\n' Authors:      Stephen Bullen, www.oaltd.co.uk\n'               Rob Bovey, www.appspro.com\n'\n' Chapter Change Overview\n' Ch#   Comment\n' --------------------------------------------------------------\n' 06    Initial version\n' 07    Kill the application event handler at shutdown\n' 08    Adding the commandbar builder meant a change in a procedure name\n'       Moved code to re-enable toolbars here from the old ResetMenus\n' 09    Added call to SetIcon in new MAPIWrappers module\n'\nOption Explicit\nOption Private Module\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Store the Excel workspace settings in the Registry\n'\n' Arguments:    None\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------\n' 02 Jun 04     Stephen Bullen  Ch06    Initial version\n'\nSub StoreExcelSettings()</p>\n<pre><code>Dim cbBar As CommandBar\nDim sBarNames As String\nDim objTemp As Object\nDim wkbTemp As Workbook\n\n'Some properties require a workbook open, so create one\nIf ActiveWorkbook Is Nothing Then Set wkbTemp = Workbooks.Add\n\n'Write a value to indicate that the settings have been stored.\nSaveSetting gsREG_APP, gsREG_XL_ENV, \"Stored\", \"Yes\"\n\n'Store the current Excel settings in the registry,\n'for safe crash-recovery\nWith Application\n\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"DisplayStatusBar\", CStr(.DisplayStatusBar)\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"DisplayFormulaBar\", CStr(.DisplayFormulaBar)\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"Calculation\", CStr(.Calculation)\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"IgnoreRemoteRequests\", CStr(.IgnoreRemoteRequests)\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"Iteration\", CStr(.Iteration)\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"MaxIterations\", CStr(.MaxIterations)\n\n    'Which commandbars are visible\n    For Each cbBar In .CommandBars\n        If cbBar.Visible Then sBarNames = sBarNames &#x26;amp; \",\" &#x26;amp; cbBar.Name\n    Next\n    SaveSetting gsREG_APP, gsREG_XL_ENV, \"VisibleCommandBars\", sBarNames\n\n    'Special items for Excel 2000 and up\n    If Val(.Version) &#x26;gt;= 9 Then\n        SaveSetting gsREG_APP, gsREG_XL_ENV, \"ShowWindowsInTaskbar\", CStr(.ShowWindowsInTaskbar)\n    End If\n\n    'Special items for Excel 2002 and up\n    If Val(.Version) &#x26;gt;= 10 Then\n        Set objTemp = .CommandBars\n        SaveSetting gsREG_APP, gsREG_XL_ENV, \"DisableAskAQuestion\", CStr(objTemp.DisableAskAQuestionDropdown)\n        SaveSetting gsREG_APP, gsREG_XL_ENV, \"AutoRecover\", CStr(.AutoRecover.Enabled)\n    End If\nEnd With\n\nIf Not wkbTemp Is Nothing Then wkbTemp.Close False\n</code></pre>\n<p>End Sub</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Restore the Excel workspace settings, reading them\n'           from the Registry\n'\n' Arguments:    None\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------\n' 02 Jun 04     Stephen Bullen  Ch06    Initial version\n' 02 Jun 04     Stephen Bullen  Ch07    Kill the event handler at shutdown\n' 03 Jun 04     Stephen Bullen  Ch08    Renamed RestoreMenus to ResetCommandBars and moved re-enabling toolbars to here\n'\nSub RestoreExcelSettings()</p>\n<pre><code>Dim vKey As Variant\nDim vBarName As Variant\nDim objTemp As Object\nDim cbCommandbar As CommandBar\n\n'Kill our event handler\nSet gclsEventHandler = Nothing\n\n'Restore the original Excel settings from the registry\nWith Application\n\n    'Ch08+\n    'Ensure all menus are enabled\n    EnableDisableMenus gsCONTEXT_ENABLE_ALL\n\n    'Enable all the toolbars\n    On Error Resume Next\n    For Each cbCommandbar In .CommandBars\n        cbCommandbar.Enabled = True\n    Next\n    On Error GoTo 0\n\n    'Restore the Excel menus\n    ResetCommandBars\n    'Ch08-\n\n    'Check that we have some settings to restore\n    If GetSetting(gsREG_APP, gsREG_XL_ENV, \"Stored\", \"No\") = \"Yes\" Then\n\n        .DisplayStatusBar = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"DisplayStatusBar\", CStr(.DisplayStatusBar)))\n        .DisplayFormulaBar = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"DisplayFormulaBar\", CStr(.DisplayFormulaBar)))\n        .IgnoreRemoteRequests = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"IgnoreRemoteRequests\", CStr(.IgnoreRemoteRequests)))\n        .Calculation = CLng(GetSetting(gsREG_APP, gsREG_XL_ENV, \"Calculation\", CStr(.Calculation)))\n        .Iteration = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"Iteration\", CStr(.Iteration)))\n        .MaxIterations = CLng(GetSetting(gsREG_APP, gsREG_XL_ENV, \"MaxIterations\", CStr(.MaxIterations)))\n\n        'Show the correct toolbars\n        On Error Resume Next\n        For Each vBarName In Split(GetSetting(gsREG_APP, gsREG_XL_ENV, \"VisibleCommandBars\"), \",\")\n            Application.CommandBars(vBarName).Visible = True\n        Next\n        On Error GoTo 0\n\n        'Specific stuff for Excel 2000 and up\n        If Val(.Version) &#x26;gt;= 9 Then\n            .ShowWindowsInTaskbar = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"ShowWindowsInTaskbar\", CStr(.ShowWindowsInTaskbar)))\n        End If\n\n        'Specific stuff for Excel 2002 and up\n        If Val(.Version) &#x26;gt;= 10 Then\n            Set objTemp = .CommandBars\n            objTemp.DisableAskAQuestionDropdown = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"DisableAskAQuestion\", CStr(objTemp.DisableAskAQuestionDropdown)))\n            .AutoRecover.Enabled = CBool(GetSetting(gsREG_APP, gsREG_XL_ENV, \"AutoRecover\", CStr(.AutoRecover.Enabled)))\n        End If\n    End If\n\n    'Reenable the shortcut keys we disabled\n    If IsArray(gvaKeysToDisable) Then\n        For Each vKey In gvaKeysToDisable\n            .OnKey vKey\n        Next\n    End If\nEnd With\n\n'Unprotect the backdrop workbook, if it still exists\nIf WorkbookAlive(gwbkBackDrop) Then\n    gwbkBackDrop.Unprotect\n    gwbkBackDrop.Saved = True\nEnd If\n</code></pre>\n<p>End Sub</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Configure the Excel workspace for our application\n'\n' Arguments:    None\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------\n' 02 Jun 04     Stephen Bullen  Ch06    Initial version\n' 03 Jun 04     Stephen Bullen  Ch08    Moved menu OnKey assignments to here\n'                                       Moved toolbar hiding to here\n' 03 Jun 04     Stephen Bullen  Ch09    Added call to SetIcon in new MAPIWrappers module</p>\n<p>Sub ConfigureExcelEnvironment()</p>\n<pre><code>Dim objTemp As Object\nDim vKey As Variant\nDim cbCommandbar As CommandBar\n\nWith Application\n    'Set the Application properties we want\n    .Caption = gsAPP_TITLE\n    .DisplayStatusBar = True\n    .DisplayFormulaBar = False\n    .Calculation = xlManual\n\n    .DisplayAlerts = False\n    .IgnoreRemoteRequests = True\n    .DisplayAlerts = True\n\n    .Iteration = True\n    .MaxIterations = 100\n\n    'Specific items for Excel 2000 and up\n    If Val(.Version) &#x26;gt;= 9 Then\n        .ShowWindowsInTaskbar = False\n    End If\n\n    'Specific items for Excel 2002 and up\n    If Val(.Version) &#x26;gt;= 10 Then\n        Set objTemp = .CommandBars\n        objTemp.DisableAskAQuestionDropdown = True\n        objTemp.DisableCustomize = True\n        .AutoRecover.Enabled = False\n    End If\n\n    'We'll have slighly different environment states, depending on whether we're debugging or not\n    If gbDEBUGMODE Then\n        ' Since we have blitzed the environment, we should set a hot key combination to restore it.\n        ' That key combination is Shift+Ctrl+R\n        .OnKey \"+^R\", \"RestoreExcelSettings\"\n    Else\n        'Make sure the VBE isn't visible\n        On Error Resume Next\n        .VBE.MainWindow.Visible = False\n        On Error GoTo 0\n\n        'Disable a whole host of shortcut keys\n        For Each vKey In gvaKeysToDisable\n            .OnKey vKey, \"\"\n        Next\n    End If\n\n    'Ch08+\n    'Hide all the toolbars\n    On Error Resume Next\n    For Each cbCommandbar In Application.CommandBars\n        cbCommandbar.Visible = False\n        cbCommandbar.Enabled = False\n    Next\n    On Error GoTo 0\n\n    'Set up keyboard equivalents for some key menu items\n</code></pre>\n<p>'        .OnKey \"^N\", \"MenuFileNew\"\n'        .OnKey \"^n\", \"MenuFileNew\"\n'        .OnKey \"^O\", \"MenuFileOpen\"\n'        .OnKey \"^o\", \"MenuFileOpen\"\nEnd With</p>\n<pre><code>'Ch09\nSetIcon ApphWnd, ThisWorkbook.Path &#x26;amp; \"\\\" &#x26;amp; gsICON_FILE\n</code></pre>\n<p>End Sub</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' Comments: Copies the backdrop workbook from the addin to a\n'           new workbook and configures it\n'\n' Arguments:    None\n'\n' Date          Developer       Chap    Action\n' --------------------------------------------------------------\n' 02 Jun 04     Stephen Bullen  Ch06    Initial version\n'\nSub PrepareBackDrop()</p>\n<pre><code>Dim wkbBook As Workbook\n\n'Do we already have a backdrop object?\nIf Not WorkbookAlive(gwbkBackDrop) Then\n\n    'See if there's already a backdrop workbook out there\n    Set gwbkBackDrop = Nothing\n    For Each wkbBook In Workbooks\n        If wkbBook.BuiltinDocumentProperties(\"Title\") = gsBACKDROP_TITLE Then\n            Set gwbkBackDrop = wkbBook\n            Exit For\n        End If\n    Next\n\n    If gwbkBackDrop Is Nothing Then\n        'Copy the backdrop sheet out of this workbook\n        'into a new one for display\n        wksBackdrop.Copy\n        Set gwbkBackDrop = ActiveWorkbook\n        gwbkBackDrop.BuiltinDocumentProperties(\"Title\") = gsBACKDROP_TITLE\n    End If\nEnd If\n\nWith gwbkBackDrop\n    .Activate\n\n    'Select the full region that encompasses the backdrop\n    'graphic, so we can use Zoom = True to size it to fit\n    .Worksheets(1).Range(\"rgnBackDrop\").Select\n\n    'Set the Window View options to hide everything\n    With .Windows(1)\n        .WindowState = xlMaximized\n        .Caption = \"\"\n        .DisplayHorizontalScrollBar = False\n        .DisplayVerticalScrollBar = False\n        .DisplayHeadings = False\n        .DisplayWorkbookTabs = False\n\n        'Zoom the selected area to fit the screen\n        .Zoom = True\n    End With\n\n    'Prevent selection or editing of any cells on the backdrop\n    With .Worksheets(1)\n        .Range(\"ptrCursor\").Select\n        .ScrollArea = .Range(\"ptrCursor\").Address\n        .EnableSelection = xlNoSelection\n        .Protect DrawingObjects:=True, UserInterfaceOnly:=True\n    End With\n\n    'Protect the backdrop workbook, to remove the\n    'control menu\n    .Protect Windows:=True\n    .Saved = True\nEnd With\n</code></pre>\n<p>End Sub\n</pre></p>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}