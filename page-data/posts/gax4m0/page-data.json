{"componentChunkName":"component---src-templates-post-js","path":"/posts/gax4m0","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/gax4m0","relativePath":"posts/gax4m0","frontmatter":{"title":"屎山并不可怕","stackbit_url_path":"posts/gax4m0","date":"2022-05-31T12:45:18","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p>标题写得实在太保守了，其实我想说的是，屎山堆得越高，味道闻着越香！</p>\n<p><a name=YG7q4></a></p>\n<h1>屎山的故事</h1>\n<p>屎山，已经是个烂大街的程序员梗了。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653926685162-31bc4b22-f4ec-4eb2-85f7-577d3068f4e4.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=0.8873&#x26;from=paste&#x26;height=346&#x26;id=u1c22a65d&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=346&#x26;originWidth=604&#x26;originalType=url%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=322447&#x26;status=done&#x26;style=none&#x26;taskId=u88d7248e-dfa7-449d-b9d1-75f4d12c266&#x26;title=&#x26;width=604\" alt=\"image.png\"></p>\n<p>我发现大家对老项目总是避之不及，总是喜欢重新从 0 开始（以自己的方式），我就觉得不好玩。难道不是越老的项目越好玩吗？总是从 0 开始，如何积累？如何沉淀？而且，往往自己写得会更烂。</p>\n<p>为了和这些人划清界限，所以我持一个完全相反的观点：屎山堆得越高，味道闻着越香。这样还不够，就算是一个才开始没多久的项目，如果很烂，也不要重写，而是改进它，把它堆得更高更高。比如，我曾经就接手一个才开始几个月的新项目，就是屎一样的工程，但是没有抛弃它重写，而是一步步把它改造成可以堆得更高的样子：</p>\n<p>新项目就像屎，的确有点臭。但是老项目就不一样了，屎山发酵，飘出香味来了。今天就举一个老项目的具体例子，来进一步加强“屎山不仅不可怕，简直很可爱”的观点。</p>\n<p>即先复活它（跑起来），然后再优雅并且快速地添加两个新特性，来证明它是香的。因为这些新特性，如果要从头开始开发的话，就会特别耗时费力，还实现不了那么丰富的功能。\n<a name=a0eDx></a></p>\n<h1>一点点我的故事</h1>\n<p>我是一个野生程序员，大学毕业后找了一份销售支持的工作，一干就是 4 年。后来终于鼓起勇气，裸辞了！然后想去找一份程序员的工作，因为我过去、现在、将来都认为程序员是世界上最了不起的群体，他们富有创造性，改变着世界。</p>\n<p>裸辞前，我在办公室，利用职务之便，已经熟练掌握了 Excel 公式和 VBA 编程，但是没有想到辞职后，竟然没有人要我！接下来就是半年的失业期，进入了人生至暗时刻。后来终于面试成功，在一家软件外包公司做了测试人员。但是我内心仍然想做开发，于是就想办法转岗，虽然又自学了 ASP.NET，但经过了几年的时间仍然没有成功，主要总是被挑战没有经验，人家不敢要。</p>\n<p>于是我就开始做了一个网站，展示自己的实力。这个网站项目就是今天的主角，超级屎山。这个业余项目非常成功，因为帮助我成功找到了一份开发的工作，也完成了它的历史使命，找到新工作后，我就荒废它了（现在想来很后悔，因为如果能够持续迭代的话，应该就更又价值了；但是从现在开始重新拾起来也不晚）。</p>\n<p>这个网站是我在做测试时开始写的（吸取经验，再也不敢裸辞了！），当时是在上海的紫竹科技园里的一家公司，就给这个网站取了个名字叫“紫竹叽歪”，买了个域名 zizhujy.com，并租了台服务器，就这样上线了。当然，后来找到了新工作，域名和服务器都没续费就断掉了。代码托管在 BitBucket： <a href=\"https://bitbucket.org/JeffTian/zizhujy.com/src/master/\">https://bitbucket.org/JeffTian/zizhujy.com/src/master/</a>。\n<a name=E4sgd></a></p>\n<h1>屎山项目鉴赏</h1>\n<p>代码已开源，大家可以点击以上链接尽情鉴赏。\n<a name=uskkj></a></p>\n<h2>年代久远</h2>\n<p>那时候我还不会 Git，代码托管在微软的 TFS 上。从显示的历史时间线上看，项目是 2012 年创建的。感谢微软，居然还给我保留着原始记录！ <a href=\"https://jeff-tian.visualstudio.com/zizhujy.com/_versionControl/changesets\">https://jeff-tian.visualstudio.com/zizhujy.com/_versionControl/changesets</a></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653929875290-2a21c68b-3212-496e-b15a-f2d2da1f20f8.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=598&#x26;id=u57b301ff&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1795&#x26;originWidth=2150&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=467954&#x26;status=done&#x26;style=none&#x26;taskId=u3af4ac78-457d-46ed-9f12-1cd8be3bb35&#x26;title=&#x26;width=716.6666666666666\" alt=\"image.png\"></p>\n<p>后来学了 Git 并迁移到了 Bitbucket，再后来还同步了一份到 GitHub，不过后来了解到微软的 TFS 也支持 Git 了。</p>\n<p><a name=Hnjsm></a></p>\n<h2>代码结构</h2>\n<p>整体是一个 Visual Studio 解决方案，包含了多个 csproj 项目。那时候我也不懂什么前端后端，反正就是一锅端。基于 ASP.NET MVC，用到的主要语言是 C#、javascript、Ruby。整体结构如下图所示，AutoTools 主要是一些脚本，用来跑测试（居然有测试！）以及发布用的。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653930534365-61dd02eb-4b5a-44d2-9396-639cece54511.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=541&#x26;id=u235a84db&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1624&#x26;originWidth=726&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=120970&#x26;status=done&#x26;style=none&#x26;taskId=u97ed9600-9c72-4c56-b393-6ba0ddcef86&#x26;title=&#x26;width=242\" alt=\"image.png\"></p>\n<p>其他的可以忽略，因为是一些二进制文件（本不应该提交到源代码库）。Source 文件夹是真正的代码工程文件了，展开会很吓人：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653930662382-ace02788-6944-478a-ad66-a114771ce7e8.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0.0978&#x26;crop=1&#x26;crop=0.8928&#x26;from=paste&#x26;height=1884&#x26;id=ud1627443&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=5652&#x26;originWidth=3000&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=1221289&#x26;status=done&#x26;style=none&#x26;taskId=ua588c0fe-bb66-42dc-92ed-ba12aca5658&#x26;title=&#x26;width=1000\" alt=\"image.png\"></p>\n<p>其中，ZiZhuJY.Web.UI 是启动项目。\n<a name=pyBoZ></a></p>\n<h2>技术栈</h2>\n<p>如代码结构所示，整个项目基于 ASP.NET MVC，没有前后端分离的概念，但整体上没有太多后端功能，主要是个前端工程，但是！没有任何前端工程的样子，毕竟那时候，我还没听说过 nodejs。前端 css 完全手写，javascript 部分，仅用到 jQuery 这个框架（和部分基于 jQuery 的扩展），其他全是手写！</p>\n<p><a name=p4FEr></a></p>\n<h2>典型的代码</h2>\n<p>css 布局（200多行）：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653931223502-afa4cc50-073c-4390-a03b-2fc99882593c.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0.0466&#x26;crop=1&#x26;crop=0.1241&#x26;from=paste&#x26;height=4116&#x26;id=u16c0ec6a&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=12354&#x26;originWidth=2023&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=2073290&#x26;status=done&#x26;style=none&#x26;taskId=uebdf4492-986f-4f8f-a6b8-bac96f31ab3&#x26;title=&#x26;width=674\" alt=\"image.png\"></p>\n<p>某个典型的 js 文件（纯手工打造，1500 多行）：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653931491027-e962a336-46ff-4a9e-b379-e4ed7ea0600c.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=569&#x26;id=u1b64cac3&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1707&#x26;originWidth=2348&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=335302&#x26;status=done&#x26;style=none&#x26;taskId=ua8f9f1cd-3cac-4a1f-9f80-245774dee4a&#x26;title=&#x26;width=782.6666666666666\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653931622681-d9c2700c-7372-4298-9e54-a8c3043ae5b0.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=569&#x26;id=u05f35fa3&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1707&#x26;originWidth=2422&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=383150&#x26;status=done&#x26;style=none&#x26;taskId=ub53453e0-ab76-4dda-9a21-384e2578684&#x26;title=&#x26;width=807.3333333333334\" alt=\"image.png\"></p>\n<p>好了，不多表。后面还有很多内容要写。</p>\n<p><a name=pcbvY></a></p>\n<h1>利用 Free Arch 思想满血复活屎山项目</h1>\n<p>Free Arch 是我从 2021 年开始冒出的点子，旨在利用免费资源，落地自由的项目架构。前面介绍了这个屎山项目站点后来不能访问了，原因就在于那时还没有免费架构这个思想。</p>\n<p>这次复活这个项目，非常简单，利用 Azure 就行了，直接部署在了  <a href=\"https://jiy.azurewebsites.net/\">https://jiy.azurewebsites.net</a>。</p>\n<p>在知道 Azure 这个好东西前，为了免费复活一个很老的 BlogEngine.NET 博客系统，不得不使用了静态化大法，效果虽好，但是破费周折，详情参见：</p>\n<p>正好最近有微软的同学，邀请我写一个对 Azure 的点评，我毫不犹豫写下了如下的话，不是因为看同学的面子，而是肺腑真言：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/221736/1653932433833-f3d92a39-0ed9-497f-92b2-57675e08153e.jpeg#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=540&#x26;id=u473811d9&#x26;margin=%5Bobject%20Object%5D&#x26;name=9de9d73e3144530ef7fafe3a2d8a115.jpg&#x26;originHeight=1620&#x26;originWidth=806&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=123992&#x26;status=done&#x26;style=none&#x26;taskId=uceafef7d-1f43-4bac-8aee-bef70fd564b&#x26;title=&#x26;width=268.6666666666667\" alt=\"9de9d73e3144530ef7fafe3a2d8a115.jpg\"></p>\n<blockquote>\n<p>我是一名全栈应用开发人员，各大云厂商的产品都使用过，几乎每天都在和云打交道。其中 Azure 最让我兴奋，因为它和我的日常工作流可以做到最完美的无缝对接，从而可以让我最大程度地专注在应用开发上。比如当我使用 Visual Studio 开发应用（尽管 Azure 对开发工具没有要求，但是它对我喜爱的 Visual Studio 和 vs code 都特别地友好），只需要点击一下发布按钮，就能将应用部署到 Azure Web 应用并且可以立即从全球访问应用。又比如它原生支持和 GitHub Actions 的对接，无论使用什么开发语言，我只需要将应用代码推送到 GitHub 仓库，不用写任何配置文件即可实现 CI/CD。对于日常开发使用，访问速度和移动端的功能也是非常重要的，而这两点，Azure 的体验都是最好的。</p>\n</blockquote>\n<p><a name=VoJjn></a></p>\n<h1>再来鉴赏一下</h1>\n<p>复活后，就可以在线鉴赏一下这个项目的功能了，主要有：</p>\n<ul>\n<li>函数画图</li>\n<li>统计计算器</li>\n<li>极客计算器</li>\n<li>……</li>\n</ul>\n<p><a name=FDSsv></a></p>\n<h1>利用微前端思想添加统一的页脚</h1>\n<p>前不久看了一下微前端，并做了一个简单的应用，将我做的网站，统一添加一个页脚，详情参考：</p>\n<p>今天既然又复活了一个老项目，那再来看看如何将使用 React 开发的统一页脚添加到这个老站点上去吧。\n<a name=fv9XE></a></p>\n<h2>最终效果</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653933191923-b9ef8f57-0813-40f7-bb82-c847d856bd40.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=1748&#x26;id=uaf0ad720&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=5244&#x26;originWidth=3000&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=3375848&#x26;status=done&#x26;style=none&#x26;taskId=uad206538-5ed9-4f30-bfcb-5063dec93a5&#x26;title=&#x26;width=1000\" alt=\"image.png\"></p>\n<p><a name=kJNgp></a></p>\n<h2>实现步骤</h2>\n<p>很简单。</p>\n<p>首先，找到布局文件： <a href=\"https://bitbucket.org/JeffTian/zizhujy.com/src/main/Source/ZiZhuJY.Web.UI/Views/Shared/_SimpleLayout.cshtml\">https://bitbucket.org/JeffTian/zizhujy.com/src/main/Source/ZiZhuJY.Web.UI/Views/Shared/_SimpleLayout.cshtml</a>，然后，在其 header 部分引入 footer 的样式，最后在 body 的结尾前，分别引入 react、react-dom 以及 footer 组件，并增加一行渲染代码即可：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653933595311-8ddc5863-effb-4caa-bfbd-1d6df16fdd1c.png#clientId=u5e9ea463-702c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=450&#x26;id=uc18b47b6&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1349&#x26;originWidth=2776&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=299965&#x26;status=done&#x26;style=none&#x26;taskId=u6948c427-a0be-4b67-9ad0-c4a0faa4329&#x26;title=&#x26;width=925.3333333333334\" alt=\"image.png\"></p>\n<p><a name=Obp3e></a></p>\n<h1>给极客计算器增加求导功能</h1>\n<p>这个功能相比增加一个页脚，显然是复杂成千上万倍，但是这也更能说明老项目的价值，如果没有这个老项目的依托，很难短时间开发出一个可用的产品。比如，界面绘制、输入的词法分析、语法分析等等，这次都不用做了，并且嵌入到老项目里，可以拥有已有的功能（比如直接拥有将小数转化为分数的功能），岂不美哉！</p>\n<p><a name=BWAyi></a></p>\n<h2>实现一个新的 math 包来求导数</h2>\n<p><strong>屎山一点儿也不可怕，只要学会隔离代码</strong>。在屎山项目鉴赏一节，已经可以看出，如果要直接在原来的项目中增加新功能，不是不可以，但由于技术栈太老土，享受不到新的工具链带来的便利。我们这次要给极客计算器增加的求导（微分）功能，得想办法独立出来，不要让老项目和它交织在一起，做到松耦合。\n<a name=HoNxX></a></p>\n<h3>TDD 一个 @jeff-tian/math 包</h3>\n<p>新建一个 @jeff-tian/math 包，独立发布，不仅可以和老项目解耦，还更方便复用，给到别的项目使用。另外，脱离了老项目的束缚，可以尽情地使用当前先进的工具链，让写代码的体验更好。比如， 我这次就使用了 lerna、yarn 等等在做老项目时没听过的，甚至还不存在的先进生产工具。另外，在开发上也尽量使用了 TDD （测试驱动开发）的方法，代码见： <a href=\"https://github.com/Jeff-Tian/jeff-tian/blob/development/packages/math/README.md\">https://github.com/Jeff-Tian/jeff-tian/blob/development/packages/math/README.md</a>。</p>\n<p>从提交历史可以看出来，功能是逐步实现的，直到完成求导功能。而每一个功能的实现，都遵循着先写测试，再写实现的方式，做得比较扎实了。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653997199158-7a9fe48b-77a5-48cd-8b7f-184ea22906a5.png#clientId=u335c6f76-5e1c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=777&#x26;id=ua574a672&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=874&#x26;originWidth=1065&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=92552&#x26;status=done&#x26;style=none&#x26;taskId=u26920e9d-034b-4f7c-8660-f16bc6d60b7&#x26;title=&#x26;width=946.6666666666666\" alt=\"image.png\"></p>\n<p>这里顺便多提一点测试驱动开发。Bob Martin 做过一个精彩的比喻，即把 TDD 类比于复式计账法，这真的是一个恰当的比喻。有人问，我写代码一定要使用 TDD 吗？我觉得不一定，比如自己写个玩具程序，可以不 TDD，就像你个人记个账玩玩儿，是可以只记流水账的。但是就像公司的财务记账，则必须使用复式计账法一样，严肃的企业级软件工程，就必须使用 TDD。</p>\n<p>又经常有人疑惑，TDD 能帮我实现 XXX 功能吗？能教会我写本来不会的代码吗？这个问题我觉得 Bob Martin 的精彩比喻仍然可以回答：复式记账法能保证公司账本不出错，但是你要产生这些账务，要赚钱等等，得靠销售呀！复式记账法可以记录交易，但不能直接帮助公司产生交易。</p>\n<p>很快实现了一个计算导数（微分）的雏形包，发布到了 npm： <a href=\"https://www.npmjs.com/package/@jeff-tian/math\">https://www.npmjs.com/package/@jeff-tian/math</a>，使用方式如下：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653997926263-757a99a1-6f0a-4576-a456-56fc337189f4.png#clientId=u335c6f76-5e1c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=646&#x26;id=ud71f9c00&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=727&#x26;originWidth=941&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=57969&#x26;status=done&#x26;style=none&#x26;taskId=u2fbc4926-85a4-437b-9507-2bf3834182d&#x26;title=&#x26;width=836.4444444444445\" alt=\"image.png\"></p>\n<p>目前实现了如下一些基本的求导规则，还不能给三角函数等等求导，但是打好了一个基础，后面还有机会慢慢迭代升级。<br /><img src=\"https://cdn.nlark.com/yuque/__latex/bcc6571e580851192dc85b9b8d0d8825.svg#card=math&#x26;code=%5Cfrac%7Bdc%7D%7Bdx%7D%20%3D0%20%E5%BD%93c%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%B8%E9%87%8F%EF%BC%8C%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%E4%B8%8Ex%E4%B8%8D%E5%90%8C%E7%9A%84%E5%8F%98%E9%87%8F&#x26;id=v83Yh\" alt=\"\"><br /><img src=\"https://cdn.nlark.com/yuque/__latex/766eacc8d25698c973aef3710561cf9c.svg#card=math&#x26;code=%5Cfrac%7Bdx%7D%7Bdx%7D%3D1&#x26;id=Fm14i\" alt=\"\"><br /><img src=\"https://cdn.nlark.com/yuque/__latex/0bb9e3fa2042f96e35fbaeb95ccb8b7f.svg#card=math&#x26;code=%5Cfrac%7Bd%28u%2Bv%29%7D%7Bdx%7D%3D%5Cfrac%7Bdu%7D%7Bdx%7D%2B%5Cfrac%7Bdv%7D%7Bdx%7D&#x26;id=qyNbt\" alt=\"\"><br /><img src=\"https://cdn.nlark.com/yuque/__latex/8d4ea477cb29b94541ac5f557a957f6e.svg#card=math&#x26;code=%5Cfrac%7Bd%28uv%29%7D%7Bdx%7D%3Du%28%5Cfrac%7Bdv%7D%7Bdx%7D%29%2Bv%28%5Cfrac%7Bdu%7D%7Bdx%7D%29%0A&#x26;id=AMalI\" alt=\"\"><br /><img src=\"https://cdn.nlark.com/yuque/__latex/2d81caaba4f759f487a55ee229956d6f.svg#card=math&#x26;code=%5Cfrac%7Bd%28u%5En%29%7D%7Bdx%7D%3Dnu%5E%7Bn-1%7D%28%5Cfrac%7Bdu%7D%7Bdx%7D%29%0A&#x26;id=xVcFn\" alt=\"\"></p>\n<p><a name=GWC7Y></a></p>\n<h2>在老的屎山项目中引用新的 npm 包</h2>\n<p>仍然采用 TDD 的方法，比较稳妥一点。但是过程就不详述了，有兴趣的读者可以参考 BitBucket 上的提交记录。总之，屎山一点儿也不可怕，只要在做任何改动前，添加足够的测试来保证没有破坏已有功能。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653999102339-f2c04d98-65c7-476a-91e1-ed67123ad1c4.png#clientId=u335c6f76-5e1c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=815&#x26;id=u5d00cca4&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=917&#x26;originWidth=1787&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=273727&#x26;status=done&#x26;style=none&#x26;taskId=u6e11ab05-a7d5-4da7-af97-cef639f8562&#x26;title=&#x26;width=1588.4444444444443\" alt=\"image.png\"></p>\n<p>测试通过后，就可以真正在页面中启用它了，由于老项目没有使用 npm，这里采用了直接通过  <script /> 标签引用 的方法，在极客计算器页面，增加一行：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653998749946-7cdf1926-f3c6-4136-8d9e-0ca55fee4a6a.png#clientId=u335c6f76-5e1c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=486&#x26;id=uea6b92c4&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=547&#x26;originWidth=1920&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=231362&#x26;status=done&#x26;style=none&#x26;taskId=uca0e18a5-9299-4d33-b907-b46751e8143&#x26;title=&#x26;width=1706.6666666666667\" alt=\"image.png\"></p>\n<p>这样就行了，可以点击链接看一下效果： <a href=\"https://jiy.azurewebsites.net/zh-CN/GeekCalculator?fns=base64%25252FWyJcXGZyYWN7ZFxcbGVmdCh4XjJcXHJpZ2h0KX17ZHh9IiwiXFxmcmFje2RcXGxlZnQoMnhcXHJpZ2h0KX17ZHh9IiwiXFxmcmFje2RcXGxlZnQoeF4zXFxyaWdodCl9e2R4fSIsIlxcZnJhY3tkXFxsZWZ0KHgreVxccmlnaHQpfXtkeH0iLCJcXGZyYWN7ZFxcbGVmdCgzeF4yXFxyaWdodCl9e2R4fSIsIlxcZnJhY3tkXFxsZWZ0KHgrM1xcbGVmdCh4K1xcbGVmdCh5KzJcXHJpZ2h0KVxccmlnaHQpXFxyaWdodCl9e2R4fSJd\">https://jiy.azurewebsites.net/zh-CN/GeekCalculator?fns=base64%25252FWyJcXGZyYWN7ZFxcbGVmdCh4XjJcXHJpZ2h0KX17ZHh9IiwiXFxmcmFje2RcXGxlZnQoMnhcXHJpZ2h0KX17ZHh9IiwiXFxmcmFje2RcXGxlZnQoeF4zXFxyaWdodCl9e2R4fSIsIlxcZnJhY3tkXFxsZWZ0KHgreVxccmlnaHQpfXtkeH0iLCJcXGZyYWN7ZFxcbGVmdCgzeF4yXFxyaWdodCl9e2R4fSIsIlxcZnJhY3tkXFxsZWZ0KHgrM1xcbGVmdCh4K1xcbGVmdCh5KzJcXHJpZ2h0KVxccmlnaHQpXFxyaWdodCl9e2R4fSJd</a></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1653999445169-cb49a9b2-41a3-4405-b10a-71759f17ec66.png#clientId=u335c6f76-5e1c-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=625&#x26;id=u88bcf6d3&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=703&#x26;originWidth=1229&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=92815&#x26;status=done&#x26;style=none&#x26;taskId=ub0e29898-e006-4618-ac73-767e87e8851&#x26;title=&#x26;width=1092.4444444444443\" alt=\"image.png\"></p>\n<p>在 TDD 的过程中，已经改造了 GeekCalculator.js 文件，并且由于之前的设计，居然有一种朴素的依赖注入机制，所以使得要启用新的求导功能，只需要增加一行 js 文件引用。而如果没有这个引用，应用也不会出错，优雅降级为之前的版本。</p>\n<p><a name=ytXHC></a></p>\n<h1>总结</h1>\n<p>屎山一点儿也不可怕，只要会隔离代码，通过少改动甚至不改动老的代码，以及增加新的代码包的方式，来改变老的系统的行为和外观，实现功能的跃迁即可。这其实就是“开放-关闭”的编程原则嘛，每次写代码，都要追求对修改代码关闭，对新增代码开放（易扩展）。</p>\n<p>同时，不管是改动老代码，还是从头开始写新的代码， TDD 都是一个很好的方式，可以保证实现新的功能的同时，没有破坏老功能。</p>\n<p>本篇长文以一个十年前的老项目为例（因为我工作这么久，还没有在公司的项目中见过这么老的项目，都没有这个例子有代表性），先是复活它，然后通过引入一个统一页脚改变了页面的外观，接着通过引入新写的 @jeff-tian/math  包，给极客计算器增加了新的功能，即计算导数（微分）。（这不仅是复活，简直是重获新生了！）</p>\n<p>其实越老的项目，味道应该是越香的，毕竟，软件工程师是一种工匠，而写代码其实就是酿酒。酒是越陈越香的，代码也是需要积累和沉淀的，所以实名反对把代码比做屎山这样的调侃。</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}