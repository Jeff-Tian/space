{"componentChunkName":"component---src-templates-post-js","path":"/posts/Bundle-javascripts-safely-in-ASPNET-MVC/","result":{"data":{"sitePage":{"id":"SitePage /posts/Bundle-javascripts-safely-in-ASPNET-MVC/"}},"pageContext":{"url":"/posts/Bundle-javascripts-safely-in-ASPNET-MVC/","relativePath":"posts/Bundle-javascripts-safely-in-ASPNET-MVC.md","relativeDir":"posts","base":"Bundle-javascripts-safely-in-ASPNET-MVC.md","name":"Bundle-javascripts-safely-in-ASPNET-MVC","frontmatter":{"title":"Bundle javascripts safely in ASP.NET MVC","stackbit_url_path":"posts/Bundle-javascripts-safely-in-ASPNET-MVC","date":"2014-04-01 04:01:42.796428","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["ASP.NET","MVC","bundle","compress","javascript"],"canonical_url":"https://be-net.azurewebsites.net/post/2014/04/01/Bundle-javascripts-safely-in-ASPNET-MVC","template":"post"},"html":"<h2><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_623.png\" target=\"_blank\"><img title=\"Bundle javascripts safely in ASP.NET MVC\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: left; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Bundle javascripts safely in ASP.NET MVC\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_thumb_342.png\" width=\"176\" align=\"left\" height=\"190\" /></a></h2>  <h2><font color=\"#9b00d3\">Problem:</font></h2>  <p>The other day I spent a lot of time to figure out that why my web application didn’t work correctly is because of the ASP.NET MVC default JavaScript bundle renamed the function name of <strong>Canvas</strong> to <strong>e</strong>. So I need to find a way to make the javascripts get compressed and bundled safely.</p>  <p>&#160;</p>  <h2><font color=\"#9b00d3\">Solution for ASP.NET MVC 4:</font></h2>  <pre class=\"brush: csharp\">public class BundleConfig\r\n    {\r\n        public static void RegisterBundles(BundleCollection bundles)\r\n        {\r\n#if DEBUG\r\n            BundleTable.EnableOptimizations = false;\r\n#else\r\n            BundleTable.EnableOptimizations = true;\r\n#endif\n<pre><code>        bundles.Add(new ScriptBundle(&#x26;quot;~/Scripts/Common/js&#x26;quot;)\r\n            .Include(&#x26;quot;~/Scripts/jquery-1.8.3.js&#x26;quot;)\r\n            .Include(&#x26;quot;~/Scripts/zizhujy.com.js&#x26;quot;)\r\n            .Include(&#x26;quot;~/Scripts/Globalize.js&#x26;quot;)\r\n            .Include(&#x26;quot;~/Scripts/common.js&#x26;quot;)\r\n            .Include(&#x26;quot;~/Scripts/requireLite/requireLite.js&#x26;quot;));\n</code></pre>\n<p>#if DEBUG\r\nforeach (var bundle in BundleTable.Bundles)\r\n{\r\nbundle.Transforms.Clear();\r\n}\r\n#else\r\nforeach(var bundle in BundleTable.Bundles) {\r\nif (bundle is ScriptBundle)\r\n{\r\nbundle.Transforms.Clear();\r\nbundle.Transforms.Add(new SafeJsBundleTransform());\r\n}\r\n}\r\n#endif\r\n}\r\n}</p>\n<pre><code>public class SafeJsBundleTransform : IBundleTransform\r\n{\r\n    public void Process(BundleContext context, BundleResponse response)\r\n    {\r\n        if (context == null)\r\n        {\r\n            throw new ArgumentNullException(&#x26;quot;context&#x26;quot;);\r\n        }\r\n\r\n        if (response == null)\r\n        {\r\n            throw new ArgumentNullException(&#x26;quot;response&#x26;quot;);\r\n        }\r\n\r\n        if (!context.EnableInstrumentation)\r\n        {\r\n            var codeSetting = new CodeSettings\r\n            {\r\n                // Important to make it all safe, otherwise the function grapher would \r\n                // run to problems which extensively uses window.eval(&#x26;quot;some expression&#x26;quot;).\r\n                EvalTreatment = EvalTreatment.MakeAllSafe,\r\n                PreserveImportantComments = false\r\n            };\r\n\r\n            var min = new Minifier();\r\n            var content = min.MinifyJavaScript(response.Content, codeSetting);\r\n\r\n            if (min.ErrorList.Count &#x26;gt; 0)\r\n            {\r\n                GenerateErrorResponse(response, min.ErrorList);\r\n            }\r\n            else\r\n            {\r\n                response.Content = content;\r\n            }\r\n        }\r\n\r\n        response.ContentType = &#x26;quot;text/javascript&#x26;quot;;\r\n    }\r\n\r\n    internal static void GenerateErrorResponse(BundleResponse bundle, IEnumerable&#x26;lt;object&#x26;gt; errors)\r\n    {\r\n        var content = new StringBuilder();\r\n        content.Append(&#x26;quot;/* &#x26;quot;);\r\n        content.AppendLine(&#x26;quot;MinifyError: &#x26;quot;);\r\n        foreach (object current in errors)\r\n        {\r\n            content.AppendLine(current.ToString());\r\n        }\r\n        content.AppendLine(&#x26;quot; */&#x26;quot;);\r\n        content.Append(bundle.Content);\r\n        bundle.Content = content.ToString();\r\n    }\r\n}\r\n\r\npublic class MvcApplication : HttpApplication\r\n{\r\n// Inside your global.asax.cs\r\n    protected void Application_Start()\r\n    {\r\n        AreaRegistration.RegisterAllAreas();\r\n\r\n        RegisterGlobalFilters(GlobalFilters.Filters);\r\n        RegisterRoutes(RouteTable.Routes);\r\n\r\n\t// MVC 4 style:\r\n        BundleConfig.RegisterBundles(BundleTable.Bundles);\r\n    }\r\n}&#x3C;/pre>\n</code></pre>\n<h2><font color=\"#9b00d3\">Solution for ASP.NET MVC 3:</font></h2>\n<pre class=\"brush: csharp\">    public class SafeJsBundleTransform : IBundleTransform\r\n    {\r\n        public void Process(BundleContext context, BundleResponse response)\r\n        {\r\n            if (context == null)\r\n            {\r\n                throw new ArgumentNullException(&quot;context&quot;);\r\n            }\r\n\r\n            if (response == null)\r\n            {\r\n                throw new ArgumentNullException(&quot;response&quot;);\r\n            }\r\n\r\n            if (!context.EnableInstrumentation)\r\n            {\r\n                var codeSetting = new CodeSettings\r\n                {\r\n                    // Important to make it all safe, otherwise the function grapher would \r\n                    // run to problems which extensively uses window.eval(&quot;some expression&quot;).\r\n                    EvalTreatment = EvalTreatment.MakeAllSafe,\r\n                    PreserveImportantComments = false\r\n                };\r\n\r\n                var min = new Minifier();\r\n                var content = min.MinifyJavaScript(response.Content, codeSetting);\r\n\r\n                if (min.ErrorList.Count &gt; 0)\r\n                {\r\n                    GenerateErrorResponse(response, min.ErrorList);\r\n                }\r\n                else\r\n                {\r\n                    response.Content = content;\r\n                }\r\n            }\r\n\r\n            response.ContentType = &quot;text/javascript&quot;;\r\n        }\r\n\r\n        internal static void GenerateErrorResponse(BundleResponse bundle, IEnumerable&lt;object&gt; errors)\r\n        {\r\n            var content = new StringBuilder();\r\n            content.Append(&quot;/* &quot;);\r\n            content.AppendLine(&quot;MinifyError: &quot;);\r\n            foreach (object current in errors)\r\n            {\r\n                content.AppendLine(current.ToString());\r\n            }\r\n            content.AppendLine(&quot; */&quot;);\r\n            content.Append(bundle.Content);\r\n            bundle.Content = content.ToString();\r\n        }\r\n    }\r\n\r\n    public class MvcApplication : HttpApplication\r\n    {\r\n\t// Inside your global.asax.cs\r\n        protected void Application_Start()\r\n        {\r\n            AreaRegistration.RegisterAllAreas();\r\n\r\n            RegisterGlobalFilters(GlobalFilters.Filters);\r\n            RegisterRoutes(RouteTable.Routes);\r\n\r\n\t\t// MVC 3 style:\r\n            BundleTable.Bundles.EnableDefaultBundles();\r\n        }\r\n\r\n\tprotected void Application_BeginRequest(object source, EventArgs e)\r\n         {\r\n            HttpApplication app = (HttpApplication)source;\r\n            HttpContext context = app.Context;\r\n\r\n            // Attempt to perform first request initialization\r\n            FirstRequestInitialization.Initialize(context);\r\n        }\r\n\r\n        private class FirstRequestInitialization\r\n        {\r\n            private static bool _initializedAlready = false;\r\n            private readonly static object _SyncRoot = new Object();\r\n\r\n            public static void Initialize(HttpContext context)\r\n            {\r\n                if (_initializedAlready) { return; }\r\n\r\n                lock (_SyncRoot)\r\n                {\r\n                    if (_initializedAlready) { return; }\r\n\r\n                    Init_BundleTable();\r\n\r\n                    _initializedAlready = true;\r\n                }\r\n            }\r\n\r\n            static void Init_BundleTable()\r\n            {                \r\n                BundleTable.Bundles.EnableDefaultBundles();\r\n                BundleTable.Bundles.Clear();\r\n\r\n                IBundleTransform jsTransform = new SafeJsBundleTransform();\r\n\r\n                // scripts added to header not NOT deferred\r\n                var commonJs = new Bundle(&quot;~/Scripts/Common/js&quot;, jsTransform);\r\n                commonJs.AddFile(&quot;~/Scripts/jquery-1.8.3.js&quot;, true);\r\n                commonJs.AddFile(&quot;~/Scripts/zizhujy.com.js&quot;, true);\r\n                commonJs.AddFile(&quot;~/Scripts/Globalize.js&quot;, true);\r\n                commonJs.AddFile(&quot;~/Scripts/common.js&quot;, true);\r\n                commonJs.AddFile(&quot;~/Scripts/requireLite/requireLite.js&quot;, true);\r\n                BundleTable.Bundles.Add(commonJs);\r\n                BundleTable.Bundles.Add(stringCompressionJs);\r\n            }\r\n\t}\r\n    }</pre>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}