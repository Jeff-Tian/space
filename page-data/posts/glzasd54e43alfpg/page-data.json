{"componentChunkName":"component---src-templates-post-js","path":"/posts/glzasd54e43alfpg/","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/glzasd54e43alfpg","relativePath":"posts/glzasd54e43alfpg","frontmatter":{"title":"如何衡量一个软件工程的质量？","stackbit_url_path":"posts/glzasd54e43alfpg","date":"2023-10-11T10:38:58","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p>要提高软件工程的质量，需要先找到一些可以衡量的维度。在改进前，先按这些维度打分，然后每隔一段时间再来打分，看看分数的变化情况。<br />打分可以是主观的，比如通过发送问卷调查的形式，让工程师按这些维度分别打分，再做一个汇总，得到最终的分数。<br />以下是一个可供参考的打分表，一共两大类，每个类别下有若干问题。\n<a name=B08pV></a></p>\n<h1>一、代码质量、持续集成/持续部署、本地开发和测试</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>非常不认同</th>\n<th>不认同</th>\n<th>中立</th>\n<th>认同</th>\n<th>非常认同</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>代码容易理解、易于查找，有着高质量</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>有高效的自动化测试</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>有很好的自动化测试覆盖率</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>本地开发环境易于从 0 开始设置起来</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>技术债务可控，并且在持续偿还</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>有快速的 CI/CD 流水线</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>部署上线是自动化的，一周好几次</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>整个系统（包含所有组件）都是大家知道并且理解的</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>系统组件之间的交互是合理的，并且是被清晰定义过的</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>基础设施是独立于应用代码，通过 IaC 来部署到各个环境的</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>团队成员理解基础设施和其中的资源连接情况</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>基础设施代码有测试，并且在每次部署前都会执行这些测试</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>文档充分、以结构化的方式有序组织在一起，并且是最新的</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><a name=RjTMT></a></p>\n<h1>二、认知负担</h1>\n<p>非常低的认知负担意味着当你在做任务时，你的大脑可以非常放松。你知道可以在哪儿找到你需要的东西，并且所有东西都会在你拿到一个新任务的同时立即清晰。<br />非常高的认知负担意味着当你在做任务时，你的大脑 100% 满负荷运行。你希望有更多的大脑来帮助你理清问题，以及找到解决问题的方式。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>非常低</th>\n<th>低</th>\n<th>一般/中等</th>\n<th>高</th>\n<th>非常高</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内在的——如去哪里可以找到相关功能特性的代码、在哪里添加新代码等等</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>外部的——我怎么配置和部署一个服务呢？</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>综合/特殊/关键的——如服务之间该怎样交互？从产品侧过来的业务需求等</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>认知负担会影响团队开发新功能、为增长的用户数量而将应用扩容的能力。在软件工程中，认知负担是指在阅读软件产物（代码、如何运行服务等）时在心智努力上的花费。<br />每天影响开发人员的认知负荷有三种不同类型（摘自《高效能团队模式》一书）：</p>\n<ol>\n<li>内在认知负荷 - 与任务本身的问题领域相关（例如，如何在这个类中创建新方法？）</li>\n<li>外部认知负荷 - 与执行任务的环境相关（例如，如何部署这个组件？如何配置这项服务？）</li>\n<li>特殊/综合/关键认知负荷 - 与任务的特定学习或高性能关注相关（例如，这项服务应该如何与ABC服务互动？业务需求）</li>\n</ol>\n<p>理想情况下，内在和外部认知负担都应该是低的，而特殊认知负荷，则应该在中等。</p>\n<blockquote>\n<p>一般来说，为了有效地交付和运维现代软件系统，组织应尽量减少内在的认知负荷，消除外部的认知负荷，从而为关键认知负荷留出更多空间——而这正是“增值思维”的体现。\n- 《高效能团队模式》</p>\n</blockquote>\n<p><a name=kxskM></a></p>\n<h1>行动起来</h1>\n<p>不妨给自己的工程按照以上维度打个分吧，看看现状如何？并且，尝试列出改进项，并每次改进一点点，定期回顾一下吧！</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}}}},"staticQueryHashes":[],"slicesMap":{}}