{"componentChunkName":"component---src-templates-post-js","path":"/posts/An-extension-for-C-built-in-Random-class/","result":{"data":{"sitePage":{"id":"SitePage /posts/An-extension-for-C-built-in-Random-class/"}},"pageContext":{"url":"/posts/An-extension-for-C-built-in-Random-class/","relativePath":"posts/An-extension-for-C-built-in-Random-class.md","relativeDir":"posts","base":"An-extension-for-C-built-in-Random-class.md","name":"An-extension-for-C-built-in-Random-class","frontmatter":{"title":"An extension for C# built-in Random class","stackbit_url_path":"posts/An-extension-for-C-built-in-Random-class","date":"2012-07-29 20:24:21.3533667","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["Extension","Random"],"canonical_url":"https://be-net.azurewebsites.net/post/2012/07/29/An-extension-for-C-built-in-Random-class","template":"post"},"html":"<p>For testing purpose, I need to generate some random string (contains only letters without any other special characters) with customized length. So I extends the C# built-in Random class like this:</p>  <pre class=\"brush: csharp\">#region Random's Extension\r\npublic static class RandomExtension\r\n{\r\n    /// <summary>\r\n    /// Returns a random character between the start and end characters specified\r\n    /// </summary>\r\n    /// <param name=\"rnd\" /></param>\r\n    /// <param name=\"start\" />The start of the range that the next random character will be generated from</param>\r\n    /// <param name=\"end\" />The end of the range that the next random character will be generated from</param>\r\n    /// <returns>A character whose ASCII code greater than or equal to the start's and less than or equal to the end's</returns>\r\n    public static char NextChar(this Random rnd, char start = 'a', char end = 'z')\r\n    {\r\n        int startCode = (int)start;\r\n        int endCode = (int)end + 1;\r\n        if (startCode &lt;= endCode)\r\n        {\r\n            int code = rnd.Next(startCode, endCode);\r\n            return (char)code;\r\n        }\r\n        else\r\n        {\r\n            throw new ArgumentException(&quot;The 'start' character can NOT be greater than the 'end' charcater&quot;, &quot;start&quot;);\r\n        }\r\n    }\n<pre><code>/// &#x3C;summary>\r\n/// Returns a random character among a set of specified characters\r\n/// &#x3C;/summary>\r\n/// &#x3C;param name=\"rnd\" />&#x3C;/param>\r\n/// &#x3C;param name=\"candidates\" />A set of the characters that the new random character will be generated from&#x3C;/param>\r\n/// &#x3C;returns>A character from the specified character set&#x3C;/returns>\r\npublic static char NextChar(this Random rnd, char[] candidates)\r\n{\r\n    if (candidates.Length &#x26;gt; 0)\r\n        return candidates[rnd.Next(0, candidates.Length)];\r\n    else\r\n        throw new ArgumentException(&#x26;quot;Must specify at least 1 character in the array (char[] candidates).&#x26;quot;, &#x26;quot;candidates&#x26;quot;);\r\n}\r\n\r\n/// &#x3C;summary>\r\n/// Returns a random letter character ({'a' - 'z'} + {'A' - 'Z'})\r\n/// &#x3C;/summary>\r\n/// &#x3C;param name=\"rnd\" />&#x3C;/param>\r\n/// &#x3C;returns>A character of the 26 English letters ignoring case.&#x3C;/returns>\r\npublic static char NextLetter(this Random rnd)\r\n{\r\n    return rnd.NextChar(new char[] { rnd.NextChar('a', 'z'), rnd.NextChar('A', 'Z') });\r\n}\r\n\r\n/// &#x3C;summary>\r\n/// Returns a random letter string (a string contains only letters, no other special characters) with customized length\r\n/// &#x3C;/summary>\r\n/// &#x3C;param name=\"rnd\" />&#x3C;/param>\r\n/// &#x3C;param name=\"length\" />The length that the random string will be in&#x3C;/param>\r\n/// &#x3C;returns>A string contains only letters.&#x3C;/returns>\r\npublic static string NextLetterString(this Random rnd, int length = 10)\r\n{\r\n    StringBuilder sb = new StringBuilder();\r\n    for (int i = 0; i &#x26;lt; length; i++)\r\n    {\r\n        sb.Append(rnd.NextLetter());\r\n    }\r\n    return sb.ToString();\r\n}\n</code></pre>\n<p>}\r\n#endregion</pre></p>\n<p><a href=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_600.png\"><img style=\"background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px\" title=\"Random string\" border=\"0\" alt=\"Random String\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_thumb_291.png\" width=\"224\" height=\"223\" /></a></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}