{"componentChunkName":"component---src-templates-post-js","path":"/posts/tx4g30","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/tx4g30","relativePath":"posts/tx4g30","frontmatter":{"title":"Free Arch：个人收款发货自动化之随机优惠方案（Hard Money）","stackbit_url_path":"posts/tx4g30","date":"2022-09-29T12:19:45","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=uVc1d></a></p>\n<h1>前言</h1>\n<p>免费架构不仅仅只有薅各大云厂商羊毛那么简单，还需要结合实际场景，在<strong>坚决不付钱</strong>的限制下，构建合适的服务来解决实际问题。</p>\n<p><a name=cCLKT></a></p>\n<h1>问题</h1>\n<p>众所周知，如果想做电商，就要对接支付平台，而这是需要企业资质的。如果采用个人收款码，就需要人肉检查订单的钱有没有到账了。比如你做了某个牛逼的资源下载功能，想增加付费后才能下载，每次用户扫了个人收款码付钱后，需要你手动把文件发给他，这也太费劲了。本文就来分析一下，对于个人开发者，可以怎么在用户付钱后系统自动感知并提供后续服务（发货流程）。</p>\n<p>对于个人来说，如果要将收款发货做到自动化，首先是缺少一个支付回调的支持。比如你用支付宝或者微信的个人收款码收款，没有相应的接口去查询人家是否支付了。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/221736/1664448360342-a0ecf694-fcb1-4579-898e-7c9727a83da5.jpeg\" alt=\"\"></p>\n<p><a name=fBIea></a></p>\n<h1>到账查询</h1>\n<p><a name=xPQME></a></p>\n<h2>监听到账通知？</h2>\n<p>以前写过一篇想法：<br /><a href=\"https://jeff-tian.jiwai.win/posts/-524i\">https://jeff-tian.jiwai.win/posts/-524i</a></p>\n<p>通过在手机上安装一个可以监听到账语音通知的 APP，来更改订单的支付状态。</p>\n<p><a name=Z5fwy></a></p>\n<h2>企业微信</h2>\n<p>要开发这样的 APP，似乎并不简单。有个更简单的方案，注册一个企业微信账号，开通对外收款功能。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664448854117-e8bae09c-5462-477f-844f-0c3a4d397a69.png#clientId=uef45072c-7506-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=776&#x26;id=uec88aa37&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1551&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=190674&#x26;status=done&#x26;style=none&#x26;taskId=ue0519e96-6fa7-412f-b1dc-20d6aa0a329&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p>然后，可以使用企业微信提供的 get_bill_list� 接口来查询支付情况，并去更新订单状态。这个方案比监听到账通知要好得多，因为省去了语音识别的问题。但是，还有其他问题仍然要考虑。</p>\n<p><a name=RJHB4></a></p>\n<h1>如何关联订单号？</h1>\n<p>无论是监听到账通知，还是使用企业微信的账单历史查询接口，都只能知道收到了一笔款项。但是这笔款项究竟是属于哪一笔订单的，仍然无法知道。</p>\n<p>与企业的支付接口不一样，个人收款码，以及企业对外收款码，这种是预先生成的码，没有办法事先带上后面才动态生成的订单号信息，因此在确定收款的订单归属时，碰到了困难。</p>\n<p><a name=P9NNB></a></p>\n<h2>采用金额关联</h2>\n<p>好在，收款码也可以提前设置一个金额。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664448888718-5e041bc1-0293-4b02-88a7-b545edbcdbe1.png#clientId=uef45072c-7506-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=1040&#x26;id=u6e3292c6&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=2079&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=280028&#x26;status=done&#x26;style=none&#x26;taskId=uc50621ec-5b9e-4607-8de6-c19846940af&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p>如果我们的某种订单，金额本来是 1 块钱。如果一段时间内产生了 10 个订单，收到了 5 笔 1 元入账，就不知道哪 5 个订单已支付，而哪 5 个订单未支付。为了解决这个订单匹配问题，不妨在产生订单时，给订单追加一个随机的小金额，保证这段时间的 10 个订单，每个订单的金额都不太一样，当收到入账时，就能根据订单金额匹配到是哪个订单被支付了。</p>\n<p>如果这个随机的小金额范围是 0 到 0.99 元，那么这一段时间窗口内就可以支持 100 个不同的订单。这就是该方案的吞吐量上限了。</p>\n<p>我们提前设置好 100 个不同金额的收款码，在生成订单后，根据某个规则，映射到一个金额，并展示对应金额的收款码，在这一段时间内，不同的订单都将展示不同的收款码。</p>\n<p><a name=tFphl></a></p>\n<h2>超时时间</h2>\n<p>不妨将超时时间设置为 10 分钟。那么这个个人订单系统的吞吐量就是 100/10分钟，即每分钟最多产生 10 个订单。\n<a name=pel3P></a></p>\n<h3>限流</h3>\n<p>假如 Alice 下了一个订单，金额是 1.88 元。那么 10 分钟内产生的订单，都不会再有 1.88 元的金额，而是其他金额。如果金额池用完了，生成订单将失败！</p>\n<p><a name=bDl2J></a></p>\n<h3>订单产生时间</h3>\n<p>上面的 Alice，产生订单后却不付款，放弃了。10 分钟后某时刻，Bob 正好也产生了另一个 1.88 元金额的订单，并且立即支付了。这时系统会判断是 Alice 的订单得到支付了吗？不会，因为系统在判断当前订单是否得到支付时，只查询从该订单从生成，到 10 分钟的这段时间的收款记录。</p>\n<p><a name=VsgpC></a></p>\n<h1><del>订单金额服务</del>随机优惠服务</h1>\n<p>最关键的是在决定订单金额时，要保证那 100 个金额中的某个金额，一旦用掉，就要锁定 10 分钟不可用。可以使用一个特殊的数据结构，存储着 100 个值，某个值一旦被取出，10分钟后又会被重新放回来。当所有的值都被取完后，再取值时会对外抛错。</p>\n<p>不妨将这种特殊的数据结构，做成一个单独的“订单金额”服务，对外提供一个 GET 请求的接口。在金额被用光而限流时返回 429 错误；其他情况下会返回一个 0 到 99 （代表给订单的原本金额追加多少分钱）的随机值，并且 10 分钟内不会重复。</p>\n<p><a name=WwNTy></a></p>\n<h2>用户体验</h2>\n<p>如果原来 1 块钱的订单，被随机追加了一个小数，尽管金额不高，但感觉还是不舒服。不如做成随机扣减，即原本 1 块钱，但随机红包 0.xx 元，实际只需要支付 0.yy 元。这样，用户会感觉更开心，毕竟红包虽小，但心意已到。</p>\n<p>谁知道，这其实是在帮助个人开发者解决技术问题呢！<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664451622304-91a4b0d0-8873-4ea6-9f22-0158ad4a7e63.png#clientId=uef45072c-7506-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=411&#x26;id=u199943f9&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=821&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=48563&#x26;status=done&#x26;style=none&#x26;taskId=u85b4c0ba-e04c-495c-a5d5-28ef0c0d289&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p>所以，最后这个服务就改名叫<strong>随机优惠</strong>服务啦！</p>\n<p><a name=zJ5nu></a></p>\n<h1>总结</h1>\n<p>通过这么一分析，最终发现，可以通过一个随机优惠服务，实现支付与订单的关联；而到账通知，可以采用语音监听或者企业微信提供的对外收款查询服务。这样就将个人收款发货自动化了。如果给这个系统起个名字，叫做 Hard Money，那么它的主要组件如下：</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}