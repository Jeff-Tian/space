{"componentChunkName":"component---src-templates-post-js","path":"/posts/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081/","result":{"data":{"sitePage":{"id":"SitePage /posts/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081/"}},"pageContext":{"url":"/posts/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081/","relativePath":"posts/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081.md","relativeDir":"posts","base":"ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081.md","name":"ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081","frontmatter":{"title":"ASP.NET 获取服务器上页面的客户端HTML源码","stackbit_url_path":"posts/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081","date":"2011-01-10 05:45:00","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["ASP.NET","C#","获取客户端源码"],"canonical_url":"https://be-net.azurewebsites.net/post/2011/01/10/ASPNET-e88eb7e58f96e69c8de58aa1e599a8e4b88ae9a1b5e99da2e79a84e5aea2e688b7e7abafHTMLe6ba90e7a081","template":"post"},"html":"<h1><font color=\"#9b00d3\"><font style=\"font-weight: bold\">首先介绍一下通过发送Http请求来获取某个网页的HTML响应的方法，代码如下：</font></font></h1>  <pre class=\"brush: csharp\">public string GetWebPageSource(string url) {\r\n        Uri uri = new Uri(url);\r\n        HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(uri);\r\n        HttpWebResponse httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();\r\n        httpWebRequest.Method = &quot;Get&quot;;\r\n        httpWebRequest.KeepAlive = false;\n<pre><code>    StreamReader reader = new StreamReader(httpWebResponse.GetResponseStream(), System.Text.Encoding.UTF8);\r\n    return reader.ReadToEnd();\n</code></pre>\n<p>}</pre></p>\n<p>使用此方法，向某个服务器发送了HTTP请求，并获得了该服务器对这个请求的响应。这个服务器也可以是本地服务器。这个功能可以用在做代理服务器，或者做浏览器的时候。</p>\n<h1><font color=\"#9b00d3\">有另外一种需求，比如要将本服务器上的某个页面，做为HTML邮件发送出去，这时候，要获取本服务器上的页面HTML源码。</font></h1>\n<p><strong><font color=\"#9b00d3\"></font></strong>当然也可以尝试使用上面的方法，但是，总觉得有些欠妥，因为，对服务器来说，我只需要将属于我的ASPX页面，解析成HTML发送出去就可以了，干嘛要先对我自己发送一个HTTP请求呢？另外，如果这个页面是需要登录的话，那么用上面的方法，返回的HTML会变成拒绝访问，要求登录的那个页面的HTML源码。</p>\n<p>其实，在这种情况下，最适合的方法，是使用 Server.Execute()。完整代码如下：</p>\n<pre class=\"brush: csharp\">public string GetPageHtmlSource(string path)\r\n{\r\n        StringWriter stringWriter = new StringWriter();\r\n        HtmlTextWriter htmlWriter = new HtmlTextWriter(stringWriter);\r\n        Server.Execute(path, htmlWriter);\r\n        string html = stringWriter.GetStringBuilder().ToString();\r\n        return html;\r\n}</pre>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}