{"componentChunkName":"component---src-templates-post-js","path":"/posts/ptb4t7","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/ptb4t7","relativePath":"posts/ptb4t7","frontmatter":{"title":"Free Arch: 给个人订单系统增加一张支付实体表","stackbit_url_path":"posts/ptb4t7","date":"2022-09-30T11:29:58","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p>昨天在 <a href=\"https://zhuanlan.zhihu.com/p/569483206\">https://zhuanlan.zhihu.com/p/569483206</a> 里，写了一下通过企业微信的对外收款完成个人收款自动化的方案，本来是想将该方案完全实现后再来写一篇带示例的文章展示一下的。但是，由于时间有限，要等示例完全做好估计要到明年了……</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664535542684-87c2c809-1950-4eac-94b8-e9755fa763a1.png#clientId=ude0b5e45-1133-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;errorMessage=unknown%20error&#x26;from=paste&#x26;height=301&#x26;id=uc2be328b&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=602&#x26;originWidth=1142&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=140767&#x26;status=error&#x26;style=none&#x26;taskId=u50a0b562-60fa-4f06-848b-a9c7c4481d4&#x26;title=&#x26;width=571\" alt=\"image.png\"></p>\n<p>于是，我干脆零星地把每一个进展记录下来，算是一个开发日志吧。</p>\n<p>今天做的不多，仅仅是增加了一个文件，提交记录见：<a href=\"https://github.com/Jeff-Tian/uni-orders/commit/ff38bb4e7f85c43330125b478b4dab4d2f1af1fb\">https://github.com/Jeff-Tian/uni-orders/commit/ff38bb4e7f85c43330125b478b4dab4d2f1af1fb</a></p>\n<p><a name=RBi7f></a></p>\n<h1>复活老项目</h1>\n<p>uni-orders 是一个陈年老项目，部署在 Okteto 上： <a href=\"https://uni-orders-jeff-tian.cloud.okteto.net/api/static/index.html\">https://uni-orders-jeff-tian.cloud.okteto.net/api/static/index.html</a>。这个项目提供了 API，可以创建订单。目前也只有一个数据表，即 orders。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664535813660-63c6d304-859b-4143-9122-042279d8fed5.png#clientId=ude0b5e45-1133-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;errorMessage=unknown%20error&#x26;from=paste&#x26;height=397&#x26;id=u2aac303f&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=794&#x26;originWidth=1607&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=125292&#x26;status=error&#x26;style=none&#x26;taskId=ud0e5869c-1344-4925-92e6-3b01a30f70b&#x26;title=&#x26;width=803.5\" alt=\"image.png\"></p>\n<p>以上是一个查询单号为 10 的订单详情的请求响应。\n<a name=k6dRU></a></p>\n<h1>支付情况查询</h1>\n<p>现在，可以给它增加一个能力了，即在查询订单详情时，如果 paid_at 为空，那么按照昨天的设计，就去<strong>支付服务</strong>里查询一下从该订单生成的时间到10分钟后这个区间的支付列表，用金额做为关联，看是否已经支付了，并将结果更新回 order 表。\n<a name=ncVs8></a></p>\n<h2>已支付</h2>\n<p>设置 paid_at 的时间，并设置订单状态为“已支付”。同时，在新的支付信息表里，记录支付详情。同时更新订单的<strong>支付查询标记</strong>字段，表示已经查询结束，不需要再次查询。\n<a name=oRGOS></a></p>\n<h2>超时未支付</h2>\n<p>设置订单状态为“超时未支付”，同时更新订单的<strong>支付查询标记</strong>字段，表示已经查询结束，不需要再次查询。\n<a name=BqVC8></a></p>\n<h2>未支付未超时</h2>\n<p>设置订单状态为“等待支付”状态，同时不需要更新“支付查询标记”字段，表示后续查询订单状态时，仍然需要从“支付服务”处查询支付状态。</p>\n<p><a name=utt3z></a></p>\n<h1>支付信息表</h1>\n<p>以上支付情况查询，对于已支付的，需要将支付详情写入新表，这就是本次改动新增的文件所做的。对订单表新增字段的需求，下次再做了。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664536415869-92ea86b3-f2ed-422a-9c51-f65eddeba3f7.png#clientId=ude0b5e45-1133-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;errorMessage=unknown%20error&#x26;from=paste&#x26;height=479&#x26;id=uf56e1c53&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=957&#x26;originWidth=1589&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=168259&#x26;status=error&#x26;style=none&#x26;taskId=u2b8d6f74-739b-4de4-bf24-6e1722f4ff5&#x26;title=&#x26;width=794.5\" alt=\"image.png\"></p>\n<p>以上截图是支付详情，根据其数据结构（企业微信返回的），设计了 payment 表，但是对于 commodity_list、refund_list、payer_info 暂时跳过，因为不太清楚具体结构，而且看上去基本都是空。</p>\n<p>所以，最后的表结构如下：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664536822856-aa2b0c5f-9993-4f8f-9a47-94c0a2a26a2b.png#clientId=ude0b5e45-1133-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;errorMessage=unknown%20error&#x26;from=paste&#x26;height=257&#x26;id=u6b93639c&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=514&#x26;originWidth=468&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=65494&#x26;status=error&#x26;style=none&#x26;taskId=uba09a50c-af53-4a3b-888d-88ae8b3e476&#x26;title=&#x26;width=234\" alt=\"image.png\"></p>\n<p><a name=r4EZU></a></p>\n<h1>快速从项目代码中生成模型图</h1>\n<p>在 <a href=\"https://zhuanlan.zhihu.com/p/389745846\">https://zhuanlan.zhihu.com/p/389745846</a> 这篇文章里，介绍了我参与开发的一个工具，tplant，可以直接从代码生成模型图。以上的表结构图就是用它生成的。具体使用方案在那篇文章里有文字详述，以及 GIF 动图指引。</p>\n<p>这里贴一下在 uni-orders 项目中的使用记录截图：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664537036806-8f6de421-17d5-42fa-bacb-53ae4844ac5b.png#clientId=u42dd8f0e-44ce-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=644&#x26;id=u03f37eb8&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1288&#x26;originWidth=3024&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=418150&#x26;status=done&#x26;style=none&#x26;taskId=ud00e53a6-fcc3-4e8e-b676-c2e1e3b442d&#x26;title=&#x26;width=1512\" alt=\"image.png\"></p>\n<p>本来，是期待用 *.ts 生成所有模型的，但结果只有 order 的模型。原因可能是今天只新增了一个文件，它们两者间没有关系，导致生成的图里不包含 payment。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1664537245208-312a74bc-dbb5-4dab-841f-f5e45e192a5f.png#clientId=u42dd8f0e-44ce-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=275&#x26;id=uaaefe5ef&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=550&#x26;originWidth=1930&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=151782&#x26;status=done&#x26;style=none&#x26;taskId=u6ffacc3b-4fb4-4d20-9d45-b50bf2cb52b&#x26;title=&#x26;width=965\" alt=\"image.png\">\n<a name=pSwLN></a></p>\n<h1>待做事项</h1>\n<ol>\n<li>tplant 还可以再改进一下，即使模型间没有关系，也可以铺在最终的模型图里嘛；</li>\n<li>项目中的 order 和 payment 要建立联系；</li>\n<li>项目中的 order 有字段名写错了，要改正。</li>\n</ol>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}