{"componentChunkName":"component---src-templates-post-js","path":"/posts/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数/","result":{"data":{"sitePage":{"id":"SitePage /posts/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数/"}},"pageContext":{"url":"/posts/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数/","relativePath":"posts/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数.md","relativeDir":"posts","base":"用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数.md","name":"用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数","frontmatter":{"title":"用EXCEL VBA 计算一组数据的自相关函数和偏自相关函数","stackbit_url_path":"posts/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数","date":"2009-11-11 07:45:58","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2009/11/11/用EXCEL-VBA-计算一组数据的自相关函数和偏自相关函数","template":"post"},"html":"<pre><code>    &#x3C;div style=\"text-indent: 2em;\">\n</code></pre>\n<p>示例欢迎通过以下网址下载:<br>\n<u><a href=\"http://www.myfootprints.cn/OldWeb/blog/upload/ACF_PACF.xls\"><font color=\"#0240a3\">http://www.myfootprints.cn/blog/upload/ACF_PACF.xls</font></a></u></p>\n<div>\n<p dir=\"ltr\">以下是vba 模块：</p>\n<p><strong>注：</strong>传入ACF()函数的参数必须是已经中心化后的数组。而传入PACF()函数的参数是由ACF()函数计算出来的数组序列。</p>\n<p>使用中心化后的相同的数据在本Excel文件中和在SAS软件中计算的结果是一致的。</p>\n<p>如：下载后示例文件后，将如下数据在SAS软件中计算其自相关函数与偏自相关函数：</p>\n<div style=\"text-indent: 0;\">\n<pre style=\"text-indent: 0;\">-5.552941176\n-3.352941176\n-1.552941176\n-4.152941176\n-1.552941176\n-4.152941176\n-3.152941176\n-2.152941176\n-1.152941176\n-0.152941176\n0.847058824\n1.847058824\n2.847058824\n3.847058824\n4.847058824\n5.847058824\n6.847058824\n</pre>\n</div>\n<p>SAS 程序为：</p>\n<div style=\"text-indent: 0;\">\n<pre class=\"brush: c\" style=\"text-indent: 0;\">data mydata;\ninput x;\ncards;\n-5.552941176\n-3.352941176\n-1.552941176\n-4.152941176\n-1.552941176\n-4.152941176\n-3.152941176\n-2.152941176\n-1.152941176\n-0.152941176\n0.847058824\n1.847058824\n2.847058824\n3.847058824\n4.847058824\n5.847058824\n6.847058824\n;\nrun;\n<p>proc arima;\nidentify var = x nlag = 864 outcov = out1;\nrun;\n</pre></p>\n</div>\n<p style=\"margin-right: 0px\" dir=\"ltr\">计算自相关函数的的自定义函数是acf()，偏自关函数是pacf()，它们的参数都是一组数据，而这组数据来自excel中的单元格范围，故它们都调用了一个函数，用来将excel的单元格范围转化成一个数组，这个函数就是range2array()。</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">range2array()的算法很简单，用for each循环将range中的每一个数字逐个填充到预先定义好的array()中。而这个array()的大小，与range中的单元格数相同。</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">acf()的算法，即是根据样本自相关函数的定义而实现的。即</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\"><img alt=\"\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_420.png\"></p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">而pacf()的算法，也是根据偏自相关函数的定义来的。即</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\"><img alt=\"\" src=\"https://raw.githubusercontent.com/Jeff-Tian/blogengine.net/master/Source/BlogEngine/BlogEngine.NET/App_Data/files/image_421.png\"></p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">在pacf()中，先根据输入的参数数组，分别得到分母矩阵和分子矩阵，然后分别对分母矩阵和分子矩阵求行列式值。最后相除即可。</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">分母矩阵实际上是一个对称矩阵，而且观察后可以发现有这样的规律，即，<strong>每个元素的下标，都是其行列号的差的绝对值</strong>。</p>\n<p style=\"margin-right: 0px\" dir=\"ltr\">而分子矩阵，除了最后一列，其他的元素都与分母矩阵相同。</p>\n</div>\n<div style=\"text-indent: 0;\">\n<pre class=\"brush: vb\" style=\"text-indent: 0;\">Option Explicit\n'Option Private Module\n<p>''''''''''''''''''''''''''''''''''\n' 计算列数据的自相关函数\n'\n''''''''''''''''''''''''''''''''''\nPublic Function ACF(ByRef rng As Range, ByVal k As Long) As Double\nDim dDenominator As Double\nDim dNumerator As Double\nDim daX() As Variant\nDim i As Long\nDim lUB As Long, lLB As Long</p>\n<pre><code>daX = Range2Array(rng)\n\n'计算分子\ndNumerator = 0\nlUB = UBound(daX)\nlLB = LBound(daX)\nFor i = lLB + k To lUB\n    dNumerator = dNumerator + daX(i) * daX(i - k)\nNext i\n\n'计算分母\ndDenominator = 0\nFor i = lLB To lUB\n    dDenominator = dDenominator + daX(i) * daX(i)\nNext i\n\nACF = dNumerator / dDenominator\n</code></pre>\n<p>End Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' 计算列数据的偏自相关函数\n'\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\nPublic Function PACF(ByRef rng As Range, ByVal k As Long) As Double\nDim dDenominator As Double\nDim dNumerator As Double\nDim dMatrixDenominator() As Double\nDim dMatrixNumerator() As Double\nDim vArray() As Variant\nDim i As Long, j As Long\nDim sString As String</p>\n<pre><code>vArray = Range2Array(rng, 1)\nvArray(LBound(vArray)) = 1\n\nReDim dMatrixDenominator(0 To k - 1, 0 To k - 1)\nReDim dMatrixNumerator(0 To k - 1, 0 To k - 1)\n\n'生成分母矩阵\n</code></pre>\n<p>'    sString = \"分母矩阵:\" &#x26; vbCrLf</p>\n<pre><code>For i = 0 To k - 1\n    For j = 0 To k - 1\n        dMatrixDenominator(i, j) = CDbl(vArray(Abs(i - j)))\n</code></pre>\n<p>'            sString = sString &#x26; dMatrixDenominator(i, j) &#x26; vbTab\nNext j\n'        sString = sString &#x26; vbCrLf\nNext i\n'    Debug.Print sString</p>\n<pre><code>'生成分子矩阵\nFor i = 0 To k - 1\n    For j = 0 To k - 2\n        dMatrixNumerator(i, j) = CDbl(vArray(Abs(i - j)))\n    Next j\nNext i\nFor i = 0 To k - 1\n    dMatrixNumerator(i, k - 1) = CDbl(vArray(i + 1))\nNext i\n</code></pre>\n<p>'    sString = \"分子矩阵:\" &#x26; vbCrLf\n'    For i = 0 To k - 1\n'        For j = 0 To k - 1\n'            sString = sString &#x26; dMatrixNumerator(i, j) &#x26; vbTab\n'        Next j\n'        sString = sString &#x26; vbCrLf\n'    Next i\n'    Debug.Print sString</p>\n<pre><code>'计算PACF(k,k)\nPACF = Application.WorksheetFunction.MDeterm(dMatrixNumerator) / Application.WorksheetFunction.MDeterm(dMatrixDenominator)\n</code></pre>\n<p>End Function</p>\n<p>'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' 求和\n'\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\nPublic Function SigmaSum(ByRef rng As Range, ByVal lBegin As Long, ByVal lEnd As Long, ByVal power As Double) As Double\nSigmaSum = 0</p>\n<pre><code>Dim i As Long\n\nFor i = lBegin To lEnd\n    SigmaSum = SigmaSum + CDbl(rng.Cells(i).Value) ^ power\nNext i\n</code></pre>\n<p>End Function</p>\n<p>'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' 将Range转换成数组 (变体型)\n'\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\nPrivate Function Range2Array(ByRef rng As Range, Optional ByVal lOffset As Long = 0) As Variant()\nDim vaRet() As Variant\nDim i As Long\nDim rngCell As Range</p>\n<pre><code>ReDim vaRet(0 To rng.Cells.Count - 1)\ni = lOffset\nFor Each rngCell In rng\n    vaRet(i) = rngCell.Value\n    If i &#x26;gt;= UBound(vaRet) Then\n        Exit For\n    End If\n    i = i + 1\nNext rngCell\n\nRange2Array = vaRet\n</code></pre>\n<p>End Function</p>\n<p>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n' 将Range转换成数组 (双精度型)\n'\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\nPrivate Function Range2ArrayDouble(ByRef rng As Range) As Double()\nDim daRet() As Double\nDim i As Long\nDim rngCell As Range</p>\n<pre><code>ReDim vaRet(0 To rng.Cells.Count - 1)\ni = 0\nFor Each rngCell In rng\n    On Error Resume Next\n    daRet(i) = CDbl(rngCell.Value)\n    If Err.Number &#x26;lt;&#x26;gt; 0 Then\n        daRet(i) = 0\n        Err.Clear\n    End If\n    i = i + 1\nNext rngCell\n\nRange2ArrayDouble = daRet\n</code></pre>\n<p>End Function\n</pre></p>\n</div>\n<p>&nbsp;</p>\n<p>示例文件：<a target=\"_blank\" href=\"http://www.myfootprints.cn/OldWeb/blog/upload/ACF_PACF.xls\">ACF_PACF.xls</a></p>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}