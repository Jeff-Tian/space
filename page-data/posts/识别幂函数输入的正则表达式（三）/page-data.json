{"componentChunkName":"component---src-templates-post-js","path":"/posts/识别幂函数输入的正则表达式（三）/","result":{"data":{"sitePage":{"id":"SitePage /posts/识别幂函数输入的正则表达式（三）/"}},"pageContext":{"url":"/posts/识别幂函数输入的正则表达式（三）/","relativePath":"posts/识别幂函数输入的正则表达式（三）.md","relativeDir":"posts","base":"识别幂函数输入的正则表达式（三）.md","name":"识别幂函数输入的正则表达式（三）","frontmatter":{"title":"识别幂函数输入的正则表达式（三）","stackbit_url_path":"posts/识别幂函数输入的正则表达式（三）","date":"2012-02-01 07:25:10.394154","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":["函数涂鸦板","在线图形计算器","幂函数","惰性","支配","正则表达式","贪婪","量词"],"canonical_url":"https://be-net.azurewebsites.net/post/2012/02/01/识别幂函数输入的正则表达式（三）","template":"post"},"html":"<h1><font color=\"#800080\">一、注意事项：</font></h1>  <p>本文所讨论的正则表达式，均是JavaScript版本的。</p>  <h1><font color=\"#800080\">二、应用：</font></h1>  <p>本系列文章所讨论的技术，都已经使用在了<a href=\"http://www.zizhujy.com/zh-CN/FunctionGraffiti\">函数涂鸦板</a> 中。</p>  <h1><font color=\"#800080\">三、要解决的问题：<a title=\"函数涂鸦板\" href=\"http://www.zizhujy.com/FunctionGraffiti\" target=\"_blank\"><img style=\"border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; margin-left: 0px; border-left-width: 0px; margin-right: 0px\" border=\"0\" alt=\"函数涂鸦板\" align=\"right\" src=\"http://www.zizhujy.com/Content/Images/FunctionGraffiti.png\" width=\"215\" height=\"216\" /></a></font></h1>  <p>在《<a href=\"http://www.zizhujy.com/blog/post/2012/01/28/%E8%AF%86%E5%88%AB%E5%B9%82%E5%87%BD%E6%95%B0%E8%BE%93%E5%85%A5%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89.aspx\">识别幂函数输入的正则表达式（二）</a>》中，通过使用增强的幂函数识别正则表达式</p>  <p>/(\\w+)\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/</p>  <p>实现了对</p>  <p>y = x ^ 2</p>  <p>y = x ^ –2</p>  <p>y = x ^ + 2</p>  <p>y = x ^ (-3/2)</p>  <p>这几种类型的幂函数输入模式进行识别。对于单一函数输入，这个解决方案已经完美。但是，</p>  <ol>   <li>对于多函数输入如 y = x^3; y = x^2; ，上述正则表达式将只匹配第一个。 </li>    <li>对于嵌套幂函数输入如 y = x^2^3;，上述正则表达式将只能识别外层的一个。 </li> </ol>  <p>本文将逐步构造出一个终极的幂函数识别正则表达式，达到能够识别以下各种模式的幂函数输入：</p>  <ul>   <li>增强幂函数识别正则表达式所能识别的各种（向下兼容），即      <ul>       <li>y = x^2; </li>        <li>y = x^-2; </li>        <li>y = x^+2; </li>        <li>y = x^(-3/2); </li>     </ul>   </li>    <li>嵌套幂函数的输入，即      <ul>       <li>y = x^2^3; </li>        <li>y = (x^2)^3; </li>        <li>y = x^(2^3); </li>        <li>y = sin(x)^2; </li>        <li>y = sin(x^2); </li>        <li>y = x^(-2)^3; </li>        <li>y = x^2^-3; </li>     </ul>   </li>    <li>以上各种函数的组合（各函数使用;号分隔） </li> </ul>  <h1><font color=\"#800080\">四、解决方案：</font></h1>  <p>终极的幂函数识别正则表达式为：</p>  <p>/(\\w+?(?:\\([^\\^]*?\\))??|\\([^\\^]*?\\))\\s*?\\^\\s*?([-\\+]??\\s*?\\w+?|\\(.*?\\))/g</p>  <p>为实现对于嵌套幂函数的识别与替换，需要使用循环，因为JavaScript不支持嵌套的正则表达式语法。</p>  <pre class=\"brush: javascript\">function processUserInput(s) {\r\n\t// 识别幂函数输入：\r\n\tvar rePower = /(\\w+?(?:\\([^\\^]*?\\))??|\\([^\\^]*?\\))\\s*?\\^\\s*?([-\\+]??\\s*?\\w+?|\\(.*?\\))/g;\r\n\twhile (rePower.test(s)) {\r\n\t\ts = s.replace(rePower, &quot;pow($1, $2)&quot;);\r\n\t\t// 下面这个语句非常重要！！！\r\n\t\trePower.lastIndex = 0;\r\n\t}\r\n\treturn s;\r\n}</pre>\n<h1><font color=\"#800080\">五、原理：</font></h1>\n<ol>\r\n  <li>实现对于以;号分隔的函数的组合进行识别：这个非常简单，将正则表达式的模式改为全局模式，即/(\\w+)\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/<font color=\"#ff0000\">g</font> </li>\n  <li>为识别 (x)^3 或者 sin(x)^2 这样的模式，将原来的指数左半部分即 ^ 号左边的正则表达式作一扩充： \r\n    <ul>\r\n      <li>(\\w+) –&gt; (\\w+(\\([^\\^]*\\))?|\\([^\\^]*\\)) </li>\n<pre><code>  &#x3C;li>原来左半部分的是一个捕获性分组，即一个单词。于是只识别 x^3 中的 x。扩充后的，| 号左边匹配 x^3 中的 x，或者 sin(x) ^ 3 中的 sin(x)。注意到那个？号了吗？就是()部分可有可无。| 号右边的，和左边后半部分一样，即专门匹配 (x) ^3 中的 (x)。所以不带？号。| 号是或者的关系。 &#x3C;/li>\r\n\r\n  &#x3C;li>[^\\^]*表示()号中可以是除了^号之外的任意字符。 &#x3C;/li>\r\n\r\n  &#x3C;li>于是，原来的正则表达式，由/&#x3C;font color=\"#ff0000\">(\\w+)&#x3C;/font>\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/升级成了/&#x3C;font color=\"#ff0000\">(\\w+(\\([^\\^]*\\))?|\\([^\\^]*\\))&#x3C;/font>\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/&#x3C;font color=\"#ff0000\">g&#x3C;/font> &#x3C;/li>\r\n\r\n  &#x3C;li>在正则表达式中，使用捕获性分组，会降低效率（虽然对于现在的计算机，这算不上什么，但这里还是节约了这点效率）。于是将不必要的分组由捕获性分组变成非捕获性分组，于是：/&#x3C;font color=\"#ff0000\">(\\w+(\\([^\\^]*\\))?|\\([^\\^]*\\))&#x3C;/font>\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/&#x3C;font color=\"#ff0000\">g&#x3C;/font>&#x26;#160; --&#x26;gt;&#x26;#160; /&#x3C;font color=\"#ff0000\">(\\w+(&#x3C;strong>&#x3C;font color=\"#800000\">?:&#x3C;/font>&#x3C;/strong>\\([^\\^]*\\))?|\\([^\\^]*\\))&#x3C;/font>\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/&#x3C;font color=\"#ff0000\">g&#x3C;/font>&#x26;#160; &#x3C;/li>\r\n&#x3C;/ul>\n</code></pre>\n  </li>\n  <li>为了能够识别嵌套的模式，需要使用惰性量词，即先看字符串中的第一个字母是否匹配。如果单独这一个字符还不够，就读入下一个字符，组成两个字符的字符串。如果还是没有发现匹配，惰性量词继续从字符串中添加字符直到发现匹配或者整个字符串都检查过也没有匹配。如果使用惰性量词，会不会造成只识别第一个出现的模式呢？对！会出现这种情况，但是，别担心，在解决方案中，我们用了循环！惰性量词就是添加？号，于是/<font color=\"#ff0000\">(\\w+(<strong><font color=\"#800000\">?:</font></strong>\\([^\\^]*\\))?|\\([^\\^]*\\))</font>\\s*\\^\\s*([-\\+]?\\s*\\w+|\\(.*\\))/<font color=\"#ff0000\">g</font>&#160; --&gt; /<font color=\"#ff0000\">(\\w+<em><font color=\"#0000ff\">?</font></em>(<strong><font color=\"#800000\">?:</font></strong>\\([^\\^]*<em><font color=\"#0000ff\">?</font></em>\\))?<em><font color=\"#0000ff\">?</font></em>|\\([^\\^]*<em><font color=\"#0000ff\">?</font></em>\\))</font>\\s*<em><font color=\"#0000ff\">?</font></em>\\^\\s*<em><font color=\"#0000ff\">?</font></em>([-\\+]?<em><font color=\"#0000ff\">?</font></em>\\s*<em><font color=\"#0000ff\">?</font></em>\\w+<em><font color=\"#0000ff\">?</font></em>|\\(.*<em><font color=\"#0000ff\">?</font></em>\\))/<font color=\"#ff0000\">g</font>&#160; </li>\n  <li>成了！ </li>\r\n</ol>\n<h1><font color=\"#800080\">六、附录：</font></h1>\n<p>JavaScript 正则表达式贪婪、惰性、支配量词的概念介绍：参见《<a href=\"http://www.zizhujy.com/blog/post/2009/11/26/%E8%87%AA%E5%AE%9A%E4%B9%89-String-%E5%AF%B9%E8%B1%A1%E7%9A%84trim()%E6%96%B9%E6%B3%95.aspx\">自定义 String 对象的trim()方法</a>》一文最底部。</p>\n<p>JavaScript 正则表达式贪婪、惰性、支配量词的表示方法列表：</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"2\" width=\"647\"><tbody>\r\n    <tr>\r\n      <td valign=\"top\" width=\"150\">\r\n        <p align=\"center\"><strong>贪婪</strong></p>\r\n      </td>\n<pre><code>  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">&#x3C;strong>惰性&#x3C;/strong>&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">&#x3C;strong>支配&#x3C;/strong>&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">\r\n    &#x3C;p align=\"center\">&#x3C;strong>描述&#x3C;/strong>&#x3C;/p>\r\n  &#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">??&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">?+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 零次或一次出现&#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">*&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">*?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">*+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 零次或多次出现&#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">+?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">++&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 一次或多次出现&#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n}&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n}?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n}+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 恰好n次出现&#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,m}&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,m}?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,m}+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 至少n次至多m次出现&#x3C;/td>\r\n&#x3C;/tr>\r\n\r\n&#x3C;tr>\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,}&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,}?&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"150\">\r\n    &#x3C;p align=\"center\">{n,}+&#x3C;/p>\r\n  &#x3C;/td>\r\n\r\n  &#x3C;td valign=\"top\" width=\"195\">&#x26;#160; 至少n次出现&#x3C;/td>\r\n&#x3C;/tr>\n</code></pre>\n  </tbody></table>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}