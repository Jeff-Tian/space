{"componentChunkName":"component---src-templates-post-js","path":"/posts/自己写个类型转换类-Convertercs/","result":{"data":{"sitePage":{"id":"SitePage /posts/自己写个类型转换类-Convertercs/"}},"pageContext":{"url":"/posts/自己写个类型转换类-Convertercs/","relativePath":"posts/自己写个类型转换类-Convertercs.md","relativeDir":"posts","base":"自己写个类型转换类-Convertercs.md","name":"自己写个类型转换类-Convertercs","frontmatter":{"title":"自己写个类型转换类 Converter.cs","stackbit_url_path":"posts/自己写个类型转换类-Convertercs","date":"2010-07-14 03:44:33","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/07/14/自己写个类型转换类-Convertercs","template":"post"},"html":"<pre><code>    &#x3C;p>在C#中，似乎没有一种方便的类型转换类，使得当转换失败时，默认返回一个预先设定好的值。&#x3C;/p>\n</code></pre>\n<p>如从数据库中读到一个日期字段reader[\"time\"]，将它放到一个DateTime类型变量 myTime 中时，就要做一个类型转换。然而，reader[\"time\"]很有可能为空，所以即使你用</p>\n<p>myTime = Convert.ToDateTime(reader[\"time\"].ToString()) ;</p>\n<p>也不安全，很可能因为reader[\"time\"]为Null或者不是正确的日期格式而导致程序崩溃。</p>\n<p>我希望要一种方便的方式，使得当reader[\"time\"]不是正确的日期格式时，就往myTime中填入一个最小的日期值，告诉程序日期无效，并且不会让程序崩溃。于是自己写了个类型转换类Converter.cs，有了它就可以方便地实现上述的要求。</p>\n<p>myTime = Converter.ToDateTime(reader[\"time\"].ToString());</p>\n<p>或者你希望用日期最大值来代表无效的日期：</p>\n<p>myTime = Converter.ToDateTime(reader[\"time\"].ToString(), DateTime.MaxValue);</p>\n<p>&nbsp;</p>\n<p>Converter.cs 源码如下：</p>\n<pre class=\"brush: csharp\">\n<p>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;</p>\n<p>/// &#x3C;summary>\n/// 类型转换类\n/// &#x3C;/summary>\n/// &#x3C;remarks>\n/// 作者：涂鸦 <a href=\"mailto:admin@myfootprints.cn\">admin@myfootprints.cn</a>\n/// &#x3C;/remarks>\npublic class Converter\n{\npublic Converter()\n{\n//\n// TODO: Add constructor logic here\n//\n}</p>\n<pre><code>public static int ToInt(string value, int errorValue)\n{\n    int returnValue;\n\n    if (!int.TryParse(value, out returnValue))\n    {\n        returnValue = errorValue;\n    }\n\n    return returnValue;\n}\n\npublic static int ToInt(string value) {\n    return ToInt(value, 0);\n}\n\npublic static double ToDouble(string value, double errorValue)\n{\n    double returnValue;\n\n    if (!double.TryParse(value, out returnValue))\n    {\n        returnValue = errorValue;\n    }\n\n    return returnValue;\n}\n\npublic static double ToDouble(string value)\n{\n    return ToDouble(value, 0.0);\n}\n\npublic static DateTime ToDateTime(string value, DateTime errorValue)\n{\n    DateTime returnValue;\n\n    if (!DateTime.TryParse(value, out returnValue))\n    {\n        returnValue = errorValue;\n    }\n\n    return returnValue;\n}\n\npublic static DateTime ToDateTime(string value)\n{\n    return ToDateTime(value, DateTime.MinValue);\n}\n\npublic static bool ToBoolean(string value, bool errorValue)\n{\n    bool returnValue;\n\n    if (!bool.TryParse(value, out returnValue))\n    {\n        returnValue = errorValue;\n    }\n\n    return returnValue;\n}\n\npublic static bool ToBoolean(string value)\n{\n    return ToBoolean(value, false);\n}\n</code></pre>\n<p>}\n</pre></p>\n<div>&nbsp;</div>\n<div>&nbsp;</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}