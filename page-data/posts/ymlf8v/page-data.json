{"componentChunkName":"component---src-templates-post-js","path":"/posts/ymlf8v","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/ymlf8v","relativePath":"posts/ymlf8v","frontmatter":{"title":"接口（API）开发应该遵循的原则","stackbit_url_path":"posts/ymlf8v","date":"2021-11-22T04:28:19","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=Rgpbf></a></p>\n<h1><img src=\"https://cdn.nlark.com/yuque/0/2021/png/221736/1637836269507-ad5c074a-431e-4e7d-9b1c-47cd784dd79b.png#clientId=ub9234bb0-d59f-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=ui&#x26;id=u8952603a&#x26;margin=%5Bobject%20Object%5D&#x26;name=MicrosoftTeams-image%20%2811%29.png&#x26;originHeight=1073&#x26;originWidth=1078&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=171280&#x26;status=done&#x26;style=none&#x26;taskId=u2085a3e1-7fae-4603-95ef-42ea7cf9ad4&#x26;title=\" alt=\"MicrosoftTeams-image (11).png\">原则</h1>\n<p>原则构成设计必须达到的基准，最佳实践提供基于之前的经验总结出来的指引和模式。</p>\n<p><a name=tTxAd></a></p>\n<h2>1. 数据模型驱动</h2>\n<p>基于数据和功能的接口应该基于良好定义的数据模型、概念和术语。接口对外暴露的应该是数据对象/它们代表的概念的模型而不是底层系统。</p>\n<blockquote>\n<p>举例：HR 主数据 API 对外暴露的数据模型应该由负责 API 的产品团队来设计和策划。这些数据模型代表的是组织自己理解的 HR 术语、实体以及流程，而不是底层的系统（比如 SAP HR 或者 Workday 等等）。</p>\n</blockquote>\n<p><a name=txgb5></a></p>\n<h3>实际影响</h3>\n<ol>\n<li>在开始构建 API 之前，产品团队需要在 API 规格说明中定义底层数据模型的文档。这需要知道如何设计 API 的工程师和理解业务的数据、流程上下文的相关主题的专家一起通力合作。API 规格说明是与利益相关人讨论 API 范围和结构的主要文档。</li>\n</ol>\n<p><a name=BmTfb></a></p>\n<h2>2. 以规格说明为参考基准</h2>\n<p>基于通用、开放标准以及规格说明（例如 OpenAPI、异步API、JSON Schema）来构建 API，从而保证 API 的低熵值，并可以通过通用词汇来理解它们。\n<a name=o5ILl></a></p>\n<h3>实际影响</h3>\n<p>从该原则来审视 API 的话，一个好的 API 应该是：</p>\n<ul>\n<li>如果是同步的，基于 OpenAPI 标准。</li>\n<li>数据交换格式是 JSON</li>\n<li>基于 JSON Schema 构建或者自动生成 Schema</li>\n</ul>\n<p><a name=Gv2xB></a></p>\n<h2>3. 基于合同</h2>\n<p>API 需要定义良好的合同和服务水平协议。它们代表了提供稳定、可靠以及安全服务的承诺，并且要考虑到服务消费者的最大利益。\n<a name=bNBaF></a></p>\n<h3>实际影响</h3>\n<p>从该原则来审视 API，一个好的 API 应该具有如下特点：</p>\n<ul>\n<li>文档化的服务水平协议（SLA）。这样，用户才能知道该从 API 有什么样的期待从而做相应的设计。</li>\n<li>版本控制。API 的构建和部署时刻考虑到版本控制。这样，API 仍然支持被访问的方式随着时间产生变化，但是是以一种需要 API 的用户从他们一侧采取有意和知晓的行为来升级到更新的版本的方式。</li>\n<li>带版本的模型。API 可用的模型必须带有版本信息。</li>\n<li>基于模式。所有 API 和模型组合的模式都基于 JSON Schema。\n<ul>\n<li>而且，让模式通过 HTTP 协议获取可以使得用户验证模型并且使质量保证和自动化测试变得可行。</li>\n</ul>\n</li>\n<li>可以随时废弃 API 或者模型。废弃功能说明你建议用户一个升级路径，但是不强制他们必须这样做。\n<ul>\n<li>对于已废弃的接口和模型，用户不能期望任何新的特性。</li>\n</ul>\n</li>\n<li>关键接口不能强制用户升级到新的版本。\n<ul>\n<li>通过监控 API，你可以跟踪每个 API 和模型的版本被使用的流量，当所有用户都升级或者迁移到新的 API 后，旧的 API 就可以被移除了。</li>\n</ul>\n</li>\n</ul>\n<p><a name=P74tz></a></p>\n<h2>4. 全球可用</h2>\n<p>对于跨国性质的业务提供支持的服务，需要时刻考虑全球可用性和可访问性。</p>\n<p><a name=WcAeO></a></p>\n<h2>5. 为公开消费而设计</h2>\n<p>多数 API 会对外暴露敏感的功能和数据，所以当服务暴露在开放的因特网上时，就需要设计和构建 API 的安全性，这毋庸置疑；但是，即使没有对开放因特网公开，我们也要当作已经公开一样来对待。</p>\n<p><a name=GAObj></a></p>\n<h2>6. 可发现的</h2>\n<p>API 总是为其他产品团队或者领域来消费而构建，所以需要通过一个集中化的 API 门户，把它们构建成可发现的和可用的。</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}