{"componentChunkName":"component---src-templates-post-js","path":"/posts/wbgy0f","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/wbgy0f","relativePath":"posts/wbgy0f","frontmatter":{"title":"使用 TDD 做开源贡献","stackbit_url_path":"posts/wbgy0f","date":"2022-07-20T02:21:04","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=CWklm></a></p>\n<h1>TDD</h1>\n<p>TDD，即测试驱动开发，要求先写测试，再写实现。除了日常开发外，其实在做开源贡献时，也非常适合。TDD 要细聊的话，内容可以多到写一本书，甚至还有不同的流派存在。</p>\n<p><a href=\"https://www.zhihu.com/zvideo/1525828011673194496\">https://www.zhihu.com/zvideo/1525828011673194496</a></p>\n<p>但是最重要的原则我觉得很简单，那就是：<strong>先写测试，再写实现</strong>。</p>\n<p><a name=Em1cy></a></p>\n<h1>举个例子</h1>\n<p>最近又给一个开源项目提了一个 PR，再一次使用了 TDD 大法，正好可以做一个活生生的例子。这次是修一个 BUG，正好可以展示 TDDer 们是怎么修 BUG 的。<br /><a href=\"https://github.com/xingxingted/koa-to-express/pull/10\">https://github.com/xingxingted/koa-to-express/pull/10</a></p>\n<p><a name=mwlZa></a></p>\n<h2>别先修，而是先重现</h2>\n<p>发现了 BUG，千万不要直接修复！注意，直接修复 BUG 其实是在直接写实现代码，这就不是 TDD 了。发现了 BUG，先写个测试用例来重现它，这样当你修复并提交代码之后，cicd 就会运行这个测试用例，从而保证在后续的迭代中同样的 BUG 不会再次出现。</p>\n<p>在上一篇文章（<a href=\"https://zhuanlan.zhihu.com/p/542130945\">https://zhuanlan.zhihu.com/p/542130945</a>）中聊到，由于 Vercel 的函数计算，只默认支持 Express，我为了将自己的陈年老 Koa 项目在 Vercel 的函数计算里复活，就需要将它伪装成 Express，从而使用了一个开源库：  koa-to-express。这个库很好用，然而在某个场景下会报错。这个场景就是当引入了 Koa Router 时，如果请求一个不存在的路由，就会报 Internal Server Error。所以先写个用例来重现这个问题：</p>\n<p>在测试代码中创建一个 Koa 服务，并使用 koa-router 对一个路由（即 /health）做响应。在具体的测试用例里，故意去请求一个不存在的路由：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1658231543941-076f386c-b739-4ef0-9e72-385b6bee3443.png#clientId=ud7d9458e-a189-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=862&#x26;id=u540eac57&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1724&#x26;originWidth=2406&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=496420&#x26;status=done&#x26;style=none&#x26;taskId=u15f93362-30c6-41ca-99d9-f1733769e99&#x26;title=&#x26;width=1203\" alt=\"image.png\"></p>\n<p><a name=EGlTM></a></p>\n<h2>修复</h2>\n<p>可以看见，对于修复 BUG，其实主要代码往往在写测试用例上。因为最终的修复，就加了一行代码而已：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1658231640410-3c25ea32-96c9-4284-b3cd-38b088ce52b2.png#clientId=ud7d9458e-a189-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=342&#x26;id=u69720021&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=684&#x26;originWidth=1708&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=151057&#x26;status=done&#x26;style=none&#x26;taskId=u22db25d0-cf5d-48bd-baca-a47560a0ae2&#x26;title=&#x26;width=854\" alt=\"image.png\">\n<a name=Vbov5></a></p>\n<h2>提交 PR，等待作者回应</h2>\n<p>PR 提了几天 了，这个库的作者并没有回应。但是我已经先用起自己修改的版本了，技巧是修改 package.json 对于包的引用方式，详见上一篇文章。</p>\n<p><a name=zeqYd></a></p>\n<h1>其他例子： Skulpt</h1>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1658283287287-e1352c30-66b0-4c31-9ba0-b05f10030bfe.png#clientId=ud7d9458e-a189-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=411&#x26;id=u1db04e68&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=822&#x26;originWidth=1464&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=79650&#x26;status=done&#x26;style=none&#x26;taskId=u625819e1-4cb4-4c5b-bb7d-a6da1427970&#x26;title=&#x26;width=732\" alt=\"image.png\"><br />注意：使用 TDD 做开源贡献，并不保证一定能够得到维护者们的采纳。上面的例子，也还是在等待中，希望有好的结果。那为什么拿这个 PR 做例子呢？因为这是一个非常简单并又有代表性的例子，方便让人领会 TDD 修 BUG 的做法。除了这个，我再列举一个自己使用 TDD 做开源贡献并被成功采纳的例子，这是我特别自豪的一个贡献： Skulpt，它可以在浏览器中运行 python。但是我在使用时发现它的中文支持有问题，在进一步研究后，发现其实是所有的 unicode 字符都不能正常显示，于是做了改进的提交： <a href=\"https://github.com/skulpt/skulpt/pull/223/\">https://github.com/skulpt/skulpt/pull/223</a>，也可以看到，修复本身虽然改动很小，但是测试代码占了大头。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1658283125711-f101b179-5bbb-44bd-bcc0-f7bebe8e8ec7.png#clientId=ud7d9458e-a189-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=873&#x26;id=ubc2b611a&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1746&#x26;originWidth=2318&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=439123&#x26;status=done&#x26;style=none&#x26;taskId=ueb7a70b4-14aa-48b1-ba8a-c78da75c2f4&#x26;title=&#x26;width=1159\" alt=\"image.png\"></p>\n<p><a name=MtNtw></a></p>\n<h2>福利</h2>\n<p>Skulpt 的维护者们，不仅采纳了这个改动，还把我的名字放在了他们的官网 上，这让我感觉非常自豪。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1658283340575-997407ed-4c68-454d-9f19-d5d22bc9ab84.png#clientId=ud7d9458e-a189-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=499&#x26;id=u92cecf00&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=998&#x26;originWidth=1612&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=230258&#x26;status=done&#x26;style=none&#x26;taskId=ua124b4ac-bdc5-4dc5-b670-022a6f55c60&#x26;title=&#x26;width=806\" alt=\"image.png\"></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}