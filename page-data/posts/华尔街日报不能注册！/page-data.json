{"componentChunkName":"component---src-templates-post-js","path":"/posts/华尔街日报不能注册！/","result":{"data":{"sitePage":{"id":"SitePage /posts/华尔街日报不能注册！/"}},"pageContext":{"url":"/posts/华尔街日报不能注册！/","relativePath":"posts/华尔街日报不能注册！.md","relativeDir":"posts","base":"华尔街日报不能注册！.md","name":"华尔街日报不能注册！","frontmatter":{"title":"华尔街日报不能注册！","stackbit_url_path":"posts/华尔街日报不能注册！","date":"2011-12-10 01:40:31.4785605","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2011/12/10/华尔街日报不能注册！","template":"post"},"html":"<pre><code>    &#x3C;div style=\"border: solid 1px red; background-color: yellow; font-size: 150%; text-indent: 2em; color: black; padding: 10px; line-height: 1.5em;\">\n</code></pre>\n<p>注：本文专门分析了华尔街日报网不能够注册的<strong>技术原因</strong>。如果你对此技术原因不感兴趣，而只想找到一种便捷的方法，去阅读华尔街日报网中需要登录才能查看的文章的话，那么请看我的《<a target=\"_blank\" style=\"font-size: 120%; color: blue; text-decoration: underline;\" href=\"http://www.myfootprints.cn/blog/post/200.html\"><strong>不登录也可以阅读华尔街日报网文章</strong></a>》一文，该文给出了几种可选的方案，并且提供了一个非常简便的在线工具。</p>\n</div>\n<div style=\"text-indent: 2em; font-size: larger;\">\n<p>今天用Google搜索新闻，看到一条来自《华尔街日报》的新闻“<a target=\"_blank\" class=\"l\" style=\"color: rgb(85, 26, 139); \" href=\"http://chinese.wsj.com/gb/20100128/bch092804.asp\">中国赞赏<em style=\"color: rgb(204, 0, 51); font-style: normal; font-weight: normal; text-decoration: underline; \">盖茨</em>表态继续维护网络政策-华尔街日报</a>，进去后，华尔街日报网却说未登录不允许查看。于是就去注册，结果却无法提交注册信息，因为“出生年份格式不正确”，我尝试填写1985、1990、2010甚至不填，都无法通过它的表单验证。</p>\n<p>我后来看了它的表单验证代码，发现它对日期的验证是这样写的：</p>\n<pre style=\"text-indent: 0;\" class=\"brush: javascript\">if (!(vbo.match(/\\b\\d20100208T08:34:59\\b$/)) || theDate.getFullYear() - vbo &gt; 100 || theDate.getFullYear() - vbo &lt; 10) {\nalert (\"出生年份格式不正确，请更改。\");\nreturn false;\n}\n</pre>\n<p>其中，vbo是在出生年份中输入的内容，而 theDate 是当前的系统时间。它的意图是检查 vbo，除去前后的空白后应该是4个数字，而且年龄不应该小于10岁，不应该大于100岁。</p>\n<p>意图是对的，但是问题出在第一个使用正则表达式验证 vbo 是否是4个数字上了。我使用 <a href=\"http://www.myfootprints.cn/JavaScript/Default.asp\">JavaScript 练兵场</a> 试过，如果正则表达式使用 /\\d{4}$/，则能正确地验证输入（见：<a target=\"_blank\" title=\"点击这里运行\" href=\"http://www.myfootprints.cn/JavaScript/default.asp?s=var%20vbo%20%3D%20'1990'%3B%0Aalert(vbo.match(%2F%5Cd%7B4%7D%24%2F))%3B\">点击这里运行</a>）。而它使用了 /\\b\\d{4}\\b$/，则对 vbo 的测试结果永远返回 null，所以，不管你输入什么，都说你的格式不正确(见：<a target=\"_blank\" title=\"点击这里运行\" href=\"http://www.myfootprints.cn/JavaScript/default.asp?s=var%20vbo%20%3D%20'1990'%3B%0Aalert(vbo.match(%2F%5Cb%5Cd%7B4%7D%5Cb%24%2F))%3B\">点击这里运行</a>)。</p>\n<p><i>以上测试在Google Chrome和IE 7中进行。</i></p>\n<p>事实上，它的文本框中限制了输入长度只能为4个字符，故再对输入的内容进行去掉两边空白的处理是没有意义的了。希望他们尽管修改代码，否则永远不能够接受新用户的注册了。</p>\n<p>如果实在需要去掉两边的空白字符，也不要用/\\b\\d{4}\\b$/这样的方式，可以专门设计一个去掉字符串两边空白的方法来做这件事，如<a target=\"_blank\" href=\"http://www.myfootprints.cn/blog/post/SelfDefinedTrim.html\">给字符串自定义一个 trim() 方法</a>等。然后使用如下代码：</p>\n<pre class=\"brush: javascript\" style=\"text-indent: 0;\">vbo = vbo.trim();\nif (!(vbo.match(/\\d{4}$/)) || theDate.getFullYear() - vbo &gt; 100 || theDate.getFullYear() - vbo &lt; 10) {\nalert (\"出生年份格式不正确，请更改。\");\nreturn false;\n</pre>\n<p>如何自定义字符串类的trim()方法，可以参见文章：<a target=\"_blank\" href=\"http://www.myfootprints.cn/blog/post/SelfDefinedTrim.html\">自定义 String 对象的trim()方法</a></p>\n<p>华尔街日报的内容，对于未登录者不允许查看的方式，居然是通过JavaScript来控制的，如果你打开它的网页的速度稍微慢一点儿，你会看见，相关的内容它先是显示出来了的，然后很快被隐藏了。所以，实际上，你仍然可以不注册就阅读它的相关内容。因为内容其实已经到达浏览器了，你可以①通过浏览器设置禁用JavaScript；或者②通过查看源代码方式；或者③通过搜索引擎的缓存来看。因为它的内容是直接输出在了客户端的，所以搜索引擎是可以搜索到它的内容的。通过搜索引擎的缓存来看时，格式良好（不用看那些HTML标签），能直接查看图片（而不是源代码中的图片链接地址）。</p>\n</div>\n<p>&nbsp;</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","author":"@zizhujy","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}}}},"staticQueryHashes":[],"slicesMap":{}}