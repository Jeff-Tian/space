{"componentChunkName":"component---src-templates-post-js","path":"/posts/yl15qw","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/yl15qw","relativePath":"posts/yl15qw","frontmatter":{"title":"菜鸟大使：菜鸟和大佬的世界是割裂的（以及为什么 Keycloak 的文档或教程如此缺乏？）","stackbit_url_path":"posts/yl15qw","date":"2022-07-03T06:35:30","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p>不知不觉，写“哈德韦”专栏已经有一段时间了，最初只顾瞎写，偶然还能解决别人的问题，甚至还收到一 些付费咨询，这真的是意外的惊喜。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1655606759755-8cb997ce-2594-4b57-96c9-2822a3bd97ce.png#clientId=uff77b830-443e-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;id=u01aaf9c2&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1707&#x26;originWidth=960&#x26;originalType=url%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=347303&#x26;status=done&#x26;style=none&#x26;taskId=ua2906672-b0d3-4f8c-9adb-80d43d3517c&#x26;title=\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1655607121144-36c4b7d9-b745-44ff-8b66-1755e6108b14.png#clientId=uff77b830-443e-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=778&#x26;id=u976d7436&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=875&#x26;originWidth=1054&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=71305&#x26;status=done&#x26;style=none&#x26;taskId=u7aca8283-162b-495e-ac9c-03d98aba5c8&#x26;title=&#x26;width=936.8888888888889\" alt=\"image.png\"></p>\n<p>这时不禁萌生一个想法（幻想），好好推广自己的专栏，获得更多的咨询，甚至将来有一天靠这种咨询获得不错的收入，这样就能缓解我的程序员 35 岁危机焦虑了：即使被优化了，也不至于去送外卖：</p>\n<p>虽然，外卖员是一个令人尊敬的职业，但我真的只喜欢写代码。但是只写代码，到了一定年龄就会被优化。这个局，怎么破？于是尝试寻求大佬的指点，你猜怎么着？大佬说这是个伪命题呀，不存在 35 岁被优化呀，只存在没有竞争力被优化。因此，要破局当然是保持竞争力了。这说得很对，但没有什么用。对于有竞争力的大佬来说，自然不存在35岁危机，当然没有这个问题；但是对于菜鸟来说呢，自然不存在竞争力，于是才面临这个问题。</p>\n<p><a name=PkCNh></a></p>\n<h1>菜鸟的问题，在大佬的世界里根本不存在。</h1>\n<p><strong>总结下来就是： 菜鸟和大佬的世界是完全割裂的！菜鸟的问题，在大佬的世界里根本不存在。</strong></p>\n<p>本来写到这里，我就停了下来。原来自己本来是喜欢记录各种问题的解决方案的，突然发现，所有的这些问题，居然是“伪问题”，那记录解决方案，似乎突然没了意义！但是今天，老早写的一篇回答，又多了一个收藏，于是明白了一点，自己写的这些文字，还是有价值的，毕竟，这个世界上，还是菜鸟数量多。我本菜鸟一个，菜鸟的困境我感同身受，我觉得自己可以做一个菜鸟大使，去向大佬的世界取经，然后记录下以菜鸟的视角，为什么会有问题，以及该如何解决。以下就以这个被收藏的回答所针对的问题做一个例子来说明这一点：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656827974089-0e19946a-8c98-47ec-b0c0-fa6871012ca9.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0.0596&#x26;crop=1&#x26;crop=0.3574&#x26;from=paste&#x26;height=1040&#x26;id=u94e587e9&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=2079&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=375375&#x26;status=done&#x26;style=none&#x26;taskId=u67b44414-77a1-4708-b7de-5899b798508&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656827885991-a8998695-cbbd-4f7b-a6f6-2da5be6fa437.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0.1337&#x26;crop=1&#x26;crop=0.4401&#x26;from=paste&#x26;height=1040&#x26;id=u62d1a3d7&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=2079&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=310938&#x26;status=done&#x26;style=none&#x26;taskId=ue5e40f36-37ad-4bd7-9a5a-f20ee8d565e&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p>从去年开始，陆续接到一些关于 Keycloak 的咨询，这真的是意外的惊喜。惊喜完后，我开始推测持续收到 Keycloak 相关问题的咨询的原因，大概率就是 Keycloak 的文档非常地“不详细”，导致一般人难以上手。但是作为一款优秀的开源身份认证系统，会在文档上做工粗糙吗？这是一个矛盾。</p>\n<p>不仅有人抱怨它的文档和教程太少，而且有好几个向我咨询的网友，在问了具体的问题后，附带地问为什么找不到相关的文档。比如，最近两个咨询，都是关于 Keycloak 的 OIDC token 接口的：</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656828758677-acb45dd5-fadc-42f1-b312-42b3138e6300.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=842&#x26;id=uf27bee27&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1683&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=238357&#x26;status=done&#x26;style=none&#x26;taskId=u137f341e-af17-438e-9e53-d97f7029347&#x26;title=&#x26;width=480\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656828800878-2ded601b-2eef-4abe-9c42-634556c73bf3.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=839&#x26;id=uc525c868&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1677&#x26;originWidth=960&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=259618&#x26;status=done&#x26;style=none&#x26;taskId=ubf026279-0308-47e2-9f04-1519532e8aa&#x26;title=&#x26;width=480\" alt=\"image.png\"></p>\n<p>对于 Keycloak 提供的接口，其入参都有哪些？为什么不在文档里说明呢？这真是怪事，我虽然直接给出具体的参数说明，但是又以 Keycloak 的开发者角度想了想，为什么不写在文档里？让使用者产生不必要的困惑？</p>\n<p>估计是开发者在写文档时也在使用 DRY 原则吧：不要重复你自己。token 接口是 OIDC 标准里的，其入参也都是在该标准中明确过了，而我 Keycloak 只是该标准的一个具体实现而已，自然也是“继承”了 OIDC 协议中规定的入参要求的。</p>\n<p><a name=sTGX8></a></p>\n<h1>并不是 Keycloak 故意不将 token 接口的入参说明写在文档里，而是觉得“不应该”再重复地写进文档 。</h1>\n<p>这个现象似乎很普遍，我看了 OIDC 标准的其他实现，也是如此。比如 IdentityServer，你可以认为它是 ASP.NET 版本的 Keycloak（Keycloak 是 Java 写的），它也没有对其 token 接口做过多说明。所以：新手们困惑的文档不全问题，在老鸟看来，其实并不存在，只是新手们没找对地方。</p>\n<p>具体地说，OIDC token 接口入参在 OIDC 协议里做了详细地描述（还有示例请求），这些协议的实现者们便不再赘述。<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656829409613-60f47a4a-8216-4dfb-8ca9-1e010636f639.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=469&#x26;id=u8c7ad9bc&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=938&#x26;originWidth=3834&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=1298051&#x26;status=done&#x26;style=none&#x26;taskId=uf235474e-ed56-497f-969d-78b66025952&#x26;title=&#x26;width=1917\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1656829438955-c02da671-0533-4a3f-bebf-b0b5b4416eb4.png#clientId=uaa9a1bf8-f7f0-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=687&#x26;id=ubcc5127a&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1374&#x26;originWidth=3838&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=1168700&#x26;status=done&#x26;style=none&#x26;taskId=u559ad8fd-7a45-4340-8299-378d6acfdb8&#x26;title=&#x26;width=1919\" alt=\"image.png\"></p>\n<p><a name=Ss9Q2></a></p>\n<h1>OIDC 的通用接口</h1>\n<p>除了这个 token 接口，还有类似的接口说明文档“缺失”吗？当然，并不是真的缺失，但是 OIDC 协议里详细描述过的接口，都不会在相关的实现里出现得很详细了，这些接口可以统称为 OIDC 通用的接口，如果你要自行实现 OIDC 协议，自然得实现所有这些接口。这些接口列表可以通过实现者公开的 /.well-kown/openid-configuration 接口获得，比如我部署的 Keycloak 和 IdentityServer 实例都在这个路径下公开了所有的 OIDC 通用接口：</p>\n<ul>\n<li>Keycloak: <a href=\"https://keycloak.jiwai.win/auth/realms/UniHeart/.well-known/openid-configuration\">https://keycloak.jiwai.win/auth/realms/UniHeart/.well-known/openid-configuration</a></li>\n<li>IdentityServer: <a href=\"https://id6.azurewebsites.net/.well-known/openid-configuration\">https://id6.azurewebsites.net/.well-known/openid-configuration</a></li>\n</ul>\n<p>这些通用接口配置信息非常有用，比如之前写过一篇文章，详细描述了如何使用 IdentityServer 保护前端页面和后端 API。但是如果要换成使用 Keycloak 来保护它们，完全不用修改被保护的前端和后端应用的代码，只需要修改相应的 OIDC 通过接口的 url 即可。</p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}