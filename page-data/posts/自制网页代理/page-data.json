{"componentChunkName":"component---src-templates-post-js","path":"/posts/自制网页代理/","result":{"data":{"sitePage":{"id":"SitePage /posts/自制网页代理/"}},"pageContext":{"url":"/posts/自制网页代理/","relativePath":"posts/自制网页代理.md","relativeDir":"posts","base":"自制网页代理.md","name":"自制网页代理","frontmatter":{"title":"自制网页代理","stackbit_url_path":"posts/自制网页代理","date":"2010-03-05 05:39:24","excerpt":"","comments_count":0,"positive_reactions_count":0,"tags":[null],"canonical_url":"https://be-net.azurewebsites.net/post/2010/03/05/自制网页代理","template":"post"},"html":"<pre><code>    &#x3C;div style=\"text-indent: 2em; font-size: larger;\">\n</code></pre>\n<p>网页代理就是浏览器客户端与目的服务器端的一个中间者，本来浏览器直接向服务器请求文件，然后服务器将请求的文件内容直接传回浏览器端。增加了网页代理后，浏览器客户端先将要请求的文件信息发给代理，代理再将请求信息转发给目的服务器；目的服务器又将相应的响应内容发回给代理，代理再将此内容转发回浏览器客户端。</p>\n<p>这样有什么用？干嘛没事儿找事儿增加一个代理呢？</p>\n<p>至少有两个地方正在使用着它。</p>\n<p>一、RSS新闻聚合器。比如Google的阅读器（<a target=\"_blank\" href=\"http://www.google.com/reader\">http://www.google.com/reader</a>）。</p>\n<p>二、新闻采集程序或者说“小偷”程序。</p>\n<p>我在上篇文章《<a target=\"_blank\" href=\"http://www.myfootprints.cn/blog/post/200.html\">不登录也可以阅读华尔街日报网文章</a>》中，就使用了网页代理来查看华尔街日报网的那些好像不能够被查看的文章。它相当于是一个简单的新闻采集程序的雏形。那个网页代理的源码是：</p>\n<div style=\"text-indent: 0;\">\n<pre style=\"text-indent: 0;\" class=\"brush: vb\">&lt;%@LANGUAGE=\"VBSCRIPT\" CODEPAGE=\"65001\"%&gt;\n&lt;% Option Explicit %&gt;\n&lt;%Session.CodePage=65001%&gt;\n&lt;%\n    Response.CharSet = \"utf-8\"\n%&gt;\n&lt;%\n    Response.ContentType = \"text/html\"\n    Dim sRSSUrl, oHTTP, charset\n    sRSSUrl = Request.QueryString(\"url\")\n    charset = Request.QueryString(\"charset\")\n<pre><code>If Len(charset) &#x26;lt;= 0 Then\n    charset = \"utf-8\"\nEnd If\n\nIf Len(sRSSUrl) &#x26;gt; 0 Then\n\n    Set oHTTP = Server.CreateObject(\"Microsoft.XMLHTTP\")\n    oHTTP.Open \"GET\", sRSSURL, False\n    oHTTP.Send\n    \n    Response.Write Cbns2TextStream(oHTTP.ResponseBody, charset)\n    Set oHTTP = Nothing\nElse\n    Response.Write \"\"\nEnd If\n</code></pre>\n<p>%>\n&#x3C;%\n'\n' 将指定的二进制串转换成特定编码的文本\n'\nPublic Function Cbns2TextStream(ByRef bns, ByRef sCharset)\nDim stm</p>\n<pre><code>    Set stm = Server.CreateObject(\"ADODB.Stream\")\n    stm.Type = 2\n    stm.Open\n    stm.WriteText bns\n    stm.Position = 0\n    If Len(sCharset) &#x26;gt; 0 Then stm.Charset = sCharset\n    Cbns2TextStream = stm.ReadText\n    stm.Close\n    Set stm = Nothing\nEnd Function \n</code></pre>\n<p>%>\n</pre></p>\n</div>\n<p>它接受两个参数，一个网址，一个编码格式（若为空，则默认是utf-8）。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n<p>对于RSS新闻阅读器，本站的名人最新动态（<a href=\"http://www.myfootprints.cn/FamousBlog.asp\">http://www.myfootprints.cn/FamousBlog.asp</a>），也可看作是它的一个简单雏形。其中用到的代理源代码是：</p>\n<div style=\"text-indent: 0;\">\n<pre style=\"text-indent: 0;\" class=\"brush: vb\">&lt;%@LANGUAGE=\"VBSCRIPT\" CODEPAGE=\"65001\"%&gt;\n&lt;% Option Explicit %&gt;\n&lt;%Session.CodePage=65001%&gt;\n&lt;%\n    Response.CharSet = \"utf-8\"\n%&gt;\n&lt;%\n    Response.ContentType = \"text/xml\"\n    Dim sRSSUrl, oHTTP\n    sRSSUrl = Request.QueryString(\"rssurl\")\n<pre><code>If Len(sRSSUrl) &#x26;gt; 0 Then\n\n    Set oHTTP = Server.CreateObject(\"Microsoft.XMLHTTP\")\n    oHTTP.Open \"GET\", sRSSURL, False\n    oHTTP.Send\n    \n    Response.Write oHTTP.ResponseXML.XML\n    Set oHTTP = Nothing\nElse\n    Dim sXML\n    sXML = \"&#x3C;!--?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\"?-->\"\n    sXML = sXML &#x26;amp; \"&#x3C;rss version=\"\" 2.0\"\"=\"\" xmlns:dc=\"\" http:=\"\" purl.org=\"\" dc=\"\" elements=\"\" 1.1=\"\" \"\"=\"\">\"\n    sXML = sXML &#x26;amp; \"&#x3C;channel>\"\n    sXML = sXML &#x26;amp; \"&#x3C;title>没有指定RSS源&#x3C;/title>\"\n    sXML = sXML &#x26;amp; \"&#x3C;link>http://www.myfootprints.cn\"\n    sXML = sXML &#x26;amp; \"&#x3C;img>\"\n    sXML = sXML &#x26;amp; \"&#x3C;url>http://www.myfootprints.cn/images/logo.gif&#x3C;/url>\"\n    sXML = sXML &#x26;amp; \"&#x3C;title>没有指定RSS源&#x3C;/title>\"\n    sXML = sXML &#x26;amp; \"&#x3C;link>http://www.myfootprints.cn\"\n    sXML = sXML &#x26;amp; \"&#x3C;width>100&#x3C;/width>\"\n    sXML = sXML &#x26;amp; \"&#x3C;height>50&#x3C;/height>\"\n    sXML = sXMl &#x26;amp; \"\"\n    sXML = sXMl &#x26;amp; \"&#x3C;description>没有指定RSS源&#x3C;/description>\"\n    sXML = sXMl &#x26;amp; \"&#x3C;language>zh-cn&#x3C;/language>\"\n    sXML = sXML &#x26;amp; \"&#x3C;managingeditor>admin@myfootprints.cn&#x3C;/managingeditor>\"\n    sXML = sXML &#x26;amp; \"&#x3C;dc:publisher>我的涂鸦&#x3C;/dc:publisher>\"\n    sXML = sXMl &#x26;amp; \"&#x3C;copyright>Copyright 2009 我的涂鸦&#x3C;/copyright>\"\n    sXML = sXML &#x26;amp; \"&#x3C;item>\"\n    sXML = sXML &#x26;amp; \"&#x3C;title>没有指定RSS源&#x3C;/title>\"\n    sXML = sXML &#x26;amp; \"&#x3C;link>http://www.myfootprints.cn\"\n    sXML = sXML &#x26;amp; \"&#x3C;guid>http://www.myfootprints.cn/newsfeeder.asp&#x3C;/guid>\"\n    sXML = sXML &#x26;amp; \"&#x3C;author>Jeff Tian &#x26;lt;admin@myfootprints.cn&#x26;gt;&#x3C;/author>\"\n    sXML = sXML &#x26;amp; \"&#x3C;dc:date>2009-11-15T21:07:00-21:20&#x3C;/dc:date>\"\n    sXML = sXML &#x26;amp; \"&#x3C;/item>\"\n    sXML = sXML &#x26;amp; \"&#x3C;/channel>\"\n    sXML = sXML &#x26;amp; \"&#x3C;/rss>\"\n    Response.Write sXML\nEnd If\n</code></pre>\n<p>%>\n</pre></p>\n</div>\n</div>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}