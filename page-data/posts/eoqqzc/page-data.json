{"componentChunkName":"component---src-templates-post-js","path":"/posts/eoqqzc","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/eoqqzc","relativePath":"posts/eoqqzc","frontmatter":{"title":"Coding.Net + 阿里云 npm 模块仓库 自动化发包","stackbit_url_path":"posts/eoqqzc","date":"2019-11-02T09:47:00","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p>让一切自动化，干掉所有人肉操作。对于 npm 包的作者来说，利用 semantic-release 就能解放双手，只需要提交代码，让发包自动进行。<br />如果代码托管在 GitHub 上，而且 npm 包最后是要发布到官方仓库里的话，那么可以配合 TravisCI 来完成。这样就非常简单，只需要运行一下：\nbash\nsemantic-release-cli setup</p>\n<p>就能自动完成相关的配置（GitHub 和 TravisCI 的 token 创建等等），而你只需要在项目里添加一个 .travis.yml 文件即可。具体实例可见：<a href=\"https://github.com/Jeff-Tian/wechat-oauth-ts\">https://github.com/Jeff-Tian/wechat-oauth-ts</a></p>\n<p>但是对于其他代码托管服务，或者是将包发布到自己的模块仓库，就没这么方便了。不过虽然用不了 semantic-release-cli ，但是 semantic-release 本身还是可以用的。<br />这里给一个具体的例子，代码托管在 Coding.Net 上，模块仓库在阿里云，利用 Jenkinsfile 来完成自动化。\n<a name=q1klK></a></p>\n<h2>在 package.json 里添加 semantic-release 相关依赖</h2>\n<p>json\n{\n...\ndevDependencies: {\n...\n@semantic-release/npm: ^5.3.1,\nsemantic-release: ^15.13.28\n}\n...\n}</p>\n<p><a name=Aalmy></a></p>\n<h2>在项目中添加 .releaserc </h2>\n<p>json\n{\nbranch: master,\nrepositoryUrl: <a href=\"mailto:git@e.coding.net\">git@e.coding.net</a>:xxx/yyy.git,\nplugins: [\n[@semantic-release/npm, {\nnpmPublish: true\n}]\n]\n}</p>\n<p><a name=z7f5L></a></p>\n<h2>在项目中创建 Jenkinsfile</h2>\n<p>groovy\npipeline {\nagent any\nstages  {</p>\n<pre><code>    stage(检出) {\n        steps {\n            checkout(\n                [$class: GitSCM, branches: [[name: env.GIT_BUILD_REF]],\n                userRemoteConfigs: [[url: env.GIT_REPO_URL, credentialsId: env.CREDENTIALS_ID]]]\n            )\n        }\n    }\n\n    stage(安装) {\n        steps {\n            echo 构建中...\n            sh docker version\n            sh npm i\n            sh npm rebuild\n            echo 构建完成.\n        }\n    }\n\n    stage(测试) {\n        steps {\n            echo 单元测试中...\n            // 请在这里放置您项目代码的单元测试调用过程，例如:\n            // sh mvn test // mvn 示例\n            // sh make test // make 示例\n            sh npm test\n            echo 单元测试完成.\n        }\n    }\n\n    stage(发包) {\n        steps {\n            sh echo registry=https://registry-node.aliyun.com/org/xxx/registry/yyy/ >> .npmrc\n            sh echo //registry-node.aliyun.com/org/xxx/registry/yyy/:_password=${npm_password} >> .npmrc\n            sh echo //registry-node.aliyun.com/org/xxx/registry/yyy/:username=${npm_username} >> .npmrc\n            sh echo //registry-node.aliyun.com/org/xxx/registry/yyy/:email=${npm_email} >> .npmrc\n            sh echo //registry-node.aliyun.com/org/xxx/registry/yyy/:always-auth=false >> .npmrc\n            sh echo grpc_node_binary_host_mirror=https://npm.taobao.org/mirrors >> .npmrc\n            sh NODE_ENV=production npm run build\n            sh npx semantic-release --debug --no-dry-run --no-ci --unsafe-perm\n        }\n    }\n}\nenvironment {\n    GIT_CREDENTIALS = your-coding-user-name:${coding_token}\n    NPM_CONFIG_REGISTRY = https://registry-node.aliyun.com/org/xxx/registry/yyy/\n}\n</code></pre>\n<p>}</p>\n<p><a name=fNUAB></a></p>\n<h2>创建 Coding.Net 访问令牌</h2>\n<p>这是用来让 Jenkinsfile 读取代码用的，后面会通过环境变量形式注入到 Jenksinfile：<br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687439407-f9fb1bbd-cef9-491c-ade4-e178c7f4f989.png#align=left&#x26;display=inline&#x26;height=454&#x26;name=image.png&#x26;originHeight=454&#x26;originWidth=1405&#x26;size=73547&#x26;status=done&#x26;width=1405\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687503404-3999556f-ca3e-4948-8192-afb46de6298d.png#align=left&#x26;display=inline&#x26;height=739&#x26;name=image.png&#x26;originHeight=739&#x26;originWidth=982&#x26;size=119454&#x26;status=done&#x26;width=982\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687576248-b4f38a02-7bea-4fa1-9d3e-9e00e6a5ecc4.png#align=left&#x26;display=inline&#x26;height=317&#x26;name=image.png&#x26;originHeight=317&#x26;originWidth=1010&#x26;size=38903&#x26;status=done&#x26;width=1010\" alt=\"image.png\"><br />将访问令牌复制下来。一旦你关闭这个页面就再也看不到明文令牌了，如果你没有及时复制就关闭了，可以重新再创建一个。\n<a name=l0O0V></a></p>\n<h2>配置 Coding.Net 持续集成 Jobs</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572686929793-d24761b6-0877-4777-b513-1841b3495c12.png#align=left&#x26;display=inline&#x26;height=649&#x26;name=image.png&#x26;originHeight=649&#x26;originWidth=1304&#x26;size=111455&#x26;status=done&#x26;width=1304\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572686986748-42d0c8d3-0390-44ff-b061-943960070b04.png#align=left&#x26;display=inline&#x26;height=777&#x26;name=image.png&#x26;originHeight=777&#x26;originWidth=674&#x26;size=90166&#x26;status=done&#x26;width=674\" alt=\"image.png\"><br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687174070-dfa8a5ef-69be-4a00-9845-e5d294e6e443.png#align=left&#x26;display=inline&#x26;height=753&#x26;name=image.png&#x26;originHeight=753&#x26;originWidth=1098&#x26;size=151924&#x26;status=done&#x26;width=1098\" alt=\"image.png\"><br />注意，在最后一步需要用相关的环境变量形式把阿里 npm 模块仓库的认证信息填写上去：<br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687679938-b9b9be3a-a0f1-4407-b550-5b4c3c593847.png#align=left&#x26;display=inline&#x26;height=633&#x26;name=image.png&#x26;originHeight=633&#x26;originWidth=767&#x26;size=78493&#x26;status=done&#x26;width=767\" alt=\"image.png\">\n<a name=Bf1XI></a></p>\n<h2>配置完成，手动触发第一次构建吧：</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687751922-783f16b8-a48c-4d68-8f8f-11894bd5b097.png#align=left&#x26;display=inline&#x26;height=216&#x26;name=image.png&#x26;originHeight=216&#x26;originWidth=1048&#x26;size=13349&#x26;status=done&#x26;width=1048\" alt=\"image.png\"><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687808005-084619d4-6d2c-4ebb-995b-4e24fe313fdf.png#align=left&#x26;display=inline&#x26;height=445&#x26;name=image.png&#x26;originHeight=445&#x26;originWidth=571&#x26;size=23110&#x26;status=done&#x26;width=571\" alt=\"image.png\">\n<a name=JH48Z></a></p>\n<h2>后续自动发布</h2>\n<p>只要代码提交，都会触发一次构建。但是会不会发布新的版本，就看提交历史是怎么写的了：<br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572687928708-8e2e43c1-f4fe-4c6a-9091-edcb90af0944.png#align=left&#x26;display=inline&#x26;height=571&#x26;name=image.png&#x26;originHeight=571&#x26;originWidth=1294&#x26;size=95624&#x26;status=done&#x26;width=1294\" alt=\"image.png\"><br />如果有新的版本发布成功，就会自动同步一个版本号到代码版本的标签栏中：<br /><img src=\"https://cdn.nlark.com/yuque/0/2019/png/221736/1572688002959-5441d639-dd18-4fa1-ab13-0c302b5004e0.png#align=left&#x26;display=inline&#x26;height=633&#x26;name=image.png&#x26;originHeight=633&#x26;originWidth=1529&#x26;size=140716&#x26;status=done&#x26;width=1529\" alt=\"image.png\"></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"Full Stack Developer, good at OAuth 2.0","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"本站源码","url":"https://github.com/Jeff-Tian/space","style":"link","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}