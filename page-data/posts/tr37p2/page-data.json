{"componentChunkName":"component---src-templates-post-js","path":"/posts/tr37p2","result":{"data":{"sitePage":null},"pageContext":{"url":"posts/tr37p2","relativePath":"posts/tr37p2","frontmatter":{"title":"BFF 进化","stackbit_url_path":"posts/tr37p2","date":"2022-10-08T10:34:07","excerpt":"","tags":[],"categories":[],"template":"post"},"html":"<p><a name=ItdVg></a></p>\n<h1><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665223122053-6610d5bd-7d92-4c4f-ba6a-736f65d6f383.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=ui&#x26;id=u85fee1b1&#x26;margin=%5Bobject%20Object%5D&#x26;name=WX20221008-141040%402x.png&#x26;originHeight=1158&#x26;originWidth=2378&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=118057&#x26;status=done&#x26;style=none&#x26;taskId=uf28c984e-6eaa-4c0c-b4ee-bb75ca31d61&#x26;title=\" alt=\"WX20221008-141040@2x.png\"></h1>\n<p><a name=dbIyG></a></p>\n<h1>Naive BFF</h1>\n<p>在《<a href=\"https://zhuanlan.zhihu.com/p/442433967\">https://zhuanlan.zhihu.com/p/442433967</a>》一文里，以 BFF 为中心，简要地回顾了一下自己做的项目。从 2018 年开始，就一直和 BFF 打交道，但是看来一直在 Naive BFF 的级别上折腾。</p>\n<p>Naive BFF 是我杜撰的词，意味着只做后端服务的聚合与裁剪的“转发式” BFF。但即使是这种 Naive BFF，也还没有做到很纯粹，即仍然有 BFF 缺失的场景，如下图所示：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665223256872-d0ec4320-3f00-469a-8527-658f197c69fe.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;id=u06c20cc5&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1298&#x26;originWidth=1440&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=489457&#x26;status=done&#x26;style=none&#x26;taskId=u39d5a4f8-58d7-48ac-8372-baccac785d1&#x26;title=\" alt=\"image.png\"></p>\n<p><a name=bLbew></a></p>\n<h1>TMI BFF</h1>\n<p>BFF 是为前端专做的后端，理论上前端要使用的所有能力都应该由 BFF 来转发，当然也包括用户认证与授权部分。然而，可能由于 OAuth 2.0 的流行，以及其提供的隐式授权授权模型以及对公开客户端的支持，特别方便于前端直接和授权服务器交流，所以导致前端直接对接了授权服务（未经 BFF 中转请求）。在《<a href=\"https://zhuanlan.zhihu.com/p/533197284\">https://zhuanlan.zhihu.com/p/533197284</a>》一文中，以一个 antd 前端为例，详解了如何对接 IdentityServer，从而保护需要用户信息的路由（页面）。在这个例子中，就是使用了纯前端的插件 umi-plugin-oauth2，来直接和 IdentityServer 来交流，以获取用户 token、身份信息等等。</p>\n<p>这样虽然完全可以工作，但毕竟非常不安全，所以有一个 BFF 标准正在被提出，即 TMI BFF。详细文档见： <a href=\"https://datatracker.ietf.org/doc/html/draft-bertocci-oauth2-tmi-bff-00\">https://datatracker.ietf.org/doc/html/draft-bertocci-oauth2-tmi-bff-00</a>。这个标准用 BFF 将前端和授权服务器隔开，代为获取令牌。但是仍然要求前端自行保存令牌，并且后续直接和资源服务直接交流。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665224124709-fb3f0101-875e-4091-8b00-f6482c5af8a7.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;id=uc990d15f&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1641&#x26;originWidth=995&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=217373&#x26;status=done&#x26;style=none&#x26;taskId=u74b4d0fb-5098-4c9d-9a71-f07c5b53a05&#x26;title=\" alt=\"image.png\">\n<a name=PNriD></a></p>\n<h1>Full BFF</h1>\n<p>完整的 BFF 应该将对资源服务的请求也接管过来，前端接触不到令牌，也不会保存在客户端的任何地方。其实，<strong>这才回归了 BFF 架构的初心</strong>，即一个前端，一个后端。再后面的服务，对前端是透明的，由这个 BFF 后端统一承接。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665224412222-0cc32c1e-e380-4f9a-b14b-21fe6e2ad84e.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=ui&#x26;id=u4eb608db&#x26;margin=%5Bobject%20Object%5D&#x26;name=WX20221008-154538.png&#x26;originHeight=842&#x26;originWidth=943&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=77885&#x26;status=done&#x26;style=none&#x26;taskId=u9b94980c-a4f3-493a-a2af-d2473ff2919&#x26;title=\" alt=\"WX20221008-154538.png\"></p>\n<p>那么，前端没有任何令牌信息的情况下，如何实现登录状态呢？其实仍然是 Cookie，即回归到了 Token + Session 的管理模式，而不再是单一 Token 模式。单一 Token 模式容易千万覆水难收的情况，比如 Keycloak 的单一退出接口，就没有很方便的办法让已颁发的 Token 失效。详细讨论见： <a href=\"https://www.zhihu.com/consult/conversation/1557672350673453056/archive?showIWantConsult=1&#x26;showFixedBtn=1\">https://www.zhihu.com/consult/conversation/1557672350673453056/archive?showIWantConsult=1&#x26;showFixedBtn=1</a>。</p>\n<p>不过，这个 Cookie 是 HttpOnly + Secure + SameSite Strict，从而规避了从客户端窃取登录信息的风险。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665224949301-d72ec33f-3368-4530-9be0-1f03b8193f5a.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=ui&#x26;id=u1ce79ced&#x26;margin=%5Bobject%20Object%5D&#x26;name=WX20221008-134513%402x.png&#x26;originHeight=1212&#x26;originWidth=2304&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=373019&#x26;status=done&#x26;style=none&#x26;taskId=u2d3c7e1a-49b2-430a-b795-cb80cfafb3e&#x26;title=\" alt=\"WX20221008-134513@2x.png\"></p>\n<p>Full BFF 应该有如上图的组成部分，当然它不限制开发语言，但上图带上了 ASP.NET Core，是因为主讲者是 Duende IdentityServer 的联合创始人，而 IdentityServer 是一个基于 ASP.NET Core 的认证授权中间件。</p>\n<p>之前写过《<a href=\"https://zhuanlan.zhihu.com/p/486268896\">https://zhuanlan.zhihu.com/p/486268896</a>》讨论 IdentityServer 的卖点，其中之一是它宣称高安全性，看来此言不虚。它为 Full BFF 提供了很好的脚手架，看到 Full BFF 的组成部分不用担心，除了具体的 Endpoints，其他的不用从 0 开发。</p>\n<p><a name=eVH7O></a></p>\n<h1>总结</h1>\n<p>用一张图总结吧：<br /><img src=\"https://cdn.nlark.com/yuque/0/2022/png/221736/1665225229856-97c0cf89-5e19-4ee6-b289-ab2a0123bf23.png#clientId=u791a4248-66ea-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=ui&#x26;id=u766e8ec7&#x26;margin=%5Bobject%20Object%5D&#x26;name=WX20221008-141040%402x.png&#x26;originHeight=1158&#x26;originWidth=2378&#x26;originalType=binary%E2%88%B6=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=118057&#x26;status=done&#x26;style=none&#x26;taskId=u9136b529-4012-4060-abc7-067faa6ee8a&#x26;title=\" alt=\"WX20221008-141040@2x.png\"></p>","pages":[],"site":{"siteMetadata":{"title":"Jeff Tian","description":"A wild full stack developer","palette":"yellow","header":{"title":"Jeff Tian","tagline":"A wild developer","logo_img":"https://images.ctfassets.net/qixg1o8tujmf/7z1ua3nTOC5B7DwwzAki8I/4e1a05f8db770c285a492eeb1eaa398f/imageedit_3_2509022194.png","background_img":"https://images.ctfassets.net/qixg1o8tujmf/7m0jrKYaDBwEvlc5lo8nt6/6d50a5050d9cdc0d4d2047e35feac292/10648733_696750647079056_2800539603462658695_o.jpg","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","type":"action"},{"label":"About","url":"/about","style":"link","type":"action"},{"label":"关于","url":"https://ggyy.pa-pa.me/about","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"},{"label":"Contact","url":"/contact","style":"link","type":"action"},{"label":"Support Me","url":"/support-me","style":"link","type":"action"},{"label":"叽叽歪歪","url":"https://ggyy.pa-pa.me/","style":"link","icon_class":"lorem-ipsum","new_window":true,"type":"action"}],"has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/zizhujy","style":"icon","icon_class":"fa-twitter","new_window":true,"type":"action"},{"label":"Instagram","url":"https://www.instagram.com/jefftian5","style":"icon","icon_class":"fa-instagram","new_window":true,"type":"action"},{"label":"GitHub","url":"https://github.com/jeff-tian","style":"icon","icon_class":"fa-github","new_window":true,"type":"action"},{"label":"LinkedIn","url":"https://www.linkedin.com/jeff~tian","style":"icon","icon_class":"fa-linkedin","new_window":true,"type":"action"},{"label":"DEV","url":"https://dev.to/jefftian","style":"icon","icon_class":"fa-dev","new_window":true,"type":"action"},{"label":"知乎","url":"https://www.zhihu.com/people/jefftian","style":"icon","icon_class":"fa-zhihu","new_window":true,"type":"action"}],"type":"header"},"footer":{"content":"&copy; All rights reserved.","links":[{"label":"Made with Stackbit.","url":"https://www.stackbit.com","style":"link","new_window":true,"type":"action"},{"label":"紫竹叽歪","url":"https://zizhujy.apphb.com","style":"link","icon_class":"http://zizhujy.apphb.com/Content/Images/logo.png","new_window":true,"type":"action"}],"type":"footer"}},"pathPrefix":"","data":{"data":{"author":{"name":"Jeff Tian","avatar":"https://res.cloudinary.com/practicaldev/image/fetch/s--a5qDZLv3--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/318420/3bfd2d99-430c-4049-8dd5-e2adc961e1e0.png"},"social":{"devto":{"username":"jefftian"},"twitter":{"username":"zizhujy"},"github":{"username":"Jeff-Tian"}}}}},"menus":{}}},"staticQueryHashes":[]}