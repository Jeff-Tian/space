{"version":3,"file":"component---src-templates-post-js-2c4a2ac6ac72d3ddebcf.js","mappings":"krEAaO,IAQcA,EAAI,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,O,4FAAAK,CAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAgDtB,O,EAhDsBP,G,EAAA,EAAAQ,IAAA,SAAAC,MACvB,WACE,OACIC,EAAAA,cAACC,EAAAA,GAAWC,KAAKC,OAEX,IADFC,IAAMF,KAAKC,MAAO,sCAAuC,MAEnDH,EAAAA,cAACK,EAAAA,EAAcH,KAAKC,OAExBH,EAAAA,cAACM,EAAAA,EAAMC,EAAA,GAAKL,KAAKC,MAAK,CAAEK,KAAMN,KAAKC,MAAMM,YAAYD,KAC7CE,KAAMR,KAAKC,MAAMM,YAAaE,MAAOP,IAAMF,KAAKC,MACpD,2CAA4C,SAEpDH,EAAAA,cAAA,OAAKY,GAAG,UAAUC,UAAU,gBAC1Bb,EAAAA,cAAA,QAAMY,GAAG,OAAOC,UAAU,mBACxBb,EAAAA,cAAA,WAASa,UAAU,kBACjBb,EAAAA,cAAA,UAAQa,UAAU,eAChBb,EAAAA,cAAA,MAAIa,UAAU,cAAcT,IAAMF,KAAKC,MACnC,gCAAiC,OACrCH,EAAAA,cAAA,OAAKa,UAAU,aAAW,gBACXb,EAAAA,cAAA,QAAMa,UAAU,YACVC,SAAUC,IAAOX,IAAMF,KAAKC,MACxB,+BACA,OACCa,SAAS,mBAAoBD,IACnDX,IAAMF,KAAKC,MAAO,+BAAgC,OACjDa,SAAS,gBAGfZ,IAAMF,KAAKC,MAAO,mCAAoC,OAEnDH,EAAAA,cAAA,OAAKa,UAAU,kBACZI,EAAAA,EAAAA,IACGb,IAAMF,KAAKC,MAAO,mCACd,QAGdH,EAAAA,cAAA,OAAKa,UAAU,gBAEbb,EAAAA,cAAA,OAAKkB,wBAAyB,CAC5BC,OAAQf,IAAMF,KAAKC,MAAO,mBAAoB,YAKtDH,EAAAA,cAACoB,EAAAA,EAAWlB,KAAKC,QAI3B,M,8EAACb,CAAA,CAhDsB,CAASU,EAAAA,U,kCCrBlC,WACE,IAAIe,EAAQM,EAGVN,EAAS,EAAQ,KAKnBM,EAAe,CACb,EAAK,MACL,EAAK,OACL,EAAK,MACL,EAAK,OACL,EAAK,MACL,EAAK,KACL,KAAM,IACN,EAAK,IACL,EAAK,aACL,EAAK,KACL,KAAM,IACN,EAAK,KACL,KAAM,IACN,EAAK,OACL,KAAM,MACN,EAAK,IACL,EAAK,IACL,EAAK,KACL,KAAM,IACN,EAAK,KACL,KAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,KACL,KAAM,IACN,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,KACL,EAAK,MACL,EAAK,KACL,EAAK,OACL,EAAK,KACL,EAAK,IACL,EAAK,MACL,IAAK,KAGPN,EAAOO,GAAGN,SAAW,SAAUO,GAC7B,IAAIC,EAaJ,OATAA,EADSD,EAAOE,MAAM,WACAC,KAAI,SAAUC,GAElC,MAAiB,MAAbA,EAAM,IAAcN,EAAaO,eAAeD,EAAME,OAAO,IACxDR,EAAaM,EAAME,OAAO,IAG5BF,EAAMG,OAAS,EAAI,IAAMH,EAAQ,IAAMA,CAChD,IAAGI,KAAK,IAED7B,KAAKqB,OAAOC,EACrB,EAEgD,OAAXQ,EACnCA,EAAOC,QAAUlB,EAEjBb,KAAKa,OAASA,CAEjB,EAAEmB,KAAKhC,K","sources":["webpack://@jeff-tian/space/./src/templates/post.js","webpack://@jeff-tian/space/./node_modules/moment-strftime/lib/moment-strftime.js"],"sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport moment from 'moment-strftime'\nimport {graphql} from 'gatsby'\n\nimport {Layout} from '../components/index'\nimport HeaderAlt from '../components/HeaderAlt'\nimport Header from '../components/Header'\nimport {htmlToReact} from '../utils'\nimport Footer from '../components/Footer'\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`\n\nexport default class Post extends React.Component {\n  render() {\n    return (\n        <Layout {...this.props}>\n          {(_.get(this.props, 'pageContext.frontmatter.hide_header', null) ===\n              true) ? (\n                  <HeaderAlt {...this.props} />\n              ) :\n              <Header {...this.props} site={this.props.pageContext.site}\n                      page={this.props.pageContext} image={_.get(this.props,\n                  'pageContext.frontmatter.content_img_path', null)}/>\n          }\n          <div id=\"content\" className=\"site-content\">\n            <main id=\"main\" className=\"site-main inner\">\n              <article className=\"post post-full\">\n                <header className=\"post-header\">\n                  <h1 className=\"post-title\">{_.get(this.props,\n                      'pageContext.frontmatter.title', null)}</h1>\n                  <div className=\"post-meta\">\n                    Published on <time className=\"published\"\n                                       dateTime={moment(_.get(this.props,\n                                           'pageContext.frontmatter.date',\n                                           null))\n                                           .strftime('%Y-%m-%d %H:%M')}>{moment(\n                      _.get(this.props, 'pageContext.frontmatter.date', null))\n                      .strftime('%B %d, %Y')}</time>\n                  </div>\n                </header>\n                {_.get(this.props, 'pageContext.frontmatter.subtitle', null) &&\n                (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(\n                          _.get(this.props, 'pageContext.frontmatter.subtitle',\n                              null))}\n                    </div>\n                )}\n                <div className=\"post-content\">\n                  {/*{htmlToReact(_.get(this.props, 'pageContext.html', null))}*/}\n                  <div dangerouslySetInnerHTML={{\n                    __html: _.get(this.props, 'pageContext.html', null),\n                  }}/>\n                </div>\n              </article>\n            </main>\n            <Footer {...this.props} />\n          </div>\n        </Layout>\n    )\n  }\n}\n\nexport {Head} from \"../components/Layout\";","(function () {\n  var moment, replacements;\n\n  if (typeof require === \"function\") {\n    moment = require('moment');\n  } else {\n    moment = this.moment;\n  }\n\n  replacements = {\n    'a': 'ddd',\n    'A': 'dddd',\n    'b': 'MMM',\n    'B': 'MMMM',\n    'c': 'lll',\n    'd': 'DD',\n    '-d': 'D',\n    'e': 'D',\n    'F': 'YYYY-MM-DD',\n    'H': 'HH',\n    '-H': 'H',\n    'I': 'hh',\n    '-I': 'h',\n    'j': 'DDDD',\n    '-j': 'DDD',\n    'k': 'H',\n    'l': 'h',\n    'm': 'MM',\n    '-m': 'M',\n    'M': 'mm',\n    '-M': 'm',\n    'p': 'A',\n    'P': 'a',\n    'S': 'ss',\n    '-S': 's',\n    'u': 'E',\n    'w': 'd',\n    'W': 'WW',\n    'x': 'll',\n    'X': 'LTS',\n    'y': 'YY',\n    'Y': 'YYYY',\n    'z': 'ZZ',\n    'Z': 'z',\n    'f': 'SSS',\n    '%': '%'\n  };\n\n  moment.fn.strftime = function (format) {\n    var momentFormat, tokens;\n\n    // Break up format string based on strftime tokens\n    tokens = format.split(/(%\\-?.)/);\n    momentFormat = tokens.map(function (token) {\n      // Replace strftime tokens with moment formats\n      if (token[0] === '%' && replacements.hasOwnProperty(token.substr(1))) {\n        return replacements[token.substr(1)];\n      }\n      // Escape non-token strings to avoid accidental formatting\n      return token.length > 0 ? '[' + token + ']' : token;\n    }).join('');\n\n    return this.format(momentFormat);\n  };\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = moment;\n  } else {\n    this.moment = moment;\n  }\n}).call(this);\n"],"names":["Post","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","React","Layout","this","props","_get","HeaderAlt","Header","_extends","site","pageContext","page","image","id","className","dateTime","moment","strftime","htmlToReact","dangerouslySetInnerHTML","__html","Footer","replacements","fn","format","momentFormat","split","map","token","hasOwnProperty","substr","length","join","module","exports","call"],"sourceRoot":""}