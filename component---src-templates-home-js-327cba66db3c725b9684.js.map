{"version":3,"file":"component---src-templates-home-js-327cba66db3c725b9684.js","mappings":"83DAWO,IAQcA,EAAAA,SAAAA,I,qRAAAA,CAAAA,EAAAA,GAAAA,I,MAAAA,EAAAA,EAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgDhB,O,EAhDgBA,G,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACjB,WAAU,IAAD,OACCC,EAAQC,KAAKC,MAAMC,YAAYH,MAErC,OACI,gBAAC,KAAWC,KAAKC,MACb,gBAAC,IAAD,KAAYD,KAAKC,MAAjB,CAAwBE,KAAMH,KAAKC,MAAMC,YAAYC,KAAMC,KAAMJ,KAAKC,MAAMC,YACpEG,MAAO,IAAML,KAAKC,MAAO,sDAAuD,SACxF,uBAAKK,GAAG,UAAUC,UAAU,gBACxB,wBAAMD,GAAG,OAAOC,UAAU,mBACtB,uBAAKA,UAAU,aACV,IAAMR,GAAO,SAACS,EAAMC,GAAP,OACV,2BAASC,IAAKD,EAAUF,UAAU,QAC9B,0BAAQA,UAAU,eACd,sBAAIA,UAAU,cAAa,gBAAC,KAAD,CAAMI,IAAIC,EAAAA,EAAAA,IAAW,IAAMJ,EAAM,MAAO,OAClCK,IAAI,YAAY,IAAML,EAAM,oBAAqB,QAElF,uBAAKD,UAAU,aAAf,gBACiB,wBAAMA,UAAU,YACVO,SAAUC,GAAAA,CAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,mBAAoBD,GAAAA,CAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,gBAGtK,IAAMR,EAAM,6BAA8B,OACvC,gBAAC,KAAD,CAAMD,UAAU,iBAAiBI,IAAIC,EAAAA,EAAAA,IAAW,IAAMJ,EAAM,MAAO,QAC/D,uBAAKD,UAAU,YACVU,KAAKL,EAAAA,EAAAA,IAAW,IAAMJ,EAAM,6BAA8B,OAC1DU,IAAK,IAAMV,EAAM,oBAAqB,SAGnD,uBAAKD,UAAU,gBACX,yBAAI,IAAMC,EAAM,sBAAuB,SAE6B,IAArE,IAAM,EAAKP,MAAO,wCAAyC,OAAmB,IAAM,EAAKA,MAAO,yCAA0C,OACzI,qBAAGM,UAAU,aACT,gBAAC,KAAD,CAAMA,UAAU,iBACVI,IAAIC,EAAAA,EAAAA,IAAW,IAAMJ,EAAM,MAAO,QAAS,IAAM,EAAKP,MAAO,yCAA0C,MACzG,wBAAMM,UAAU,mBAAmB,cAAY,iBAO3E,gBAAC,IAAD,KAAYP,KAAKC,MAAjB,CAAwBE,KAAMH,KAAKC,MAAMC,YAAYC,KAAMC,KAAMJ,KAAKC,MAAMC,YACpEG,MAAO,IAAML,KAAKC,MAAO,sDAAuD,gB,8EAIvG,EAhDgBH,CAAaqB,EAAAA","sources":["webpack://@jeff-tian/space/./src/templates/home.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport {graphql} from 'gatsby';\nimport Header from '../components/Header';\nimport {Link, withPrefix} from '../utils';\nimport Footer from '../components/Footer';\nimport {Layout} from \"../components\";\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Home extends React.Component {\n    render() {\n        const pages = this.props.pageContext.pages;\n\n        return (\n            <Layout {...this.props}>\n                <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext}\n                        image={_.get(this.props, 'pageContext.site.siteMetadata.header.background_img', null)}/>\n                <div id=\"content\" className=\"site-content\">\n                    <main id=\"main\" className=\"site-main inner\">\n                        <div className=\"post-feed\">\n                            {_.map(pages, (post, post_idx) => (\n                                <article key={post_idx} className=\"post\">\n                                    <header className=\"post-header\">\n                                        <h2 className=\"post-title\"><Link to={withPrefix(_.get(post, 'url', null))}\n                                                                         rel=\"bookmark\">{_.get(post, 'frontmatter.title', null)}</Link>\n                                        </h2>\n                                        <div className=\"post-meta\">\n                                            Published on <time className=\"published\"\n                                                               dateTime={moment(_.get(post, 'frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(post, 'frontmatter.date', null)).strftime('%B %d, %Y')}</time>\n                                        </div>\n                                    </header>\n                                    {_.get(post, 'frontmatter.thumb_img_path', null) && (\n                                        <Link className=\"post-thumbnail\" to={withPrefix(_.get(post, 'url', null))}>\n                                            <img className=\"thumbnail\"\n                                                 src={withPrefix(_.get(post, 'frontmatter.thumb_img_path', null))}\n                                                 alt={_.get(post, 'frontmatter.title', null)}/>\n                                        </Link>\n                                    )}\n                                    <div className=\"post-content\">\n                                        <p>{_.get(post, 'frontmatter.excerpt', null)}</p>\n                                    </div>\n                                    {((_.get(this.props, 'pageContext.frontmatter.has_more_link', null) === true) && _.get(this.props, 'pageContext.frontmatter.more_link_text', null)) && (\n                                        <p className=\"read-more\">\n                                            <Link className=\"read-more-link\"\n                                                  to={withPrefix(_.get(post, 'url', null))}>{_.get(this.props, 'pageContext.frontmatter.more_link_text', null)}\n                                                <span className=\"icon-arrow-right\" aria-hidden=\"true\"/></Link>\n                                        </p>\n                                    )}\n                                </article>\n                            ))}\n                        </div>\n                    </main>\n                    <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext}\n                            image={_.get(this.props, 'pageContext.site.siteMetadata.header.background_img', null)}/>\n                </div>\n            </Layout>\n        );\n    }\n}\n"],"names":["Home","pages","this","props","pageContext","site","page","image","id","className","post","post_idx","key","to","withPrefix","rel","dateTime","moment","strftime","src","alt","React"],"sourceRoot":""}