{"version":3,"file":"component---src-templates-page-js-c8cf87073012314b5a4a.js","mappings":"qpEAWO,IAQcA,EAAI,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,EAAAC,EAAAJ,GAAA,SAAAA,IAAA,O,4FAAAK,CAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAyBpB,O,EAzBoBP,G,EAAA,EAAAQ,IAAA,SAAAC,MACrB,WACI,OACIC,EAAAA,cAACC,EAAAA,GAAWC,KAAKC,MACfH,EAAAA,cAACI,EAAAA,EAAMC,EAAA,GAAKH,KAAKC,MAAK,CAAEG,KAAMJ,KAAKC,MAAMI,YAAYD,KAAME,KAAMN,KAAKC,MAAMI,YAAaE,MAAOC,IAAMR,KAAKC,MAAO,mCAAoC,SACtJH,EAAAA,cAAA,OAAKW,GAAG,UAAUC,UAAU,gBAC1BZ,EAAAA,cAAA,QAAMW,GAAG,OAAOC,UAAU,mBACxBZ,EAAAA,cAAA,WAASY,UAAU,uBACjBZ,EAAAA,cAAA,UAAQY,UAAU,eAChBZ,EAAAA,cAAA,MAAIY,UAAU,cAAcF,IAAMR,KAAKC,MAAO,gCAAiC,QAEhFO,IAAMR,KAAKC,MAAO,mCAAoC,OACvDH,EAAAA,cAAA,OAAKY,UAAU,kBACZC,EAAAA,EAAAA,IAAYH,IAAMR,KAAKC,MAAO,mCAAoC,QAGrEH,EAAAA,cAAA,OAAKY,UAAU,iBACZC,EAAAA,EAAAA,IAAYH,IAAMR,KAAKC,MAAO,mBAAoB,UAIzDH,EAAAA,cAACc,EAAAA,EAAMT,EAAA,GAAKH,KAAKC,MAAK,CAAEG,KAAMJ,KAAKC,MAAMI,YAAYD,KAAME,KAAMN,KAAKC,MAAMI,YAAaE,MAAOC,IAAMR,KAAKC,MAAO,mCAAoC,UAIlK,M,8EAACb,CAAA,CAzBoB,CAASU,EAAAA,U","sources":["webpack://@jeff-tian/space/./src/templates/page.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport Header from '../components/Header';\nimport {htmlToReact} from '../utils';\nimport Footer from '../components/Footer';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Page extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main inner\">\n                  <article className=\"post page post-full\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    </header>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                    </div>\n                  </article>\n                </main>\n                <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              </div>\n            </Layout>\n        );\n    }\n}\n\nexport {Head} from \"../components/Layout\";"],"names":["Page","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","React","Layout","this","props","Header","_extends","site","pageContext","page","image","_get","id","className","htmlToReact","Footer"],"sourceRoot":""}