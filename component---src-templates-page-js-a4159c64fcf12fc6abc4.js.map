{"version":3,"file":"component---src-templates-page-js-a4159c64fcf12fc6abc4.js","mappings":"+1DAWO,IAQcA,EAAAA,SAAAA,I,qRAAAA,CAAAA,EAAAA,GAAAA,I,MAAAA,EAAAA,EAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAyBhB,O,EAzBgBA,G,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACjB,WACI,OACI,gBAAC,KAAWC,KAAKC,MACf,gBAAC,IAAD,KAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,mCAAoC,SACtJ,uBAAKK,GAAG,UAAUC,UAAU,gBAC1B,wBAAMD,GAAG,OAAOC,UAAU,mBACxB,2BAASA,UAAU,uBACjB,0BAAQA,UAAU,eAChB,sBAAIA,UAAU,cAAc,IAAMP,KAAKC,MAAO,gCAAiC,QAEhF,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,uBAAKM,UAAU,kBACZC,EAAAA,EAAAA,IAAY,IAAMR,KAAKC,MAAO,mCAAoC,QAGrE,uBAAKM,UAAU,iBACZC,EAAAA,EAAAA,IAAY,IAAMR,KAAKC,MAAO,mBAAoB,UAIzD,gBAAC,IAAD,KAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,mCAAoC,gB,8EAIjK,EAzBgBF,CAAaU,EAAAA","sources":["webpack://@jeff-tian/space/./src/templates/page.js"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport Header from '../components/Header';\nimport {htmlToReact} from '../utils';\nimport Footer from '../components/Footer';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Page extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main inner\">\n                  <article className=\"post page post-full\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    </header>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                    </div>\n                  </article>\n                </main>\n                <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path', null)} />\n              </div>\n            </Layout>\n        );\n    }\n}\n"],"names":["Page","this","props","site","pageContext","page","image","id","className","htmlToReact","React"],"sourceRoot":""}